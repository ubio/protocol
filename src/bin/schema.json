{
  "$id": "https://protocol.automationcloud.net/schema.json",
  "domains": {
    "AccountApplication": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/message"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "applicant": {
          "$ref": "#/domains/AccountApplication/types/Applicant"
        },
        "employment": {
          "$ref": "#/domains/AccountApplication/types/Employment"
        },
        "options": {
          "$ref": "#/domains/AccountApplication/types/Options",
          "default": {},
          "initial": true
        },
        "validationAccount": {
          "$ref": "#/domains/AccountApplication/types/ValidationAccount"
        },
        "selectedBranch": {
          "$ref": "#/domains/AccountApplication/types/Branch",
          "sourceOutputKey": "availableBranches",
          "inputMethod": "SelectOne"
        },
        "mobilePinConfirmation": {
          "$ref": "#/domains/AccountApplication/types/MobilePinConfirmation"
        }
      },
      "outputs": {
        "availableBranches": {
          "$ref": "#/domains/AccountApplication/types/Branches"
        },
        "confirmation": {
          "$ref": "#/domains/AccountApplication/types/Confirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Applicant": {
          "type": "object",
          "description": "The person applying for the bank account.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "address": {
              "$ref": "#/domains/AccountApplication/types/Address"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "nationality": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Nationality according to passport."
            },
            "countryOfBirth": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country of birth."
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "document": {
              "$ref": "#/domains/AccountApplication/types/IdentityDocument"
            }
          },
          "required": [
            "person",
            "dateOfBirth",
            "nationality"
          ],
          "additionalProperties": false
        },
        "Address": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "minLength": 1,
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "street": {
              "$ref": "#/domains/AccountApplication/types/Street"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "minLength": 1,
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            }
          },
          "required": [
            "city",
            "postcode"
          ],
          "additionalProperties": false
        },
        "Street": {
          "type": "object",
          "properties": {
            "prefix": {
              "type": "string",
              "description": "Calle",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "description": "Romero Robledo"
            },
            "number": {
              "type": "string",
              "description": "56"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "description": "Applicant employment details.",
          "pii": true,
          "properties": {
            "companyName": {
              "type": "string",
              "minLength": 1
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "employed-fulltime",
                "employed-parttime",
                "unemployed",
                "autonomous",
                "self-employed",
                "on-benefits",
                "retired",
                "student"
              ]
            },
            "profession": {
              "type": "string",
              "description": "",
              "enum": [
                "others",
                "administrative",
                "in-charge",
                "manager",
                "intermediate-control",
                "military",
                "worker",
                "skilled-worker",
                "teacher",
                "advanced-technician",
                "commission-seller"
              ]
            },
            "activitySector": {
              "type": "string",
              "description": "",
              "enum": [
                "others",
                "public-administration",
                "travel-agencies",
                "agriculture",
                "food-and-tobacco",
                "furniture",
                "financial",
                "commerce",
                "communication",
                "building",
                "diplomats",
                "energy-and-water",
                "teaching",
                "shows",
                "electrical-electronic-manufacturing",
                "it-services",
                "engineering",
                "metallurgy",
                "military",
                "mining",
                "paper-and-graphic-arts",
                "fishing",
                "press",
                "vehicle-repair",
                "health",
                "domestic-services",
                "textile",
                "transport"
              ]
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "otherNetIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total of other earnings (after tax)."
            },
            "netIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total net salary (after tax)."
            },
            "otherIncomeSource": {
              "type": "string",
              "enum": [
                "others",
                "movable-capital",
                "real-estate-capital"
              ]
            },
            "payFrequency": {
              "type": "string",
              "enum": [
                "monthly",
                "weekly",
                "fortnightly",
                "four-weekly"
              ]
            }
          },
          "required": [
            "status"
          ],
          "additionalProperties": false
        },
        "Branches": {
          "type": "array",
          "description": "A list of available branches found on the website.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/AccountApplication/types/Branch"
          }
        },
        "Branch": {
          "type": "object",
          "description": "Branch information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "example": "MADRID-R. VICTORIA"
            },
            "address": {
              "type": "string",
              "example": "AV. REINA VICTORIA, 58"
            },
            "phoneNumber": {
              "type": "string",
              "example": "349121257151"
            }
          },
          "required": [
            "name"
          ]
        },
        "ValidationAccount": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "example": "12121212121212"
            }
          },
          "required": [
            "number"
          ],
          "additionalProperties": false
        },
        "MobilePinConfirmation": {
          "type": "object",
          "description": "Mobile pin confirmation to confirm the applicant's mobile number.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "pin confirmation code.",
              "example": "12345678",
              "minLength": 3,
              "maxLength": 10
            }
          },
          "required": [
            "code"
          ],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Confirmation of the account.",
          "pii": true,
          "properties": {
            "message": {
              "type": "string",
              "description": "Confirmation message from the web page.",
              "example": "Your account is created."
            }
          },
          "required": [],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "AccountApplicationDeclined",
          "category": "client",
          "description": "Account application denied by Bank."
        },
        {
          "code": "MobilePinVerificationFailed",
          "category": "client",
          "description": "Pin verification failed."
        },
        {
          "code": "InvalidValidationAccountNumber",
          "category": "client",
          "description": "The validation account number is invalid, according to the supplier."
        }
      ]
    },
    "Generic": {
      "description": "Generic domain contains type definitions used in other domains.",
      "private": false,
      "inputs": {},
      "outputs": {},
      "types": {
        "Event": {
          "type": "object",
          "description": "An object describing an specific event emitted by automation job. The exact event types and data depend on the specific service.",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": "Event type, specific to an automation service."
            }
          },
          "additionalProperties": true
        },
        "Ages": {
          "type": "array",
          "description": "A list of ages of persons.",
          "items": {
            "type": "number",
            "minimum": 0,
            "maximum": 200,
            "example": 42
          }
        },
        "URL": {
          "type": "string",
          "format": "url",
          "description": "URL Record, as defined by <a href=\"https://url.spec.whatwg.org/#concept-url\" target=\"_blank\" rel=\"noopener\">WHATWG URL Standard</a>.",
          "example": "http://example.com"
        },
        "Cookies": {
          "type": "array",
          "description": "An array of cookie definitions.",
          "items": {
            "$ref": "#/domains/Generic/types/Cookie"
          }
        },
        "Cookie": {
          "type": "object",
          "description": "An object which defines a cookie. It must either contain a URL or a domain, alongisde name and value. For more information on the fields of this object, see <a href=\"https://tools.ietf.org/html/rfc6265#section-5.2\" target=\"_blank\" rel=\"noopener\">RFC 6265 section 5.2</a>.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Cookie name."
            },
            "value": {
              "type": "string",
              "description": "Cookie value."
            },
            "url": {
              "type": "string",
              "format": "url",
              "description": "The URL from which the cookie is set."
            },
            "domain": {
              "type": "string",
              "description": "Cookie domain."
            },
            "path": {
              "type": "string",
              "description": "Cookie path."
            },
            "secure": {
              "type": "boolean",
              "description": "True if cookie is secure."
            },
            "session": {
              "type": "boolean",
              "description": "True if cookie is a session cookie."
            },
            "priority": {
              "type": "string",
              "description": "Cookie priority."
            },
            "httpOnly": {
              "type": "boolean",
              "description": "True if cookie is http-only."
            },
            "sameSite": {
              "type": "string",
              "description": "Cookie same-site type."
            },
            "expires": {
              "type": "number",
              "description": "Expiration date in seconds since the epoch (January 1, 1970 UTC)."
            },
            "size": {
              "type": "number",
              "description": "Size of the cookie."
            }
          },
          "required": [
            "name",
            "value"
          ],
          "additionalProperties": true
        },
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [
            "email",
            "isExisting"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number",
            "expirationDate",
            "issueCountryCode"
          ],
          "additionalProperties": false
        },
        "ExplicitAddress": {
          "type": "object",
          "description": "Explicit address components (parsed version, used to format into various standards).",
          "pii": true,
          "properties": {
            "streetName": {
              "type": "string",
              "description": "Name of the street.",
              "minLength": 1,
              "example": "Clerkenwell Close"
            },
            "streetNumber": {
              "type": "string",
              "description": "Number of the street or other building identifier, such as house number or house name",
              "minLength": 1,
              "example": "27-31"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "citySubdivision": {
              "type": "string",
              "description": "Name of the city subdivision.",
              "minLength": 1,
              "example": "Glen Park"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            }
          },
          "required": [
            "streetName",
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ],
          "additionalProperties": false
        },
        "InlinedAddress": {
          "type": "object",
          "description": "Address components common to inlined addresses (line1, line2)",
          "pii": true,
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "minLength": 1,
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "citySubdivision": {
              "type": "string",
              "description": "Name of the city subdivision.",
              "minLength": 1,
              "example": "Glen Park"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            }
          },
          "required": [
            "line1",
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ],
          "additionalProperties": false
        },
        "Address": {
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/ExplicitAddress"
            },
            {
              "$ref": "#/domains/Generic/types/InlinedAddress"
            }
          ]
        },
        "Phone": {
          "type": "object",
          "description": "Phone information, typically used on contact details pages.",
          "pii": true,
          "properties": {
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "number": {
              "type": "string",
              "minLength": 7,
              "description": "Mobile phone number (numbers only, excluding country code).",
              "example": "123456789"
            }
          },
          "required": [
            "countryCode",
            "number"
          ],
          "additionalProperties": false
        },
        "PriceConsent": {
          "type": "object",
          "description": "Price consent object used in final price confirmation flow.<br/>When automation reaches final price (typically happens immediately before placing the order) it will emit <code>finalPrice</code> object in output and will wait for consent from you. You then need to provide the exact copy of this object as <code>finalPriceConsent</code> input.",
          "properties": {
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "price"
          ]
        },
        "Price": {
          "type": "object",
          "description": "Basic price information.",
          "properties": {
            "currencyCode": {
              "$ref": "#/domains/Generic/types/CurrencyCode"
            },
            "value": {
              "type": "integer",
              "description": "An integer in the smallest currency unit (100 for £1.00).",
              "example": "12300"
            }
          },
          "required": [
            "currencyCode",
            "value"
          ],
          "additionalProperties": false
        },
        "PriceRange": {
          "type": "object",
          "description": "Price range information.",
          "properties": {
            "currencyCode": {
              "$ref": "#/domains/Generic/types/CurrencyCode"
            },
            "min": {
              "type": "integer",
              "description": "An integer in the smallest currency unit (100 for £1.00).",
              "example": "12000"
            },
            "max": {
              "type": "integer",
              "description": "An integer in the smallest currency unit (100 for £1.00).",
              "example": "12300"
            }
          },
          "required": [
            "currencyCode",
            "min",
            "max"
          ],
          "additionalProperties": false
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "tax": {
              "$ref": "#/domains/Generic/types/Tax"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "Tax": {
          "type": "object",
          "description": "Tax information.",
          "pii": true,
          "properties": {
            "number": {
              "type": "string",
              "description": "Local tax number.",
              "example": "RO37866619"
            }
          },
          "required": [
            "number"
          ],
          "additionalProperties": false
        },
        "PaymentCard": {
          "type": "object",
          "description": "Payment information for card payment. Note: card number should not be submitted in plain text as per PCI DSS. Use <code>panToken</code> to provide it securely instead.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Card type, debit or credit.",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "holderType": {
              "type": "string",
              "description": "Card's holder type, personal or corporate.",
              "enum": [
                "personal",
                "corporate"
              ],
              "default": "corporate"
            },
            "brand": {
              "type": "string",
              "description": "Card brand, must be one of the supported card brands. Automation may fail if a specific card brand is not supported on a particular website.",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            },
            "expirationDate": {
              "type": "string",
              "description": "Expiration date in YYYY-MM format as written on card.",
              "example": "2020-04",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])$",
              "minLength": 7,
              "maxLength": 7
            },
            "name": {
              "type": "string",
              "description": "Cardholder's name as written on card.",
              "example": "Alice Smith"
            },
            "cvv": {
              "type": "string",
              "description": "Security code written on card, 3- or 4-digit number.",
              "example": "123",
              "minLength": 3,
              "maxLength": 4
            },
            "binReplacement": {
              "type": "string",
              "description": "Experimental. BIN to replace with, where possible.",
              "example": "467095",
              "minLength": 6,
              "maxLength": 6
            }
          },
          "required": [
            "type",
            "brand",
            "expirationDate",
            "name",
            "cvv"
          ],
          "additionalProperties": false
        },
        "PanToken": {
          "type": "string",
          "description": "An encrypted PAN token, obtained from Automation Cloud Vault. Please consult \"Vaulting Payment Card Information\" section of Documentation for information on how to acquire it.",
          "example": "5d41402abc4b2a76b9719d911017c592",
          "minLength": 15
        },
        "CountryCode": {
          "type": "string",
          "title": "ISO 3166-1 alpha-2 Country Code",
          "description": "ISO 3166-1 alpha-2 code representing the country. United Kingdom is officially assigned the alpha-2 code gb rather than uk. Lowercase.",
          "example": "us",
          "minLength": 2,
          "maxLength": 2,
          "enum": [
            "ad",
            "ae",
            "af",
            "ag",
            "ai",
            "al",
            "am",
            "ao",
            "aq",
            "ar",
            "as",
            "at",
            "au",
            "aw",
            "ax",
            "az",
            "ba",
            "bb",
            "bd",
            "be",
            "bf",
            "bg",
            "bh",
            "bi",
            "bj",
            "bl",
            "bm",
            "bn",
            "bo",
            "bq",
            "br",
            "bs",
            "bt",
            "bv",
            "bw",
            "by",
            "bz",
            "ca",
            "cc",
            "cd",
            "cf",
            "cg",
            "ch",
            "ci",
            "ck",
            "cl",
            "cm",
            "cn",
            "co",
            "cr",
            "cu",
            "cv",
            "cw",
            "cx",
            "cy",
            "cz",
            "de",
            "dj",
            "dk",
            "dm",
            "do",
            "dz",
            "ec",
            "ee",
            "eg",
            "eh",
            "er",
            "es",
            "et",
            "fi",
            "fj",
            "fk",
            "fm",
            "fo",
            "fr",
            "ga",
            "gb",
            "gd",
            "ge",
            "gf",
            "gg",
            "gh",
            "gi",
            "gl",
            "gm",
            "gn",
            "gp",
            "gq",
            "gr",
            "gs",
            "gt",
            "gu",
            "gw",
            "gy",
            "hk",
            "hm",
            "hn",
            "hr",
            "ht",
            "hu",
            "id",
            "ie",
            "il",
            "im",
            "in",
            "io",
            "iq",
            "ir",
            "is",
            "it",
            "je",
            "jm",
            "jo",
            "jp",
            "ke",
            "kg",
            "kh",
            "ki",
            "km",
            "kn",
            "kp",
            "kr",
            "kw",
            "ky",
            "kz",
            "la",
            "lb",
            "lc",
            "li",
            "lk",
            "lr",
            "ls",
            "lt",
            "lu",
            "lv",
            "ly",
            "ma",
            "mc",
            "md",
            "me",
            "mf",
            "mg",
            "mh",
            "mk",
            "ml",
            "mm",
            "mn",
            "mo",
            "mp",
            "mq",
            "mr",
            "ms",
            "mt",
            "mu",
            "mv",
            "mw",
            "mx",
            "my",
            "mz",
            "na",
            "nc",
            "ne",
            "nf",
            "ng",
            "ni",
            "nl",
            "no",
            "np",
            "nr",
            "nu",
            "nz",
            "om",
            "pa",
            "pe",
            "pf",
            "pg",
            "ph",
            "pk",
            "pl",
            "pm",
            "pn",
            "pr",
            "ps",
            "pt",
            "pw",
            "py",
            "qa",
            "re",
            "ro",
            "rs",
            "ru",
            "rw",
            "sa",
            "sb",
            "sc",
            "sd",
            "se",
            "sg",
            "sh",
            "si",
            "sj",
            "sk",
            "sl",
            "sm",
            "sn",
            "so",
            "sr",
            "ss",
            "st",
            "sv",
            "sx",
            "sy",
            "sz",
            "tc",
            "td",
            "tf",
            "tg",
            "th",
            "tj",
            "tk",
            "tl",
            "tm",
            "tn",
            "to",
            "tr",
            "tt",
            "tv",
            "tw",
            "tz",
            "ua",
            "ug",
            "um",
            "us",
            "uy",
            "uz",
            "va",
            "vc",
            "ve",
            "vg",
            "vi",
            "vn",
            "vu",
            "wf",
            "ws",
            "xk",
            "ye",
            "yt",
            "za",
            "zm",
            "zw"
          ]
        },
        "CountrySubdivision": {
          "type": "string",
          "description": "Full name of country subdivision (e.g. state, region, county, etc.), except for US states which require 2 letter code. Lowercased.",
          "example": "ca"
        },
        "CurrencyCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "title": "ISO 4217 Currency Code",
          "description": "ISO 4217 3-letter code representing the currency. Lowercase.",
          "example": "usd",
          "enum": [
            "aed",
            "afn",
            "all",
            "amd",
            "ang",
            "aoa",
            "ars",
            "aud",
            "awg",
            "azn",
            "bam",
            "bdt",
            "bbd",
            "bgn",
            "bhd",
            "bmd",
            "bnd",
            "bob",
            "brl",
            "bsd",
            "bwp",
            "byn",
            "bzd",
            "cad",
            "chf",
            "clp",
            "cny",
            "cop",
            "crc",
            "cup",
            "cve",
            "czk",
            "djf",
            "dkk",
            "dop",
            "dzd",
            "egp",
            "etb",
            "eur",
            "fjd",
            "fkp",
            "gbp",
            "gel",
            "ggp",
            "ghs",
            "gip",
            "gtq",
            "gyd",
            "hkd",
            "hnl",
            "hrk",
            "huf",
            "idr",
            "ils",
            "imp",
            "inr",
            "iqd",
            "irr",
            "isk",
            "jep",
            "jmd",
            "jod",
            "jpy",
            "kes",
            "kgs",
            "khr",
            "kpw",
            "krw",
            "kwd",
            "kyd",
            "kzt",
            "lak",
            "lbp",
            "lkr",
            "lrd",
            "mad",
            "mkd",
            "mmk",
            "mnt",
            "mop",
            "mur",
            "mvr",
            "mxn",
            "myr",
            "mzn",
            "nad",
            "ngn",
            "nio",
            "nok",
            "npr",
            "nzd",
            "omr",
            "pab",
            "pen",
            "pgk",
            "php",
            "pkr",
            "pln",
            "pyg",
            "qar",
            "ron",
            "rsd",
            "rub",
            "rwf",
            "sar",
            "sbd",
            "scr",
            "sek",
            "sgd",
            "shp",
            "sos",
            "srd",
            "svc",
            "syp",
            "thb",
            "tjs",
            "tnd",
            "try",
            "ttd",
            "tvd",
            "twd",
            "tzs",
            "uah",
            "ugx",
            "usd",
            "uyu",
            "uzs",
            "vef",
            "ves",
            "vnd",
            "xaf",
            "xcd",
            "xof",
            "yer",
            "zar",
            "zmw",
            "zwd"
          ]
        },
        "StructuredText": {
          "type": "object",
          "description": "A list of structured text.",
          "properties": {
            "type": {
              "enum": [
                "StructuredText"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the text grouping."
            },
            "contents": {
              "type": "array",
              "description": "An array of structured text items.",
              "items": {
                "$ref": "#/domains/Generic/types/StructuredTextItem"
              }
            }
          },
          "required": [
            "type",
            "name",
            "contents"
          ],
          "additionalProperties": false
        },
        "StructuredPrice": {
          "type": "object",
          "description": "A list of structured text.",
          "properties": {
            "type": {
              "enum": [
                "StructuredPrice"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the text grouping."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "priceLine": {
              "type": "string"
            },
            "description": {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            },
            "contents": {
              "type": "array",
              "description": "An array of structured text items.",
              "items": {
                "$ref": "#/domains/Generic/types/StructuredTextItem"
              }
            }
          },
          "required": [
            "type",
            "name",
            "price"
          ],
          "additionalProperties": false
        },
        "StructuredTextItem": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/StructuredText"
            },
            {
              "$ref": "#/domains/Generic/types/File"
            },
            {
              "$ref": "#/domains/Generic/types/Link"
            },
            {
              "$ref": "#/domains/Generic/types/NamedText"
            },
            {
              "$ref": "#/domains/Generic/types/StructuredPrice"
            },
            {
              "$ref": "#/domains/Generic/types/NamedPrice"
            },
            {
              "$ref": "#/domains/Generic/types/HTML"
            },
            {
              "$ref": "#/domains/Generic/types/Text"
            }
          ]
        },
        "StructuredTextItems": {
          "type": "array",
          "description": "List of available structured text items.",
          "items": {
            "$ref": "#/domains/Generic/types/StructuredTextItem"
          }
        },
        "File": {
          "type": "object",
          "description": "A document downloaded from the target website.<br/>To retrieve this document, you must include the <strong>SECRET_KEY</strong> authorisation header with your request.",
          "properties": {
            "type": {
              "enum": [
                "File"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the document."
            },
            "url": {
              "type": "string",
              "description": "Location of the resource."
            },
            "filename": {
              "type": "string",
              "description": "The name of the file, including the extension."
            },
            "headers": {
              "type": "object",
              "description": "List of relevant headers associated with the uri.",
              "items": {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": {
                  "type": "string"
                }
              },
              "example": [
                {
                  "Authorization": "Bearer abc123"
                }
              ]
            }
          },
          "required": [
            "type",
            "url",
            "filename"
          ],
          "additionalProperties": false
        },
        "Link": {
          "type": "object",
          "description": "A document accessible on the target website.",
          "properties": {
            "type": {
              "enum": [
                "Link"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the document."
            },
            "url": {
              "type": "string",
              "format": "url",
              "description": "Location of the resource."
            }
          },
          "required": [
            "type",
            "name",
            "url"
          ],
          "additionalProperties": false
        },
        "NamedText": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "NamedText"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the text."
            },
            "text": {
              "type": "string",
              "description": "Location of the resource."
            }
          },
          "required": [
            "type",
            "name",
            "text"
          ],
          "additionalProperties": false
        },
        "NamedPrice": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "NamedPrice"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the price."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type",
            "name",
            "price"
          ],
          "additionalProperties": false
        },
        "Text": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "Text"
              ]
            },
            "text": {
              "type": "string",
              "description": "Location of the resource."
            }
          },
          "required": [
            "type",
            "text"
          ],
          "additionalProperties": false
        },
        "NamedContents": {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "NamedContents"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name or title of the text."
            },
            "contents": {
              "type": "array",
              "description": "An array of structured text items.",
              "items": {
                "$ref": "#/domains/Generic/types/StructuredTextItem"
              }
            }
          },
          "required": [
            "type",
            "name",
            "contents"
          ],
          "additionalProperties": false
        },
        "HTML": {
          "type": "object",
          "description": "Inner HTML contents of an element.",
          "properties": {
            "type": {
              "enum": [
                "HTML"
              ]
            },
            "name": {
              "type": "string",
              "description": "Optional name or title of the HTML section."
            },
            "html": {
              "type": "string",
              "description": "HTML contents."
            }
          },
          "required": [
            "type",
            "html"
          ],
          "additionalProperties": false
        },
        "AnyPhoneString": {
          "type": "string",
          "description": "Any phone-like string. Must only contain digits and symbol separators (parens, dashes, plus sign, spaces, other common phone number separators.",
          "example": "+44 (0) 747-444-7447"
        }
      },
      "errors": [
        {
          "code": "InputInvalid",
          "category": "client",
          "description": "Failed to create a job due to invalid input"
        },
        {
          "code": "JobCancelled",
          "category": "client",
          "description": "Job cancelled by client"
        },
        {
          "code": "InputTimeout",
          "category": "client",
          "description": "Input was not provided within 15 minutes"
        },
        {
          "code": "TdsTimeout",
          "category": "client",
          "description": "3D Secure was not completed by the card holder"
        },
        {
          "code": "InputRejected",
          "category": "client",
          "description": "Replacement for rejected input was not provided within 15 minutes"
        },
        {
          "code": "PaymentRejected",
          "category": "client",
          "description": "Payment rejected due to a problem with the card. A message will be forwarded from the website if available"
        },
        {
          "code": "CardDetailsInvalid",
          "category": "client",
          "description": "Unable to process payment as card details are invalid"
        },
        {
          "code": "AddressInvalid",
          "category": "client",
          "description": "Invalid address provided"
        },
        {
          "code": "AccountDetailsInvalid",
          "category": "client",
          "description": "Cannot sign in as invalid account details provided"
        },
        {
          "code": "PaymentDetailsInvalid",
          "category": "client",
          "description": "Cannot submit or process the payment because the payment details provided are invalid."
        },
        {
          "code": "CardTypeNotSupported",
          "category": "client",
          "description": "Cannot submit or process the payment because the card type is not supported by this supplier."
        },
        {
          "code": "UrlInvalid",
          "category": "client",
          "description": "Invalid url provided"
        },
        {
          "code": "UnsupportedWebsiteLanguage",
          "category": "client",
          "description": "The deeplink or url landed on a page in an unsupported language."
        },
        {
          "code": "FinalPriceNotFound",
          "category": "client",
          "description": "Final price provided does not match expectation"
        },
        {
          "code": "PanTokenInvalid",
          "category": "client",
          "description": "Invalid pan token provided"
        },
        {
          "code": "CookieInvalid",
          "category": "client",
          "description": "Invalid cookie provided"
        },
        {
          "code": "PriceRangeExceeded",
          "category": "client",
          "description": "Price range exceeded input specifications."
        },
        {
          "code": "AuthenticationError",
          "category": "client",
          "description": "The authentication attempt failed."
        },
        {
          "code": "PriceChangedAfterConsent",
          "category": "website",
          "description": "Price changed after final price consent."
        },
        {
          "code": "WebsiteValidationFailed",
          "category": "website",
          "description": "Website's validation rule doesn't allow the input data"
        },
        {
          "code": "SystemUnavailable",
          "category": "website",
          "description": "Website system is down/Website doesn't work at the moment"
        },
        {
          "code": "KnownLimitation",
          "category": "website",
          "description": "Cannot process due to known limitation"
        },
        {
          "code": "GenericWebsiteError",
          "category": "website",
          "description": "Website threw general error during automation process. A message will be forwarded from the website if available"
        },
        {
          "code": "UnableToContinueProcess",
          "category": "website",
          "description": "Process couldn't reach the final step. Website finished the process early",
          "example": "Unable to purchase online"
        },
        {
          "code": "SessionExpired",
          "category": "website",
          "description": "The website timed out the session. Each website has its own timeout settings, usually after inactivity such as waiting too long for an input.",
          "example": "Your basket has expired, you must complete the purchase within 5 minutes."
        },
        {
          "code": "ServerError",
          "category": "server",
          "description": "Server Error"
        },
        {
          "code": "JobTimeout",
          "category": "server",
          "description": "Job timeout after an hour of job creation without reaching the final step."
        },
        {
          "code": "BotDetection",
          "category": "server",
          "description": "The automation could not continue because it was bot detected and the available countermeasures did not work around the issue."
        }
      ]
    },
    "FlightBooking": {
      "description": "Allows automating airplane tickets booking on airline websites and OTAs.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "dataExtractionDomainId": "FlightBookingExtraction",
      "inputs": {
        "options": {
          "$ref": "#/domains/FlightBooking/types/Options",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
          "initial": true
        },
        "search": {
          "$ref": "#/domains/FlightBooking/types/Search",
          "initial": true
        },
        "selectedOutboundFlight": {
          "$ref": "#/domains/FlightBooking/types/Flight",
          "sourceOutputKey": "availableOutboundFlights",
          "inputMethod": "SelectOne"
        },
        "selectedInboundFlight": {
          "$ref": "#/domains/FlightBooking/types/Flight",
          "sourceOutputKey": "availableInboundFlights",
          "inputMethod": "SelectOne"
        },
        "itinerary": {
          "$ref": "#/domains/FlightBooking/types/Itinerary",
          "description": "Deprecated. See <a href=\"#search\">/search</a> and <a href=\"#selectedOutboundFlight\">/selectedOutboundFlight</a>.",
          "deprecated": true
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "accountVerification": {
          "$ref": "#/domains/FlightBooking/types/VerificationString"
        },
        "deviceVerification": {
          "$ref": "#/domains/FlightBooking/types/VerificationString"
        },
        "passengers": {
          "$ref": "#/domains/FlightBooking/types/Passengers",
          "canonical": [
            "/0/firstName",
            "/0/lastName",
            "/0/dateOfBirth"
          ]
        },
        "additionalLuggage": {
          "$ref": "#/domains/FlightBooking/types/PassengersAdditionalLuggage",
          "description": "A list of additional luggage to be purchased per passenger. The cartinality of this array must match the one of passengers."
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "selectedOutboundFare": {
          "$ref": "#/domains/FlightBooking/types/Fare",
          "description": "Requested when fare selection for outbound flight is required by website.<br/>At this point <code>availableOutboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available.",
          "sourceOutputKey": "availableOutboundFares",
          "inputMethod": "SelectOne"
        },
        "selectedInboundFare": {
          "$ref": "#/domains/FlightBooking/types/Fare",
          "description": "Requested when fare selection for inbound flight is required by website.<br/>At this point <code>availableInboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available.",
          "sourceOutputKey": "availableInboundFares",
          "inputMethod": "SelectOne"
        },
        "selectedSeats": {
          "$ref": "#/domains/FlightBooking/types/SelectedSegmentSeats",
          "sourceOutputKey": "availableSeats",
          "inputMethod": "SeatSelection",
          "dynamic": true
        },
        "voucher": {
          "$ref": "#/domains/FlightBooking/types/Voucher",
          "description": "Discount voucher."
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        },
        "cancelBooking": {
          "$ref": "#/domains/FlightBooking/types/Boolean"
        }
      },
      "outputs": {
        "cookies": {
          "$ref": "#/domains/Generic/types/Cookies"
        },
        "availableOutboundFlights": {
          "$ref": "#/domains/FlightBooking/types/Flights"
        },
        "availableInboundFlights": {
          "$ref": "#/domains/FlightBooking/types/Flights"
        },
        "availableOutboundFares": {
          "$ref": "#/domains/FlightBooking/types/AvailableFares",
          "description": "Emitted when actual outbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "availableInboundFares": {
          "$ref": "#/domains/FlightBooking/types/AvailableFares",
          "description": "Emitted when actual inbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "selectableLuggage": {
          "$ref": "#/domains/FlightBooking/types/ListOfLuggageWithPrice",
          "description": "The luggage which can be selected for the passengers."
        },
        "availableSeats": {
          "$ref": "#/domains/FlightBooking/types/AvailableSegmentSeats",
          "dynamic": true
        },
        "availableFrequentFlyerProgrammes": {
          "$ref": "#/domains/FlightBooking/types/AvailableFrequentFlyerProgrammes",
          "description": "Where available, the list of frequent flyer programmes available on the website."
        },
        "fareRules": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when fare rules are presented."
        },
        "conditionsOfCarriage": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when conditions of carriage is presented."
        },
        "bookingTermsAndConditions": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when booking T&Cs are presented."
        },
        "privacyPolicy": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the privacy policy is presented."
        },
        "voucherDetails": {
          "$ref": "#/domains/FlightBooking/types/VoucherDetails",
          "description": "Voucher details"
        },
        "estimatedPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Price shown by the website prior to requiring passenger information.<br/>On many flight booking websites, it is possible to view an estimated price without entering passenger details, provided that the deeplink works and goes past the home page, where the count of passengers and their ages are usually required. This estimated price is emitted when the automation reaches a page where passenger or billing information is required, as long as the price is displayed.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "priceBreakdown": {
          "$ref": "#/domains/FlightBooking/types/PriceBreakdown",
          "description": "The list of price components, as found on the website."
        },
        "estimatedPriceBreakdown": {
          "$ref": "#/domains/FlightBooking/types/PriceBreakdown",
          "description": "The list of estimated price components, as found on the website."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/FlightBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "selectCheapestFare": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will select the cheapest fare without requesting or using selected*boundFare inputs.",
              "default": false
            },
            "voucher": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will request the voucher input before payment.",
              "default": false
            },
            "seatSelection": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will request <code>selectedSeats</code> for seat selection.",
              "default": false
            },
            "lhBookingRef": {
              "type": "string"
            },
            "clientReference": {
              "type": "string"
            },
            "priceCheck": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "Itinerary": {
          "type": "object",
          "description": "Deprecated. See <a href=\"#Search\">Search</a> and <a href=\"#FlightSearch\">FlightSearch</a> instead.<br/>Information about flights and cabin class preference.",
          "deprecated": true,
          "properties": {
            "cabinClass": {
              "$ref": "#/domains/FlightBooking/types/CabinClass",
              "description": "Preferred cabin class, used on flight search forms."
            },
            "outbound": {
              "$ref": "#/domains/FlightBooking/types/Flight",
              "description": "Outbound flight specification."
            },
            "inbound": {
              "$ref": "#/domains/FlightBooking/types/Flight",
              "description": "Inbound (return) flight specification. If omitted, one-way flight booking flow is used."
            }
          },
          "required": [
            "cabinClass",
            "outbound"
          ],
          "additionalProperties": false
        },
        "Search": {
          "type": "object",
          "description": "Information about flights and cabin class preference.",
          "properties": {
            "cabinClass": {
              "$ref": "#/domains/FlightBooking/types/CabinClass",
              "description": "Preferred cabin class, used on flight search forms."
            },
            "outbound": {
              "$ref": "#/domains/FlightBooking/types/FlightSearch",
              "description": "Outbound flight specification."
            },
            "inbound": {
              "$ref": "#/domains/FlightBooking/types/FlightSearch",
              "description": "Inbound (return) flight specification. If omitted, one-way flight booking flow is used."
            },
            "passengerAges": {
              "$ref": "#/domains/Generic/types/Ages",
              "description": "Ages of all passengers.",
              "example": [
                34,
                31,
                9
              ]
            }
          },
          "required": [
            "cabinClass",
            "outbound",
            "passengerAges"
          ],
          "additionalProperties": false
        },
        "FlightSearch": {
          "type": "object",
          "description": "Outbound and inbound flights specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/FlightBooking/types/DateAirport"
            },
            "destination": {
              "$ref": "#/domains/FlightBooking/types/DateAirport"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "Flights": {
          "type": "array",
          "description": "An array with details for each flight.",
          "items": {
            "$ref": "#/domains/FlightBooking/types/Flight"
          },
          "minItems": 1
        },
        "Flight": {
          "type": "object",
          "description": "Outbound and inbound flights specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/FlightBooking/types/DateTimeAirport"
            },
            "destination": {
              "$ref": "#/domains/FlightBooking/types/DateTimeAirport"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "CabinClass": {
          "type": "string",
          "enum": [
            "economy",
            "premium economy",
            "business",
            "first"
          ]
        },
        "DateAirport": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date",
              "description": "Date of flight (airport local date).",
              "example": "2019-01-01"
            },
            "airportCode": {
              "$ref": "#/domains/FlightBooking/types/AirportCode"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of airport.",
              "example": "us"
            }
          },
          "required": [
            "date",
            "airportCode"
          ],
          "additionalProperties": false
        },
        "DateTimeAirport": {
          "type": "object",
          "properties": {
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time of flight (airport local time).",
              "example": "2018-02-02 19:40"
            },
            "airportCode": {
              "$ref": "#/domains/FlightBooking/types/AirportCode"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of airport.",
              "example": "us"
            }
          },
          "required": [
            "dateTime",
            "airportCode"
          ],
          "additionalProperties": false
        },
        "AirportCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[A-Z]{3}$",
          "description": "International Air Transport Association airport code.",
          "example": "SFO"
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBooking/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            },
            "frequentFlyer": {
              "$ref": "#/domains/FlightBooking/types/PassengerFrequentFlyer"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "PassengersAdditionalLuggage": {
          "type": "array",
          "description": "The cardinality of this array must match that of the passengers. A mismatch leads to the input being invalidated.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/domains/FlightBooking/types/LuggageWithWeight"
            }
          }
        },
        "AvailableFares": {
          "type": "array",
          "description": "A list of available fares found on the website.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBooking/types/Fare"
          }
        },
        "Fare": {
          "type": "object",
          "description": "Flight fare information.",
          "additionalProperties": false,
          "properties": {
            "cabinClass": {
              "$ref": "#/domains/FlightBooking/types/CabinClass"
            },
            "fareName": {
              "type": "string",
              "description": "Fare marketing name as provided by airline.",
              "example": "Business Flex"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "services": {
              "type": "array",
              "items": {
                "$ref": "#/domains/Generic/types/StructuredTextItem"
              }
            },
            "luggage": {
              "type": "array",
              "description": "A list of luggage with price.",
              "items": {
                "$ref": "#/domains/FlightBooking/types/LuggageBasic"
              }
            }
          },
          "required": [
            "fareName",
            "cabinClass",
            "price"
          ]
        },
        "LuggageBasic": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "under-seat",
                "cabin",
                "checked"
              ],
              "example": "economy"
            },
            "count": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "example": 1
            },
            "weight": {
              "type": "string",
              "example": "10kg"
            },
            "size": {
              "type": "string",
              "example": "40cm x 20cm x 25cm"
            }
          },
          "required": [
            "type",
            "count"
          ]
        },
        "LuggageWithWeight": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "under-seat",
                "cabin",
                "checked"
              ],
              "example": "economy"
            },
            "count": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "example": 1
            },
            "weight": {
              "type": "string",
              "example": "10kg"
            },
            "size": {
              "type": "string",
              "example": "40cm x 20cm x 25cm"
            }
          },
          "required": [
            "type",
            "count",
            "weight"
          ]
        },
        "LuggageWithPrice": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "under-seat",
                "cabin",
                "checked"
              ],
              "example": "economy"
            },
            "weight": {
              "type": "string",
              "example": "10kg"
            },
            "size": {
              "type": "string",
              "example": "40cm x 20cm x 25cm"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Luggage price. This is the cost of luggage"
            },
            "maxPerPassenger": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "example": 1
            },
            "maxPerGroup": {
              "type": "number",
              "minimum": 1,
              "maximum": 20,
              "example": 1
            }
          },
          "required": [
            "type",
            "price",
            "weight"
          ]
        },
        "ListOfLuggageWithWeight": {
          "type": "array",
          "description": "A list of luggage with weight.",
          "items": {
            "$ref": "#/domains/FlightBooking/types/LuggageWithWeight"
          }
        },
        "ListOfLuggageWithPrice": {
          "type": "array",
          "description": "A list of luggage with price.",
          "items": {
            "$ref": "#/domains/FlightBooking/types/LuggageWithPrice"
          }
        },
        "SelectedSegmentSeats": {
          "type": "object",
          "description": "Selected seats information.",
          "properties": {
            "segment": {
              "type": "string",
              "description": "Flight segments name as displayed on website.",
              "pattern": "^[A-Z]{3} to [A-Z]{3}$",
              "example": "LTN to ZRH"
            },
            "seats": {
              "type": "array",
              "items": {
                "$ref": "#/domains/FlightBooking/types/SeatNumber"
              }
            }
          },
          "required": [
            "seats"
          ],
          "additionalProperties": false
        },
        "AvailableSegmentSeats": {
          "type": "object",
          "description": "Seat availability information.",
          "properties": {
            "segment": {
              "type": "string",
              "description": "Flight leg name as displayed on website.",
              "example": "LTN to ZRH, Wed 7th Mar"
            },
            "seats": {
              "type": "array",
              "items": {
                "$ref": "#/domains/FlightBooking/types/Seat"
              }
            }
          },
          "required": [
            "segment",
            "seats"
          ],
          "additionalProperties": false
        },
        "Seat": {
          "type": "object",
          "description": "Seat metadata.",
          "properties": {
            "seatNumber": {
              "$ref": "#/domains/FlightBooking/types/SeatNumber"
            },
            "available": {
              "type": "boolean",
              "description": "<code>true</code> if website allows selecting this seat, <code>false</code> otherwise."
            },
            "restricted": {
              "type": "boolean",
              "description": "<code>true</code> if seat has restrictions for certain groups of passengers."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Seat price, if such information is available."
            }
          },
          "required": [
            "seatNumber",
            "available"
          ],
          "additionalProperties": false
        },
        "SeatNumber": {
          "type": "string",
          "description": "Seat number as extracted from website.",
          "example": "7A"
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "PriceBreakdown": {
          "type": "array",
          "description": "The list of price components, as found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/FlightBooking/types/PriceBreakdownItem"
          }
        },
        "PriceBreakdownItem": {
          "type": "object",
          "description": "A component of the price breakdown.",
          "properties": {
            "text": {
              "type": "string",
              "description": "The description of an item on the price breakdown list, as found on the website.",
              "example": "Credit card charge"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "text",
            "price"
          ]
        },
        "PassengerFrequentFlyer": {
          "type": "object",
          "description": "Frequent flyer identification information",
          "properties": {
            "number": {
              "type": "string",
              "description": "Frequent flyer number",
              "example": "abc123456789"
            },
            "airlineName": {
              "type": "string",
              "description": "Complete English name of the airline",
              "example": "British Airways"
            },
            "programName": {
              "type": "string",
              "description": "Branding name of the frequent flyer programme, as defined by the airline",
              "example": "Avios Travel Rewards Programme"
            }
          },
          "required": [
            "number"
          ]
        },
        "AvailableFrequentFlyerProgrammes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "example": [
            "Miles & More",
            "Frequent Flyer Points Plus"
          ]
        },
        "Voucher": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "description": "Voucher number",
              "example": "abc123456789"
            }
          },
          "required": [
            "number"
          ],
          "additionalProperties": false
        },
        "VoucherDetails": {
          "type": "object",
          "properties": {
            "overallValue": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Total amount the voucher is worth."
            },
            "deductedValue": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Amount the voucher deducts from the price."
            }
          },
          "required": [
            "deductedValue"
          ],
          "additionalProperties": false
        },
        "VerificationString": {
          "type": "string",
          "description": "Account verification challenge, usually a code or a link.",
          "example": "ABC123"
        },
        "Boolean": {
          "type": "boolean",
          "example": false
        }
      },
      "errors": [
        {
          "code": "PassengerDetailsInvalid",
          "category": "client",
          "description": "Passenger details invalid"
        },
        {
          "code": "OutboundFlightDateInvalid",
          "category": "client",
          "description": "Outbound flight date is not accepted by the website",
          "example": "Selected date is too close"
        },
        {
          "code": "InboundFlightDateInvalid",
          "category": "client",
          "description": "Inbound flight date is not accepted by the website",
          "example": "Selected date is too close"
        },
        {
          "code": "DateOfBirthInvalid",
          "category": "client",
          "description": "Date of birth is not accepted by the website",
          "example": "Child must be younger than 12"
        },
        {
          "code": "DocumentIssueDateInvalid",
          "category": "client",
          "description": "Document issue date is not accepted by the website",
          "example": "The issue date cannot be after today's date"
        },
        {
          "code": "DocumentExpiryDateInvalid",
          "category": "client",
          "description": "Document expiration date is not accepted by the website",
          "example": "Document should be valid for more than 3 months"
        },
        {
          "code": "OutboundFlightNotAvailable",
          "category": "client",
          "description": "Outbound flight is not found",
          "example": "Flight is not available on given date"
        },
        {
          "code": "InboundFlightNotAvailable",
          "category": "client",
          "description": "Inbound flight is not found",
          "example": "Flight is not available on given date"
        },
        {
          "code": "OriginAirportNotFound",
          "category": "client",
          "description": "Airport is not found with given airport code"
        },
        {
          "code": "DestinationAirportNotFound",
          "category": "client",
          "description": "Airport is not found with given airport code"
        },
        {
          "code": "CabinClassNotFound",
          "category": "client",
          "description": "Given cabin class is not found on the website"
        },
        {
          "code": "OutboundFareNotFound",
          "category": "client",
          "description": "Given outbound fare does not match one of the options we are expecting"
        },
        {
          "code": "InboundFareNotFound",
          "category": "client",
          "description": "Given inbound fare does not match one of the options we are expecting"
        },
        {
          "code": "SeatNotFound",
          "category": "client",
          "description": "Given seat does not match one of the options we are expecting"
        },
        {
          "code": "SeatSelectionNotAvailable",
          "category": "client",
          "description": "Client asked for seat selection but it's not available for the website"
        },
        {
          "code": "LoadingFailed",
          "category": "client",
          "description": "A website issue in which the page gets stuck in infinite loading."
        },
        {
          "code": "LuggageCannotBeAdded",
          "category": "client",
          "description": "Luggage cannot be added",
          "example": "Cannot add an additional luggage for selected fare."
        },
        {
          "code": "PassengerDocumentRequired",
          "category": "client",
          "description": "Passenger document (passport or other travel document) is required by the website"
        },
        {
          "code": "DuplicateBooking",
          "category": "client",
          "description": "The website claims this is a duplicate booking attempt."
        },
        {
          "code": "VoucherDetailsInvalid",
          "category": "client",
          "description": "The website claims this voucher's details are not valid (number or name mismatch)."
        },
        {
          "code": "PriceCheck",
          "category": "client",
          "description": "This was a price check, not a booking attempt."
        }
      ]
    },
    "BookingTRV": {
      "description": "Automating hotel booking.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Url of Forwarder which will be redirected to advertisers landing page."
        },
        "guest_first_name": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_last_name": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_email": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_phone_number": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_street": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_house_number": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_city": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "guest_zip": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "card_pan_token": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "card_expiration_date": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "card_cvv": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "card_bank_name": {
          "$ref": "#/domains/BookingTRV/types/String"
        }
      },
      "outputs": {
        "advertiser_lp_price": {
          "$ref": "#/domains/Generic/types/Price"
        },
        "booking_price_net": {
          "$ref": "#/domains/Generic/types/Price"
        },
        "booking_price_tax": {
          "$ref": "#/domains/Generic/types/Price"
        },
        "booking_price_gross": {
          "$ref": "#/domains/Generic/types/Price"
        },
        "trv_reference": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "booking_id": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "booking_timestamp": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "clickout_timestamp": {
          "$ref": "#/domains/BookingTRV/types/String"
        },
        "booking_url": {
          "$ref": "#/domains/BookingTRV/types/String"
        }
      },
      "types": {
        "String": {
          "type": "string"
        }
      },
      "errors": [
        {
          "code": "JobInputError",
          "category": "client",
          "description": "Script inputs are faulty"
        },
        {
          "code": "JobPaymentError",
          "category": "client",
          "description": "Payment failed"
        },
        {
          "code": "JobPageError",
          "category": "client",
          "description": "An Error occurred on the crawled page"
        },
        {
          "code": "ContextLimitError",
          "category": "client",
          "description": "No Context with non reached visit limit matches"
        },
        {
          "code": "JobBotDetectionError",
          "category": "client",
          "description": "The automation was detected as a bot"
        }
      ]
    },
    "ClickoutTRV": {
      "description": "Spidering Trivago to get a Forwarder Url.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "advertiser_id": {
          "$ref": "#/domains/ClickoutTRV/types/String"
        },
        "trv_email": {
          "$ref": "#/domains/ClickoutTRV/types/String"
        },
        "trv_password": {
          "$ref": "#/domains/ClickoutTRV/types/String"
        }
      },
      "outputs": {
        "forwarder_url": {
          "$ref": "#/domains/ClickoutTRV/types/String"
        },
        "clickout_price": {
          "$ref": "#/domains/Generic/types/Price"
        }
      },
      "types": {
        "String": {
          "type": "string"
        },
        "Email": {
          "type": "string",
          "format": "email"
        }
      },
      "errors": []
    },
    "CoachBooking": {
      "description": "Automates bus and chack tickets booking on websites.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to one of the checkout flow pages."
        },
        "search": {
          "$ref": "#/domains/CoachBooking/types/Search",
          "initial": true
        },
        "selectedOutboundTrip": {
          "$ref": "#/domains/CoachBooking/types/Trip",
          "sourceOutputKey": "availableOutboundTrips",
          "inputMethod": "SelectOne"
        },
        "selectedInboundTrip": {
          "$ref": "#/domains/CoachBooking/types/Trip",
          "sourceOutputKey": "availableInboundTrips",
          "inputMethod": "SelectOne"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account",
          "canonical": [
            "/email"
          ]
        },
        "passengers": {
          "$ref": "#/domains/CoachBooking/types/Passengers"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "smsConfirmation": {
          "$ref": "#/domains/CoachBooking/types/VerificationCode",
          "description": "An SMS confirmation for authorizing the payment. Occurs in some of the transactions in place of 3dsecure."
        },
        "options": {
          "$ref": "#/domains/CoachBooking/types/Options",
          "default": {},
          "initial": true
        }
      },
      "outputs": {
        "availableOutboundTrips": {
          "$ref": "#/domains/CoachBooking/types/Trips"
        },
        "availableInboundTrips": {
          "$ref": "#/domains/CoachBooking/types/Trips"
        },
        "estimatedPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Price shown by the website prior to requiring passenger information.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/CoachBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "Search": {
          "type": "object",
          "description": "Information about the trip.",
          "properties": {
            "outbound": {
              "$ref": "#/domains/CoachBooking/types/CoachSearch",
              "description": "Outbound trip specification."
            },
            "inbound": {
              "$ref": "#/domains/CoachBooking/types/CoachSearch",
              "description": "Inbound (return) trip specification. If omitted, one-way trip booking flow is used."
            },
            "passengerAges": {
              "$ref": "#/domains/Generic/types/Ages",
              "description": "Ages of all passengers.",
              "example": [
                34,
                31,
                9
              ]
            }
          },
          "required": [
            "outbound",
            "passengerAges"
          ],
          "additionalProperties": false
        },
        "CoachSearch": {
          "type": "object",
          "description": "Outbound and inbound trips specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/CoachBooking/types/DateTerminal"
            },
            "destination": {
              "$ref": "#/domains/CoachBooking/types/DateTerminal"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "DateTerminal": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date",
              "description": "Date of trip (terminal local date).",
              "example": "2019-01-01"
            },
            "terminalLocality": {
              "type": "string",
              "description": "Terminal locality, usually city name.",
              "example": "London"
            },
            "terminalName": {
              "type": "string",
              "description": "Name of the terminal as found on the booking website.",
              "example": "London Liverpool Street"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of the terminal.",
              "example": "gb"
            }
          },
          "required": [
            "date",
            "terminalLocality",
            "terminalName"
          ],
          "additionalProperties": false
        },
        "Trips": {
          "type": "array",
          "description": "An array of trips.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/CoachBooking/types/Trip"
          }
        },
        "Trip": {
          "type": "object",
          "description": "Outbound and inbound specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/CoachBooking/types/DateTimeTerminal"
            },
            "destination": {
              "$ref": "#/domains/CoachBooking/types/DateTimeTerminal"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "DateTimeTerminal": {
          "type": "object",
          "properties": {
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time (terminal local time).",
              "example": "2018-02-02 19:40"
            },
            "terminalLocality": {
              "type": "string",
              "description": "Terminal locality, usually city name.",
              "example": "London"
            },
            "terminalName": {
              "type": "string",
              "description": "Name of the terminal as found on the booking website.",
              "example": "London Liverpool Street"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of the terminal.",
              "example": "gb"
            }
          },
          "required": [
            "dateTime",
            "terminalLocality",
            "terminalName"
          ],
          "additionalProperties": false
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/CoachBooking/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "document": {
              "$ref": "#/domains/CoachBooking/types/PassengerDocument"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth",
            "addAdditionalLuggage"
          ],
          "additionalProperties": false
        },
        "PassengerDocument": {
          "type": "object",
          "description": "Passenger ID (passport or other travel document). Automation may fail if this information is required by website, but not provided by Client.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number",
            "expirationDate",
            "issueCountryCode"
          ],
          "additionalProperties": false
        },
        "VerificationCode": {
          "type": "object",
          "description": "Verification code",
          "properties": {
            "code": {
              "type": "string",
              "example": "1234"
            }
          },
          "required": [
            "code"
          ]
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features such as upsells and additional features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end."
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      },
      "errors": [
        {
          "code": "TripInvalid",
          "category": "client",
          "description": "Trip details are invalid."
        },
        {
          "code": "OutboundTripNotAvailable",
          "category": "client",
          "description": "Outbound trip dates/times are not available, either sold out or not found."
        },
        {
          "code": "ExtraLuggageNotAvailable",
          "category": "client",
          "description": "The website does not allow adding additional luggage."
        },
        {
          "code": "ExtraLuggageLimitExceeded",
          "category": "client",
          "description": "The website does not allow adding the amount of additional luggage specified in the input."
        },
        {
          "code": "PassengerDetailsInvalid",
          "category": "client",
          "description": "The website invalidates some of the passenger details."
        },
        {
          "code": "DocumentDetailsInavlid",
          "category": "client",
          "description": "The website invalidates the document details."
        },
        {
          "code": "SeatsNotAvailable",
          "category": "client",
          "description": "The website claims that either no seats are available, or the selected seats are not available."
        }
      ]
    },
    "Checkin": {
      "description": "Allows automating hotel booking check-in.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/Checkin/types/Account",
          "description": "If required, used for logging in."
        },
        "bookingReference": {
          "$ref": "#/domains/Checkin/types/PiiString",
          "description": "Hotel booking reference code."
        },
        "checkInText": {
          "$ref": "#/domains/Checkin/types/PiiString",
          "description": "Optional comment made by the hotel regarding the check-in status."
        }
      },
      "outputs": {},
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        },
        {
          "code": "ContactDetailsInvalid",
          "category": "client",
          "description": "Invalid contact details."
        }
      ]
    },
    "ReservationList": {
      "description": "Allows automating hotel reservation list retrieval.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/ReservationList/types/Account",
          "description": "If required, used for logging in."
        },
        "bookingReference": {
          "$ref": "#/domains/ReservationList/types/PiiString",
          "description": "Hotel booking reference code."
        },
        "loginConfirmationCode": {
          "$ref": "#/domains/ReservationLookup/types/PiiString",
          "description": "2F authentication code for login."
        }
      },
      "outputs": {
        "bookingsUrl": {
          "$ref": "#/domains/ReservationList/types/Bookings",
          "description": "Upload a list of domain bookings."
        }
      },
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Bookings": {
          "type": "object",
          "properties": {
            "url": {
              "$ref": "#/domains/Generic/types/URL"
            },
            "path": {
              "type": "string",
              "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
              "example": "/7c73814e-70af-40b0-bbac-2f7da6502354.csv"
            },
            "filename": {
              "type": "string",
              "example": "Bookings.csv"
            },
            "contentType": {
              "type": "string",
              "example": "text/csv"
            },
            "size": {
              "type": "integer",
              "example": "108375"
            }
          },
          "required": [
            "url",
            "filename",
            "path",
            "contentType",
            "size"
          ],
          "additionalProperties": false
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        },
        {
          "code": "ContactDetailsInvalid",
          "category": "client",
          "description": "Invalid contact details."
        }
      ]
    },
    "ReservationLookup": {
      "description": "Allows automating hotel booking details retrieval.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/ReservationLookup/types/Account",
          "description": "If required, used for logging in."
        },
        "bookingReference": {
          "$ref": "#/domains/ReservationLookup/types/PiiString",
          "description": "Hotel booking reference code."
        },
        "loginConfirmationCode": {
          "$ref": "#/domains/ReservationLookup/types/PiiString",
          "description": "2F authentication code for login."
        }
      },
      "outputs": {
        "mainGuest": {
          "$ref": "#/domains/ReservationLookup/types/MainGuest",
          "description": "Personal details about the main guest."
        },
        "guests": {
          "$ref": "#/domains/ReservationLookup/types/Guests",
          "description": "Personal details about the additional guests."
        },
        "bookingDetails": {
          "$ref": "#/domains/ReservationLookup/types/BookingDetails",
          "description": "Details about hotel booking."
        },
        "property": {
          "$ref": "#/domains/ReservationLookup/types/Property",
          "description": "Details about the hotel."
        }
      },
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Property": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Apartrooms Hotel"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "BookingDetails": {
          "type": "object",
          "pii": true,
          "properties": {
            "guestStatus": {
              "type": "string",
              "example": "Confirmed"
            },
            "guestName": {
              "type": "string",
              "example": "Mark Doe"
            },
            "roomStatus": {
              "type": "string",
              "example": "Cancelled by guest"
            },
            "room": {
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "roomNumber": {
              "type": "string",
              "example": "582765"
            },
            "roomType": {
              "type": "string",
              "example": "Studio"
            },
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkInTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkOutTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkInText": {
              "type": "string",
              "description": "Optional comment made by the hotel regarding the check-in status."
            },
            "guestsCount": {
              "$ref": "#/domains/ReservationLookup/types/GuestsCount"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/ReservationLookup/types/Person"
            },
            "address": {
              "$ref": "#/domains/ReservationLookup/types/Address"
            },
            "contact": {
              "$ref": "#/domains/ReservationLookup/types/GuestContact"
            },
            "document": {
              "$ref": "#/domains/ReservationLookup/types/IdentityDocument"
            },
            "company": {
              "type": "string"
            },
            "remarks": {
              "type": "string",
              "description": "Notes left by the guest.",
              "example": "Espresso & omelet."
            }
          },
          "required": [
            "person"
          ],
          "additionalProperties": false
        },
        "Guests": {
          "type": "array",
          "description": "A list of guests.",
          "minItems": 0,
          "pii": true,
          "items": {
            "$ref": "#/domains/ReservationLookup/types/Guest"
          }
        },
        "Guest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/ReservationLookup/types/Person"
            },
            "address": {
              "$ref": "#/domains/ReservationLookup/types/Address"
            },
            "contact": {
              "$ref": "#/domains/ReservationLookup/types/GuestContact"
            },
            "document": {
              "$ref": "#/domains/ReservationLookup/types/IdentityDocument"
            },
            "company": {
              "type": "string"
            }
          },
          "required": [
            "person"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity. This is a copy of Generic.Person, with title and document removed.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs",
                "N/A"
              ]
            },
            "firstName": {
              "type": "string",
              "minLength": 1,
              "description": "First name(s) or given name(s), as specified in ID.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "minLength": 1,
              "description": "Last name or surname, as specified in ID.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Guest's date of birth in YYYY-MM-DD format.",
              "example": "1976-01-27"
            },
            "ageType": {
              "type": "string",
              "description": "Age type of guests.",
              "example": "Adult",
              "enum": [
                "adult",
                "child",
                "infant"
              ]
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "mobileNumber": {
              "type": "string"
            },
            "email": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "email",
                  "description": "Email address used for contact.",
                  "example": "client@example.com"
                },
                {
                  "type": "string",
                  "enum": [
                    "N/A"
                  ]
                }
              ]
            }
          },
          "required": [
            "mobileNumber"
          ],
          "additionalProperties": false
        },
        "GuestsCount": {
          "type": "object",
          "properties": {
            "adults": {
              "type": "integer"
            },
            "children": {
              "type": "integer"
            },
            "infants": {
              "type": "integer"
            }
          },
          "required": [
            "adults",
            "children",
            "infants"
          ],
          "additionalProperties": false
        },
        "Address": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "streetName": {
              "type": "string",
              "description": "Name of the street.",
              "example": "Clerkenwell Close"
            },
            "streetNumber": {
              "type": "string",
              "description": "Number of the street or other building identifier, such as house number or house name",
              "example": "27-31"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "example": "San Francisco"
            },
            "citySubdivision": {
              "type": "string",
              "description": "Name of the city subdivision.",
              "example": "Glen Park"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "country": {
              "type": "string",
              "description": "Name of the country"
            },
            "countrySubdivision": {
              "type": "string",
              "description": "Full name of country subdivision (e.g. state, region, county, etc.), except for US states which require 2 letter code. Lowercased."
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "guestIDType": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id",
                "drivers-licence",
                "N/A"
              ]
            },
            "guestIDNumber": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "guestIDType",
            "guestIDNumber"
          ],
          "additionalProperties": false
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        },
        {
          "code": "ContactDetailsInvalid",
          "category": "client",
          "description": "Invalid contact details."
        }
      ]
    },
    "ReservationEdit": {
      "description": "Allows automating hotel booking information edit.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/ReservationEdit/types/Account",
          "description": "If required, used for logging in."
        },
        "bookingReference": {
          "$ref": "#/domains/ReservationEdit/types/PiiString",
          "description": "Hotel booking reference code."
        },
        "mainGuestChanges": {
          "$ref": "#/domains/ReservationEdit/types/MainGuest",
          "description": "Personal details about the main guest.",
          "canonical": [
            "/person",
            "/contact/email"
          ]
        },
        "bookingDetailsChanges": {
          "$ref": "#/domains/ReservationEdit/types/BookingDetails",
          "description": "Details about hotel booking."
        },
        "guestsChanges": {
          "$ref": "#/domains/ReservationEdit/types/Guests",
          "description": "Personal details about the guests."
        },
        "loginConfirmationCode": {
          "$ref": "#/domains/ReservationLookup/types/PiiString",
          "description": "2F authentication code for login."
        }
      },
      "outputs": {},
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Property": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Apartrooms Hotel"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "BookingDetails": {
          "type": "object",
          "pii": true,
          "properties": {
            "guestStatus": {
              "type": "string",
              "example": "Confirmed"
            },
            "guestName": {
              "type": "string",
              "example": "Mark Doe"
            },
            "roomStatus": {
              "type": "string",
              "example": "Cancelled by guest"
            },
            "room": {
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "roomNumber": {
              "type": "string",
              "example": "582765"
            },
            "roomType": {
              "type": "string",
              "example": "Studio"
            },
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkInTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkOutTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkInText": {
              "type": "string",
              "description": "Optional comment made by the hotel regarding the check-in status."
            },
            "guestsCount": {
              "$ref": "#/domains/ReservationEdit/types/GuestsCount"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/ReservationEdit/types/Person"
            },
            "address": {
              "$ref": "#/domains/ReservationEdit/types/Address"
            },
            "contact": {
              "$ref": "#/domains/ReservationEdit/types/GuestContact"
            },
            "document": {
              "$ref": "#/domains/ReservationEdit/types/IdentityDocument"
            },
            "company": {
              "type": "string"
            },
            "remarks": {
              "type": "string",
              "description": "Notes left by the guest.",
              "example": "Espresso & omelet."
            }
          },
          "required": [
            "person"
          ],
          "additionalProperties": false
        },
        "Guests": {
          "type": "array",
          "description": "A list of guests.",
          "minItems": 0,
          "pii": true,
          "items": {
            "$ref": "#/domains/ReservationEdit/types/Guest"
          }
        },
        "Guest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/ReservationEdit/types/Person"
            },
            "address": {
              "$ref": "#/domains/ReservationEdit/types/Address"
            },
            "contact": {
              "$ref": "#/domains/ReservationEdit/types/GuestContact"
            },
            "document": {
              "$ref": "#/domains/ReservationEdit/types/IdentityDocument"
            },
            "company": {
              "type": "string"
            }
          },
          "required": [
            "person"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity. This is a copy of Generic.Person, with title and document removed.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs",
                "N/A"
              ]
            },
            "firstName": {
              "type": "string",
              "minLength": 1,
              "description": "First name(s) or given name(s), as specified in ID.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "minLength": 1,
              "description": "Last name or surname, as specified in ID.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Guest's date of birth in YYYY-MM-DD format.",
              "example": "1976-01-27"
            },
            "ageType": {
              "type": "string",
              "description": "Age type of guests.",
              "example": "Adult",
              "enum": [
                "adult",
                "child",
                "infant"
              ]
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "mobileNumber": {
              "type": "string"
            },
            "email": {
              "oneOf": [
                {
                  "type": "string",
                  "format": "email",
                  "description": "Email address used for contact.",
                  "example": "client@example.com"
                },
                {
                  "type": "string",
                  "enum": [
                    "N/A"
                  ]
                }
              ]
            }
          },
          "required": [
            "mobileNumber"
          ],
          "additionalProperties": false
        },
        "GuestsCount": {
          "type": "object",
          "properties": {
            "adults": {
              "type": "integer"
            },
            "children": {
              "type": "integer"
            },
            "infants": {
              "type": "integer"
            }
          },
          "required": [
            "adults",
            "children",
            "infants"
          ],
          "additionalProperties": false
        },
        "Address": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "streetName": {
              "type": "string",
              "description": "Name of the street.",
              "example": "Clerkenwell Close"
            },
            "streetNumber": {
              "type": "string",
              "description": "Number of the street or other building identifier, such as house number or house name",
              "example": "27-31"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "example": "San Francisco"
            },
            "citySubdivision": {
              "type": "string",
              "description": "Name of the city subdivision.",
              "example": "Glen Park"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "country": {
              "type": "string",
              "description": "Name of the country"
            },
            "countrySubdivision": {
              "type": "string",
              "description": "Full name of country subdivision (e.g. state, region, county, etc.), except for US states which require 2 letter code. Lowercased."
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "guestIDType": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id",
                "drivers-licence",
                "N/A"
              ]
            },
            "guestIDNumber": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "guestIDType",
            "guestIDNumber"
          ],
          "additionalProperties": false
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        },
        {
          "code": "ContactDetailsInvalid",
          "category": "client",
          "description": "Invalid contact details."
        }
      ]
    },
    "LockManagementEdit": {
      "description": "Allows automating hotel electronic door locks.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/LockManagementEdit/types/Account",
          "description": "If required, used for logging in."
        },
        "guestInfo": {
          "$ref": "#/domains/LockManagementEdit/types/Guest",
          "description": "Personal details about the guest and."
        },
        "device": {
          "$ref": "#/domains/LockManagementEdit/types/Device",
          "description": "Device lock parameters."
        }
      },
      "outputs": {
        "lockState": {
          "$ref": "#/domains/LockManagementEdit/types/State",
          "description": "Device lock status."
        }
      },
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Guest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/LockManagementEdit/types/Person"
            },
            "contact": {
              "$ref": "#/domains/LockManagementEdit/types/GuestContact"
            }
          },
          "required": [
            "person"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs",
                "N/A"
              ]
            },
            "firstName": {
              "type": "string",
              "minLength": 1,
              "description": "First name(s) or given name(s), as specified in ID.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "minLength": 1,
              "description": "Last name or surname, as specified in ID.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Guest's date of birth in YYYY-MM-DD format.",
              "example": "1976-01-27"
            },
            "ageType": {
              "type": "string",
              "description": "Age type of guests.",
              "example": "Adult",
              "enum": [
                "adult",
                "child",
                "infant"
              ]
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "mobileNumber": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email address used for contact.",
              "example": "client@example.com"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Device": {
          "type": "object",
          "pii": true,
          "properties": {
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkInTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkOutTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "location": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the device lock."
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the device lock."
            },
            "PIN": {
              "type": "string",
              "minLength": 1,
              "description": "Personal identification number of the device lock."
            }
          },
          "required": [
            "checkInDate",
            "checkOutDate",
            "location",
            "name",
            "PIN"
          ],
          "additionalProperties": false
        },
        "State": {
          "type": "object",
          "pii": true,
          "properties": {
            "status": {
              "type": "string",
              "minLength": 1,
              "description": "Device lock status."
            }
          },
          "required": [
            "status"
          ],
          "additionalProperties": false
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "LockNotFound",
          "category": "client",
          "description": "Device lock not found, usually caused by wrong device reference or name."
        },
        {
          "code": "LocationNotFound",
          "category": "client",
          "description": "Location not found, usually caused by wrong location reference or name."
        },
        {
          "code": "LockDetailsInvalid",
          "category": "client",
          "description": "Invalid device details."
        }
      ]
    },
    "LockManagementStatus": {
      "description": "Allows automating hotel electronic door locks.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "account": {
          "$ref": "#/domains/LockManagementStatus/types/Account",
          "description": "If required, used for logging in."
        },
        "device": {
          "$ref": "#/domains/LockManagementStatus/types/Device",
          "description": "Device lock parameters."
        }
      },
      "outputs": {
        "checkInReceived": {
          "$ref": "#/domains/LockManagementStatus/types/CheckInReceived",
          "description": "Information about check in."
        },
        "lockOnlineAtStatus": {
          "$ref": "#/domains/LockManagementStatus/types/Boolean",
          "description": "Device lock status."
        },
        "batteryStatus": {
          "$ref": "#/domains/LockManagementStatus/types/BatteryStatus",
          "description": "Device battery status."
        },
        "lastSyncTime": {
          "$ref": "#/domains/LockManagementStatus/types/LastSyncTime",
          "description": "Device lock last synchronization date & time."
        }
      },
      "types": {
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Device": {
          "type": "object",
          "pii": true,
          "properties": {
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkInTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "checkOutTime": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "18:00"
            },
            "location": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the device lock."
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the device lock."
            },
            "PIN": {
              "type": "string",
              "description": "Personal identification number of the device lock."
            }
          },
          "required": [
            "location",
            "name"
          ],
          "additionalProperties": false
        },
        "CheckInReceived": {
          "type": "array",
          "minItems": 0,
          "pii": true,
          "items": {
            "$ref": "#/domains/LockManagementStatus/types/CheckInReceivedItem"
          }
        },
        "CheckInReceivedItem": {
          "type": "object",
          "pii": true,
          "properties": {
            "guestName": {
              "type": "string",
              "example": "Mark Doe"
            },
            "PIN": {
              "type": "string",
              "description": "Personal identification number of the device lock."
            },
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "received": {
              "$ref": "#/domains/LockManagementStatus/types/Boolean"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "BatteryStatus": {
          "type": "string",
          "minLength": 1,
          "enum": [
            "N/A",
            "full"
          ]
        },
        "LastSyncTime": {
          "type": "string",
          "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
          "description": "Date and time (terminal local time).",
          "example": "2018-02-02 19:40"
        },
        "Boolean": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "PiiString": {
          "type": "string",
          "pii": true
        }
      },
      "errors": [
        {
          "code": "LockNotFound",
          "category": "client",
          "description": "Device lock not found, usually caused by wrong device reference or name."
        },
        {
          "code": "LocationNotFound",
          "category": "client",
          "description": "Location not found, usually caused by wrong location reference or name."
        },
        {
          "code": "LockDetailsInvalid",
          "category": "client",
          "description": "Invalid device details."
        }
      ]
    },
    "VacationRental": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "guestAges": {
          "$ref": "#/domains/Generic/types/Ages",
          "description": "Ages of all guests."
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account",
          "canonical": [
            "/email"
          ]
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "options": {
          "$ref": "#/domains/VacationRental/types/Options",
          "default": {},
          "initial": true
        },
        "deposit": {
          "$ref": "#/domains/VacationRental/types/Deposit",
          "sourceOutputKey": "availableDeposits",
          "inputMethod": "SelectOne"
        },
        "pets": {
          "$ref": "#/domains/VacationRental/types/Pets"
        }
      },
      "outputs": {
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/VacationRental/types/BookingConfirmation"
        },
        "availableDeposits": {
          "$ref": "#/domains/VacationRental/types/AvailableDeposits",
          "description": "Emitted when actual deposit information is collected.<br/>Note: on deep links with pre-selected deposits this output may not be provided."
        },
        "estimatedPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Price shown by the website prior to requiring guest information."
        },
        "estimatedDepositPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Where available, deposit price shown by the website prior to requiring guest information."
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "deposit": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "AvailableDeposits": {
          "type": "array",
          "description": "A list of available deposits found on the page.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/VacationRental/types/Deposit"
          }
        },
        "Deposit": {
          "type": "object",
          "description": "Deposit information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Deposit prompt as provided by the website.",
              "example": "Early bird deposit"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name",
            "price"
          ]
        },
        "Pets": {
          "type": "object",
          "description": "Pets information.",
          "additionalProperties": false,
          "properties": {
            "total": {
              "type": "number",
              "minimum": 0,
              "maximum": 9,
              "description": "Total count of pets for the booking, including dogs.",
              "example": 0
            },
            "dogs": {
              "type": "number",
              "minimum": 0,
              "maximum": 9,
              "description": "Total count of dogs for the booking.",
              "example": 0
            }
          },
          "required": [
            "total",
            "dogs"
          ]
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "PIN": {
              "type": "string"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      },
      "errors": [
        {
          "code": "DepositNotFound",
          "category": "client",
          "description": "Given deposit option does not match one of the options we are expecting"
        },
        {
          "code": "PetOptionInvalid",
          "category": "client",
          "description": "Given pet option does not match one of the options we are expecting"
        },
        {
          "code": "PetOptionNotAvailable",
          "category": "client",
          "description": "Pet option is not available"
        },
        {
          "code": "GuestCountInvalid",
          "category": "client",
          "description": "Number of guests is not accepted by the website"
        },
        {
          "code": "GuestAgeInvalid",
          "category": "client",
          "description": "Guest age is not accepted by the website"
        },
        {
          "code": "VacationRentalNotAvailable",
          "category": "client",
          "description": "Vacation rental is not found",
          "example": "Vacation rental unavailable on given date provided"
        }
      ]
    },
    "BicycleInsurance": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "bikes": {
          "$ref": "#/domains/BicycleInsurance/types/Bikes"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "applicant": {
          "$ref": "#/domains/BicycleInsurance/types/Applicant"
        },
        "directDebit": {
          "$ref": "#/domains/BicycleInsurance/types/DirectDebit"
        },
        "selectedAddress": {
          "$ref": "#/domains/BicycleInsurance/types/Address"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        },
        "cover": {
          "$ref": "#/domains/BicycleInsurance/types/SelectedOptions"
        },
        "coverStartDate": {
          "$ref": "#/domains/BicycleInsurance/types/CoverStartDate"
        },
        "selectedPaymentMethod": {
          "$ref": "#/domains/BicycleInsurance/types/PaymentMethod"
        },
        "optionalExtras": {
          "$ref": "#/domains/BicycleInsurance/types/OptionalExtras"
        },
        "selectedPackage": {
          "$ref": "#/domains/BicycleInsurance/types/Package"
        }
      },
      "outputs": {
        "coverValues": {
          "$ref": "#/domains/BicycleInsurance/types/AvailableOptions"
        },
        "availablePackages": {
          "$ref": "#/domains/BicycleInsurance/types/AvailablePackages"
        },
        "availablePaymentMethods": {
          "$ref": "#/domains/BicycleInsurance/types/AvailablePaymentMethods"
        },
        "availableAddresses": {
          "$ref": "#/domains/BicycleInsurance/types/AvailableAddresses"
        },
        "estimatedQuote": {
          "$ref": "#/domains/BicycleInsurance/types/QuoteValue"
        },
        "quote": {
          "$ref": "#/domains/BicycleInsurance/types/QuoteValue"
        },
        "documents": {
          "$ref": "#/domains/BicycleInsurance/types/Documents"
        },
        "registrationDocs": {
          "$ref": "#/domains/BicycleInsurance/types/Documents"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "confirmation": {
          "$ref": "#/domains/BicycleInsurance/types/Confirmation"
        }
      },
      "types": {
        "Bikes": {
          "type": "array",
          "description": "An array of Bike objects.",
          "items": {
            "$ref": "#/domains/BicycleInsurance/types/Bike"
          },
          "minItems": 1
        },
        "Bike": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "road",
                "mountain",
                "hybrid",
                "electric",
                "folding"
              ]
            },
            "make": {
              "type": "string",
              "minLength": 1
            },
            "value": {
              "type": "string",
              "minLength": 1
            },
            "dateOfPurchase": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "condition": {
              "type": "string",
              "enum": [
                "new",
                "used"
              ]
            }
          },
          "required": [
            "type",
            "make",
            "value"
          ],
          "additionalProperties": false
        },
        "Applicant": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "type": "object",
              "description": "Basic information about person's identity.",
              "pii": true,
              "properties": {
                "title": {
                  "type": "string",
                  "description": "",
                  "enum": [
                    "mr",
                    "miss",
                    "ms",
                    "mrs"
                  ]
                },
                "firstName": {
                  "type": "string",
                  "description": "First name(s) or given name(s), as specified in ID.",
                  "minLength": 1,
                  "example": "Bob"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name or surname, as specified in ID.",
                  "minLength": 1,
                  "example": "Smith"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of birth YYYY-MM-DD.",
                  "example": "1980-01-01"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "$ref": "#/domains/Generic/types/Phone"
                }
              },
              "required": [
                "title",
                "firstName",
                "lastName",
                "dateOfBirth",
                "email",
                "phone"
              ],
              "additionalProperties": false
            },
            "address": {
              "$ref": "#/domains/Generic/types/ExplicitAddress"
            }
          },
          "required": [
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "DirectDebit": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "sortCode": {
              "type": "string",
              "description": "Bank sort code",
              "pattern": "\\d{2}-?\\d{2}-?\\d{2}",
              "example": "56-00-29"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "description": "Cover marketing name as provided by the insurer.",
              "example": "26207729"
            },
            "accountName": {
              "type": "string",
              "minLength": 1
            },
            "bankName": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "sortCode",
            "accountNumber",
            "accountName",
            "bankName"
          ],
          "additionalProperties": false
        },
        "AvailablePaymentMethods": {
          "type": "array",
          "description": "An array of PaymentMethod objects.",
          "items": {
            "$ref": "#/domains/BicycleInsurance/types/PaymentMethod"
          },
          "minItems": 1
        },
        "PaymentMethod": {
          "oneOf": [
            {
              "$ref": "#/domains/BicycleInsurance/types/PaymentMethodPrice"
            },
            {
              "$ref": "#/domains/BicycleInsurance/types/PaymentMethodTotal"
            }
          ]
        },
        "PaymentMethodPrice": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "annually",
                "monthly"
              ]
            },
            "method": {
              "type": "string",
              "enum": [
                "direct-debit",
                "credit-card",
                "mixed"
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type",
            "method",
            "price"
          ],
          "additionalProperties": false
        },
        "PaymentMethodTotal": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "annually",
                "monthly"
              ]
            },
            "method": {
              "type": "string",
              "enum": [
                "direct-debit",
                "credit-card",
                "mixed"
              ]
            },
            "monthly": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "total": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type",
            "method",
            "monthly",
            "total"
          ],
          "additionalProperties": false
        },
        "QuoteValue": {
          "type": "object",
          "properties": {
            "monthly": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "annually": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about the successful operation."
            }
          },
          "required": [
            "message"
          ],
          "additionalProperties": false
        },
        "OptionalExtras": {
          "type": "object",
          "properties": {},
          "required": [],
          "additionalProperties": true
        },
        "AvailableAddresses": {
          "type": "array",
          "description": "An array of Addresses.",
          "items": {
            "$ref": "#/domains/BicycleInsurance/types/Address"
          },
          "minItems": 1
        },
        "Address": {
          "type": "string"
        },
        "AvailablePackages": {
          "type": "array",
          "description": "An array of Package objects.",
          "items": {
            "$ref": "#/domains/BicycleInsurance/types/Package"
          },
          "minItems": 1
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string",
              "minLength": 1
            },
            "monthly": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "annually": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "benefits": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": true
        },
        "Documents": {
          "type": "array",
          "description": "An array of Link objects.",
          "items": {
            "$ref": "#/domains/Generic/types/Link"
          },
          "minItems": 1
        },
        "AvailableOptions": {
          "type": "array",
          "description": "Additional options to be filled in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/BicycleInsurance/types/AvailableOptionString"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/AvailableOptionBoolean"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/AvailableOptionSelectOne"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/AvailableOptionSelectMany"
              }
            ]
          }
        },
        "AvailableOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionBoolean": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "Boolean"
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "SelectedOptions": {
          "type": "array",
          "description": "Additional options to fill in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/BicycleInsurance/types/SelectedOptionString"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/SelectedOptionBoolean"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/SelectedOptionSelectOne"
              },
              {
                "$ref": "#/domains/BicycleInsurance/types/SelectedOptionSelectMany"
              }
            ]
          }
        },
        "SelectedOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "text"
          ],
          "additionalProperties": false
        },
        "SelectedOptionBoolean": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "type": "boolean"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "CoverStartDate": {
          "type": "string",
          "format": "date",
          "description": "The date the cover starts on.",
          "example": "1980-01-01"
        }
      },
      "errors": [
        {
          "code": "AccountDetailsInvalid",
          "category": "client",
          "description": "The account details are invalid"
        },
        {
          "code": "BicycleDetailsInvalid",
          "category": "client",
          "description": "The bicycle details are invalid"
        },
        {
          "code": "DirectDebitDetailsInvalid",
          "category": "client",
          "description": "The direct debit details are invalid"
        },
        {
          "code": "ApplicantDetailsInvalid",
          "category": "client",
          "description": "The applicant's details are invalid"
        },
        {
          "code": "QuoteNotAvailableOnline",
          "category": "website",
          "description": "The requested quote is not available online"
        }
      ]
    },
    "MotorInsurance": {
      "description": "",
      "private": false,
      "dataExtractionDomainId": "MotorInsuranceExtraction",
      "successCode": {
        "outputKey": "purchaseConfirmation",
        "valuePath": "/purchaseReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "quote": {
          "$ref": "#/domains/MotorInsurance/types/Quote",
          "canonical": [
            "/email"
          ]
        },
        "account": {
          "$ref": "#/domains/MotorInsurance/types/NullableAccount"
        },
        "payment": {
          "$ref": "#/domains/MotorInsurance/types/Payment"
        },
        "directDebit": {
          "$ref": "#/domains/MotorInsurance/types/DirectDebitPayment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "vehicle": {
          "$ref": "#/domains/MotorInsurance/types/Vehicle"
        },
        "options": {
          "$ref": "#/domains/MotorInsurance/types/Options",
          "default": {},
          "initial": true
        },
        "selectedVoluntaryExcess": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected voluntary excess",
          "sourceOutputKey": "availableVoluntaryExcesses",
          "inputMethod": "SelectOne"
        },
        "selectedLegalCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected legal cover.",
          "sourceOutputKey": "availableLegalCovers",
          "inputMethod": "SelectOne"
        },
        "selectedExcessProtectCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected excess protection cover.",
          "sourceOutputKey": "availableExcessProtectCovers",
          "inputMethod": "SelectOne"
        },
        "selectedPersonalInjuryCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected personal injury cover.",
          "sourceOutputKey": "availablePersonalInjuryCovers",
          "inputMethod": "SelectOne"
        },
        "selectedCarHireCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected car hire cover.",
          "sourceOutputKey": "availableCarHireCovers",
          "inputMethod": "SelectOne"
        },
        "selectedBreakdownCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected breakdown cover.",
          "sourceOutputKey": "availableBreakdownCovers",
          "inputMethod": "SelectOne"
        },
        "selectedNoClaimsDiscountProtection": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected no claims discount protection.",
          "sourceOutputKey": "availableNoClaimsDiscountProtection",
          "inputMethod": "SelectOne"
        },
        "selectedWindscreenCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected no claims discount protection.",
          "sourceOutputKey": "availableWindscreenCovers",
          "inputMethod": "SelectOne"
        },
        "selectedKeyReplacementCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected no claims discount protection.",
          "sourceOutputKey": "availableKeyReplacementCovers",
          "inputMethod": "SelectOne"
        },
        "selectedMisfuelCover": {
          "$ref": "#/domains/MotorInsurance/types/SelectedCover",
          "description": "Selected no claims discount protection.",
          "sourceOutputKey": "availableMisfuelCovers",
          "inputMethod": "SelectOne"
        },
        "selectedPaymentTerm": {
          "$ref": "#/domains/MotorInsurance/types/PaymentTerm",
          "description": "Payment term to be used.",
          "sourceOutputKey": "availablePaymentTerms",
          "inputMethod": "SelectOne"
        },
        "selectedMarketingContactOptions": {
          "$ref": "#/domains/MotorInsurance/types/SelectedItem",
          "description": "List of marketing contact options to be selected.",
          "sourceOutputKey": "availableMarketingContactOptions",
          "inputMethod": "SelectMany"
        },
        "cookies": {
          "$ref": "#/domains/Generic/types/Cookies",
          "initial": true
        }
      },
      "outputs": {
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "estimatedPrice": {
          "description": "Emitted before asking for payment information.<br/>This is usually not the final amount to be paid, especially on websites which charge credit and company cards additionally. You will get <code>finalPrice</code> later.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "purchaseConfirmation": {
          "$ref": "#/domains/MotorInsurance/types/PurchaseConfirmation"
        },
        "availableVoluntaryExcesses": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "List of voluntary excesses to choose from."
        },
        "availableExcessProtectCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableLegalCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableBreakdownCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availablePersonalInjuryCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableCarHireCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableWindscreenCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableKeyReplacementCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableMisfuelCovers": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "Emitted when actual cover information is collected.<br/>Note: on deep links with pre-selected additional cover this output may not be provided."
        },
        "availableNoClaimsDiscountProtection": {
          "$ref": "#/domains/MotorInsurance/types/NullableAvailableCovers",
          "description": "List of no claims discount protection options supported by this insurer."
        },
        "contactUs": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the contact info is presented."
        },
        "quoteReference": {
          "$ref": "#/domains/MotorInsurance/types/QuoteReference",
          "description": "Emitted when the quote reference is presented."
        },
        "excessBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the excess breakdown is presented."
        },
        "excessInfo": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the excess information is presented."
        },
        "priceBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the price breakdown is presented."
        },
        "statutoryStatusDisclosure": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the statutory status disclosure text is presented."
        },
        "faq": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the FAQ link or document is presented."
        },
        "coverSummary": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the cover summary is presented."
        },
        "assumptions": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the assumptions are presented."
        },
        "statements": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the statements are presented."
        },
        "feesSummary": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the fees are presented."
        },
        "policyWording": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the policy wording is presented."
        },
        "statementOfFact": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the statement of fact is presented."
        },
        "privacyPolicy": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the privacy policy is presented."
        },
        "vehicleDetails": {
          "$ref": "#/domains/MotorInsurance/types/Vehicle",
          "description": "Emitted when the vehicle information is presented."
        },
        "supportedPaymentCardTypes": {
          "$ref": "#/domains/MotorInsurance/types/PaymentCardTypes",
          "description": "List of payment cards supported by this insurer."
        },
        "availablePaymentTerms": {
          "$ref": "#/domains/MotorInsurance/types/PaymentTerms",
          "description": "List of payment terms supported by the insurer."
        },
        "noClaimsDiscountProtectionInfo": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when the no claims discount protection info is presented."
        },
        "financialPromotionRepresentativeExample": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when a representative example is presented, usually when paying in monthly installments as part of a financial promotion."
        },
        "financialPromotionContactAddress": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Emitted when a representative example is presented, usually when paying in monthly installments as part of a financial promotion. According to CONC 3.5.3 R, this is the postal address at which the person making the financial promotion may be contacted."
        },
        "availableMarketingContactOptions": {
          "$ref": "#/domains/Generic/types/StructuredTextItems",
          "description": "List of marketing contact options provided by the insurer."
        },
        "secciForm": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Standard European consumer credit information form, where applicable."
        },
        "creditAgreement": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Credit agreement."
        },
        "productInformation": {
          "$ref": "#/domains/MotorInsurance/types/NullableStructuredTextItem",
          "description": "Information about the product."
        },
        "insurerSpecificDocuments": {
          "$ref": "#/domains/Generic/types/StructuredTextItems",
          "description": "Dynamic list of documents and links insusrers add which may or not already be present in other outputs."
        },
        "availableDirectDebitPaymentDays": {
          "$ref": "#/domains/MotorInsurance/types/AvailablePaymentDays",
          "description": "List of available DD payment days."
        },
        "availableCardPaymentDays": {
          "$ref": "#/domains/MotorInsurance/types/AvailablePaymentDays",
          "description": "List of available card payment days."
        }
      },
      "types": {
        "QuoteReference": {
          "type": "string",
          "description": "Existing quote retrieval information.",
          "example": "ABC123"
        },
        "Quote": {
          "type": "object",
          "description": "Existing quote retrieval information.",
          "pii": true,
          "properties": {
            "reference": {
              "type": "string",
              "description": "Reference code.",
              "example": "ABC123"
            },
            "postcode": {
              "type": "string",
              "description": "UK post code",
              "example": "EC1R0AT"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Proposer's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "email": {
              "type": "string",
              "description": "Email address used to retrieve the quote.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "reference",
            "postcode",
            "email",
            "dateOfBirth"
          ]
        },
        "PurchaseConfirmation": {
          "type": "object",
          "description": "Information gathered on the \"confirmation\" page.",
          "properties": {
            "purchaseReference": {
              "type": "string",
              "description": "Reference code grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "The confirmation message.",
              "example": "Thank you for using UBIO Insurance. Your quote is ABC123 and purchase reference is DEF456."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the confirmation page."
            }
          },
          "additionalProperties": false,
          "required": [
            "purchaseReference"
          ]
        },
        "Vehicle": {
          "type": "object",
          "description": "Information about the vehicle being insured.",
          "pii": true,
          "properties": {
            "registrationNumber": {
              "type": "string",
              "description": "Vehicle registration number (licence plate).",
              "example": "Y900MCL"
            },
            "make": {
              "type": "string",
              "description": "Vehicle make.",
              "example": "Audi"
            },
            "model": {
              "type": "string",
              "description": "Vehicle model.",
              "example": "SQ5 TDI"
            },
            "makeModel": {
              "type": "string",
              "description": "Vehicle combined make+model.",
              "example": "Audi SQ5 TDI"
            },
            "yearOfManufacture": {
              "type": "string",
              "description": "Vehicle year of manufacture",
              "example": "2013"
            }
          },
          "additionalProperties": false,
          "required": []
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features such as upsells and additional cover. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "legalCover": {
              "type": "boolean",
              "default": false
            },
            "excessProtectCover": {
              "type": "boolean",
              "default": false
            },
            "breakdownCover": {
              "type": "boolean",
              "default": false
            },
            "personalInjuryCover": {
              "type": "boolean",
              "default": false
            },
            "carHireCover": {
              "type": "boolean",
              "default": false
            },
            "noClaimsDiscountProtection": {
              "type": "boolean",
              "default": false
            },
            "windscreenCover": {
              "type": "boolean",
              "default": false
            },
            "keyReplacementCover": {
              "type": "boolean",
              "default": false
            },
            "misfuelCover": {
              "type": "boolean",
              "default": false
            },
            "account": {
              "type": "boolean",
              "default": false
            },
            "customerIpAddress": {
              "type": "string",
              "default": ""
            }
          }
        },
        "NullableAvailableCovers": {
          "oneOf": [
            {
              "$ref": "#/domains/MotorInsurance/types/AvailableCovers"
            },
            {
              "type": "null"
            }
          ]
        },
        "AvailableCovers": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/MotorInsurance/types/Cover"
          }
        },
        "SelectedCover": {
          "oneOf": [
            {
              "$ref": "#/domains/MotorInsurance/types/Cover"
            },
            {
              "type": "null"
            }
          ]
        },
        "SelectedItem": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            },
            {
              "type": "null"
            }
          ]
        },
        "Cover": {
          "type": "object",
          "description": "Cover information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Cover marketing name as provided by the insurer.",
              "example": "European Plus"
            },
            "priceLine": {
              "type": "string",
              "description": "Cover price line.",
              "example": "Included."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "details": {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            }
          },
          "required": [
            "name"
          ]
        },
        "PolicyGroupInfo": {
          "type": "array",
          "description": "Group of information about the policy.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/MotorInsurance/types/PolicyGroupItem"
          }
        },
        "PolicyGroupItem": {
          "type": "object",
          "description": "Piece of information about the policy.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Type of information as provided by the insurer.",
              "example": "Policy details"
            },
            "value": {
              "type": "string",
              "description": "Information details or url, where available.",
              "example": "https://www.example.com/documents/policy-details.pdf"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "additionalProperties": false
        },
        "PaymentCardTypes": {
          "type": "array",
          "description": "List of payment card types.",
          "items": {
            "$ref": "#/domains/MotorInsurance/types/PaymentCardType"
          }
        },
        "PaymentCardType": {
          "type": "object",
          "description": "Type of card.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Card type, debit or credit.",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "brand": {
              "type": "string",
              "description": "Card brand, must be one of the supported card brands. Automation may fail if a specific card brand is not supported on a particular website.",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            }
          },
          "required": [
            "type",
            "brand"
          ],
          "additionalProperties": false
        },
        "PaymentTerms": {
          "type": "array",
          "description": "List of payment terms.",
          "items": {
            "$ref": "#/domains/MotorInsurance/types/PaymentTerm"
          }
        },
        "PaymentTerm": {
          "type": "string",
          "description": "Payment term. The outlier is <strong>monthly-directdebit-card</strong>, which specifies that card payment must be used to pay the initial deposit, but direct debit must be set up for recurring monthly payments.",
          "enum": [
            "annual-card",
            "monthly-card",
            "monthly-directdebit",
            "monthly-directdebit-card"
          ]
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "selectedPaymentDay": {
              "type": "string",
              "description": "Preferred payment day, one of availableCardPaymentDays.",
              "example": "10"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "DirectDebitPayment": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "sortCode": {
              "type": "string",
              "description": "Bank sort code",
              "pattern": "\\d{2}-?\\d{2}-?\\d{2}",
              "example": "56-00-29"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "description": "Cover marketing name as provided by the insurer.",
              "example": "26207729"
            },
            "accountHolder": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "accountHolderAddress": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "selectedPaymentDay": {
              "type": "string",
              "description": "Preferred payment day, one of availableDirectDebitPaymentDays.",
              "example": "10"
            }
          },
          "required": [
            "sortCode",
            "accountNumber",
            "accountHolder",
            "accountHolderAddress"
          ],
          "additionalProperties": false
        },
        "AvailablePaymentDays": {
          "oneOf": [
            {
              "type": "array",
              "description": "List of payment days.",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "NullableStructuredTextItem": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            },
            {
              "type": "null"
            }
          ]
        },
        "NullableAccount": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/Account"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "errors": [
        {
          "code": "QuoteNotFound",
          "category": "client",
          "description": "Given quote was not found by the insurer."
        },
        {
          "code": "LegalCoverNotFound",
          "category": "client",
          "description": "Given legal cover does not match one of the options we are expecting"
        },
        {
          "code": "BreakdownCoverNotFound",
          "category": "client",
          "description": "Given breakdown cover does not match one of the options we are expecting"
        },
        {
          "code": "PersonalInjuryCoverNotFound",
          "category": "client",
          "description": "Given personal injury cover does not match one of the options we are expecting"
        },
        {
          "code": "CarHireCoverNotFound",
          "category": "client",
          "description": "Given car hire cover does not match one of the options we are expecting"
        },
        {
          "code": "RegistrationNumberInvalid",
          "category": "client",
          "description": "Registration number is not accepted by the website"
        },
        {
          "code": "RegistrationNumberRequired",
          "category": "client",
          "description": "Registration number is required by the website"
        },
        {
          "code": "DirectDebitRejected",
          "category": "client",
          "description": "Direct debit details provided have been rejected by the website."
        },
        {
          "code": "PolicyAlreadyPurchased",
          "category": "client",
          "description": "The policy has already been purchased."
        }
      ]
    },
    "CreditCardApplication": {
      "description": "Allows applying for business credit cards.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "applicant": {
          "$ref": "#/domains/CreditCardApplication/types/Applicant"
        },
        "employment": {
          "$ref": "#/domains/CreditCardApplication/types/Employment"
        },
        "mobilePinConfirmation": {
          "$ref": "#/domains/CreditCardApplication/types/MobilePinConfirmation"
        },
        "options": {
          "$ref": "#/domains/CreditCardApplication/types/Options",
          "default": {},
          "initial": true
        },
        "company": {
          "$ref": "#/domains/CreditCardApplication/types/Company"
        },
        "selectedAnswers": {
          "$ref": "#/domains/CreditCardApplication/types/Answers"
        }
      },
      "outputs": {
        "availableQuestions": {
          "$ref": "#/domains/CreditCardApplication/types/Questions"
        },
        "debug": {
          "$ref": "#/domains/CreditCardApplication/types/Anything"
        },
        "keyTerms": {
          "$ref": "#/domains/CreditCardApplication/types/KeyTerms"
        },
        "confirmation": {
          "$ref": "#/domains/CreditCardApplication/types/Confirmation"
        }
      },
      "types": {
        "Applicant": {
          "type": "object",
          "description": "The person applying for the credit card.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "mainAddress": {
              "description": "A list of addresses for the applicant.",
              "$ref": "#/domains/CreditCardApplication/types/Address"
            },
            "otherAddresses": {
              "type": "array",
              "description": "A list of addresses for the applicant.",
              "pii": true,
              "minItems": 1,
              "maxItems": 9,
              "items": {
                "$ref": "#/domains/CreditCardApplication/types/Address"
              }
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            }
          },
          "required": [
            "person",
            "mainAddress",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "Address": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "streetName": {
              "type": "string",
              "description": "Street name.",
              "minLength": 1,
              "example": "Twin Peaks Blv."
            },
            "houseName": {
              "type": "string",
              "description": "House name.",
              "minLength": 1,
              "example": "Orchard House."
            },
            "houseNumber": {
              "type": "string",
              "description": "House number.",
              "minLength": 1,
              "example": "501"
            },
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "minLength": 1,
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "minLength": 1,
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            },
            "dateMovedIn": {
              "type": "string",
              "format": "date",
              "description": "Date at which the applicant moved into this address."
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "own",
                "family",
                "rent-unfurnished",
                "rent-furnished",
                "rent-council",
                "rent-other",
                "share",
                "living-with-parents"
              ]
            },
            "mortgage": {
              "$ref": "#/domains/CreditCardApplication/types/Mortgage"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Mortgage": {
          "type": "object",
          "description": "Mortgage information for the associated address.",
          "pii": true,
          "properties": {
            "monthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month by the credit card applicant."
            },
            "jointMonthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month for a joint mortgage."
            }
          },
          "required": [
            "monthlyPayment"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "description": "Applicant employment details.",
          "pii": true,
          "properties": {
            "companyName": {
              "type": "string",
              "minLength": 1
            },
            "industry": {
              "type": "string",
              "minLength": 1
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "employed-fulltime",
                "employed-parttime",
                "unemployed",
                "homemaker",
                "self-employed",
                "on-benefits",
                "retired",
                "student"
              ]
            },
            "jobTitle": {
              "type": "string",
              "minLength": 1,
              "description": "Job title.",
              "example": "Computer programmer"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "grossIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual gross salary (before tax)."
            },
            "netIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual net salary (after tax)."
            }
          },
          "required": [
            "status"
          ],
          "additionalProperties": false
        },
        "Company": {
          "type": "object",
          "description": "Applicant company details.",
          "pii": true,
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "industry": {
              "type": "string",
              "minLength": 1
            },
            "isFreelancer": {
              "type": "boolean"
            },
            "employees": {
              "type": "number",
              "description": "The number employees in the company.",
              "example": 48
            },
            "monthlyExpenses": {
              "type": "string",
              "description": "Expected monthly spend on your account.",
              "minLength": 1
            },
            "annualRevenue": {
              "type": "string",
              "description": "Company's annual revenue.",
              "minLength": 1
            },
            "nameOnCard": {
              "type": "string",
              "description": "Business name on card.",
              "minLength": 1
            },
            "hasWebsite": {
              "type": "boolean"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "MobilePinConfirmation": {
          "type": "object",
          "description": "Mobile pin confirmation to confirm the applicant's mobile number.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "pin confirmation code.",
              "example": "1234",
              "minLength": 3,
              "maxLength": 10
            }
          },
          "required": [
            "code"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Confirmation of the credit card.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Credit card confirmation code",
              "example": "1234"
            },
            "message": {
              "type": "string",
              "description": "Confirmation message from the web page.",
              "example": "Your credit card application is confirmed."
            },
            "savedUrl": {
              "$ref": "#/domains/Generic/types/Link"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "skipMobilePinVerification": {
              "type": "boolean",
              "default": false
            },
            "continueAfterSubmittingUrl": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Answers": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/CreditCardApplication/types/Answer"
          }
        },
        "Answer": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1,
              "example": "How much do you earn per month?"
            },
            "value": {
              "type": "string",
              "example": "2000"
            }
          },
          "required": [
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        "Questions": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/CreditCardApplication/types/Question"
          }
        },
        "Question": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "key"
          ],
          "additionalProperties": false
        },
        "Anything": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "KeyTerms": {
          "type": "object",
          "pii": true,
          "properties": {
            "creditCardLimit": {
              "type": "integer",
              "minLength": 1
            },
            "term": {
              "type": "integer",
              "minLength": 1
            },
            "minimumMonthlyRepayment": {
              "type": "integer",
              "minLength": 1
            },
            "apr": {
              "type": "integer",
              "minLength": 1
            },
            "totalAmountPayable": {
              "type": "integer",
              "minLength": 1
            }
          },
          "required": [],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "ConnectionReset",
          "category": "website",
          "description": "The supplier reset the TCP connection."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The customer already has an account with this provider."
        },
        {
          "code": "CreditCardApplicationDeclined",
          "category": "client",
          "description": "Credit card application denied by provider."
        },
        {
          "code": "MobilePinVerificationFailed",
          "category": "client",
          "description": "Pin verification failed."
        }
      ]
    },
    "LoanApplication": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "guarantorResidentialStatus": {
          "$ref": "#/domains/LoanApplication/types/ResidentialStatus",
          "description": "Guarantor's residential status."
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "loan": {
          "$ref": "#/domains/LoanApplication/types/Loan"
        },
        "existingApplication": {
          "$ref": "#/domains/LoanApplication/types/OptionalExistingApplication"
        },
        "applicant": {
          "$ref": "#/domains/LoanApplication/types/Applicant"
        },
        "loanConsent": {
          "$ref": "#/domains/LoanApplication/types/Quote",
          "description": "Client's consent for the loan, should exactly match the <code>quote</code> object from output.<br/>Automation will not proceed with the loan application until the consent is provided.",
          "sourceOutputKey": "quote",
          "inputMethod": "Consent"
        },
        "employment": {
          "$ref": "#/domains/LoanApplication/types/Employment"
        },
        "guarantor": {
          "$ref": "#/domains/LoanApplication/types/GuarantorOrNull"
        },
        "directDebit": {
          "$ref": "#/domains/LoanApplication/types/DirectDebitPaymentOrNull"
        },
        "mobilePinConfirmation": {
          "$ref": "#/domains/LoanApplication/types/MobilePinConfirmation"
        },
        "mobilePinConfirmationRetry1": {
          "$ref": "#/domains/LoanApplication/types/MobilePinConfirmation"
        },
        "mobilePinConfirmationRetry2": {
          "$ref": "#/domains/LoanApplication/types/MobilePinConfirmation"
        },
        "changeMobileNumber": {
          "$ref": "#/domains/LoanApplication/types/PhoneOrNull"
        },
        "emailVerification": {
          "$ref": "#/domains/LoanApplication/types/EmailVerification"
        },
        "proofOfIncome": {
          "$ref": "#/domains/LoanApplication/types/Files"
        },
        "proofOfId": {
          "$ref": "#/domains/Generic/types/File"
        },
        "proofOfAddress": {
          "$ref": "#/domains/Generic/types/File"
        },
        "expenses": {
          "$ref": "#/domains/LoanApplication/types/Expenses"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "options": {
          "$ref": "#/domains/LoanApplication/types/Options",
          "default": {},
          "initial": true
        },
        "selectedRepaymentDate": {
          "$ref": "#/domains/LoanApplication/types/RepaymentDate"
        },
        "agreeTerms": {
          "$ref": "#/domains/LoanApplication/types/Boolean"
        },
        "agreeDocuments": {
          "$ref": "#/domains/LoanApplication/types/Boolean"
        }
      },
      "outputs": {
        "quote": {
          "$ref": "#/domains/LoanApplication/types/Quote"
        },
        "documents": {
          "$ref": "#/domains/LoanApplication/types/Documents"
        },
        "requirements": {
          "$ref": "#/domains/LoanApplication/types/Requirements"
        },
        "confirmation": {
          "$ref": "#/domains/LoanApplication/types/Confirmation"
        },
        "expenseTypes": {
          "$ref": "#/domains/LoanApplication/types/ExpenseTypes"
        },
        "availableLoanTerms": {
          "$ref": "#/domains/LoanApplication/types/LoanTerms"
        },
        "availableLoanPurposes": {
          "$ref": "#/domains/LoanApplication/types/LoanPurposes"
        },
        "availableRepaymentDates": {
          "$ref": "#/domains/LoanApplication/types/RepaymentDates"
        },
        "guarantorDocuments": {
          "$ref": "#/domains/LoanApplication/types/Documents"
        },
        "loanType": {
          "$ref": "#/domains/LoanApplication/types/LoanType"
        },
        "finalLoanAmount": {
          "$ref": "#/domains/LoanApplication/types/LoanAmount"
        },
        "savedUrl": {
          "$ref": "#/domains/LoanApplication/types/SavedUrl"
        },
        "debug": {
          "$ref": "#/domains/LoanApplication/types/Anything"
        },
        "keyTerms": {
          "$ref": "#/domains/LoanApplication/types/KeyTerms"
        },
        "financialPromotionRepresentativeSample": {
          "$ref": "#/domains/LoanApplication/types/FinancialPromotionRepresentativeSample"
        }
      },
      "types": {
        "LoanTerms": {
          "type": "array",
          "items": {
            "$ref": "#/domains/LoanApplication/types/String"
          }
        },
        "LoanPurposes": {
          "type": "array",
          "items": {
            "$ref": "#/domains/LoanApplication/types/String"
          }
        },
        "String": {
          "type": "string"
        },
        "LoanType": {
          "type": "string",
          "description": "",
          "enum": [
            "personal",
            "guarantor"
          ]
        },
        "LoanAmount": {
          "type": "object",
          "$ref": "#/domains/Generic/types/Price",
          "description": "The loan amount contracted."
        },
        "RepaymentDates": {
          "type": "array",
          "items": {
            "$ref": "#/domains/LoanApplication/types/RepaymentDate"
          }
        },
        "RepaymentDate": {
          "type": "string"
        },
        "SavedUrl": {
          "type": "object",
          "$ref": "#/domains/Generic/types/Link"
        },
        "Loan": {
          "type": "object",
          "description": "Loan criteria",
          "properties": {
            "purpose": {
              "type": "string",
              "minLength": 1,
              "description": "Purpose of the loan.",
              "example": "buy a car"
            },
            "amount": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The loan amount required."
            },
            "repaymentMonths": {
              "type": "number",
              "description": "The number of months to repay the loan.",
              "example": 48
            },
            "existingLoan": {
              "type": "boolean",
              "description": "Existing loan with this provider."
            },
            "promotionCode": {
              "type": "string",
              "minLength": 1,
              "description": "Promotion code."
            }
          },
          "additionalProperties": false,
          "required": [
            "purpose",
            "amount",
            "repaymentMonths"
          ]
        },
        "OptionalExistingApplication": {
          "oneOf": [
            {
              "$ref": "#/domains/LoanApplication/types/ExistingApplication"
            },
            {
              "type": "null"
            }
          ]
        },
        "ExistingApplication": {
          "type": "object",
          "description": "Existing loan application",
          "properties": {
            "id": {
              "type": "string",
              "description": "loan applicaton id.",
              "example": "12345"
            },
            "token": {
              "type": "string",
              "description": "Loan application token.",
              "example": "abcde"
            }
          },
          "additionalProperties": false,
          "required": [
            "id",
            "token"
          ]
        },
        "ApplicantOrNull": {
          "pii": true,
          "oneOf": [
            {
              "$ref": "#/domains/LoanApplication/types/Applicant"
            },
            {
              "type": "null"
            }
          ]
        },
        "GuarantorOrNull": {
          "oneOf": [
            {
              "$ref": "#/domains/LoanApplication/types/Guarantor"
            },
            {
              "type": "null"
            }
          ]
        },
        "Applicant": {
          "type": "object",
          "description": "The person applying for the loan.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "addresses": {
              "type": "array",
              "description": "A list of addresses for the applicant.",
              "pii": true,
              "minItems": 1,
              "maxItems": 9,
              "items": {
                "$ref": "#/domains/LoanApplication/types/LoanAddress"
              }
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "relationshipStatus": {
              "type": "string",
              "description": "",
              "enum": [
                "single",
                "married",
                "divorced",
                "cohabiting",
                "widower"
              ]
            },
            "nationality": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Nationality according to passport."
            },
            "countryOfBirth": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country of birth."
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "dependantsCount": {
              "type": "integer",
              "minimum": 0
            },
            "residentialStatus": {
              "$ref": "#/domains/LoanApplication/types/ResidentialStatus"
            },
            "partnerInfo": {
              "$ref": "#/domains/LoanApplication/types/PartnerInfo"
            },
            "openBankingInfo": {
              "$ref": "#/domains/LoanApplication/types/OpenBankingInfo"
            }
          },
          "required": [
            "person",
            "dateOfBirth",
            "nationality"
          ],
          "additionalProperties": false
        },
        "PartnerInfo": {
          "type": "object",
          "properties": {
            "partnerId": {
              "type": "string"
            },
            "partnerTrackingId": {
              "type": "string"
            },
            "partnerAdditionalReference": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "partnerId",
            "partnerTrackingId",
            "partnerAdditionalReference"
          ]
        },
        "OpenBankingInfo": {
          "type": "object",
          "properties": {
            "bankSortcode": {
              "type": "string"
            },
            "bankAccountNumber": {
              "type": "string"
            },
            "averageIncomeLast30Days": {
              "type": "string"
            },
            "averageIncomeAvg6Months": {
              "type": "string"
            },
            "averageExpenditureLast30Days": {
              "type": "string"
            },
            "averageExpenditureAvg6Months": {
              "type": "string"
            },
            "mortgageRentLast30Days": {
              "type": "string"
            },
            "mortgageRentAvg6Months": {
              "type": "string"
            },
            "unsecuredCreditPaymentsLast30Days": {
              "type": "string"
            },
            "unsecuredCreditPaymentsAvg6Months": {
              "type": "string"
            },
            "unsecuredCreditPaymentsVolLast30Days": {
              "type": "string"
            },
            "unsecuredCreditPaymentsVolAvg6Months": {
              "type": "string"
            },
            "foodLast30Days": {
              "type": "string"
            },
            "foodAvg6Months": {
              "type": "string"
            },
            "travelPetrolLast30Days": {
              "type": "string"
            },
            "travelPetrolAvg6Months": {
              "type": "string"
            },
            "utilitiesLast30Days": {
              "type": "string"
            },
            "utilitiesAvg6Months": {
              "type": "string"
            },
            "councilTaxLast30Days": {
              "type": "string"
            },
            "councilTaxAvg6Months": {
              "type": "string"
            },
            "childCareLast30Days": {
              "type": "string"
            },
            "childCareAvg6Months": {
              "type": "string"
            },
            "gamblingTransactionLast30Days": {
              "type": "string"
            },
            "gamblingTransactionAvg6Months": {
              "type": "string"
            },
            "gamblingTransactionVolLast30Days": {
              "type": "string"
            },
            "gamblingTransactionVolAvg6Months": {
              "type": "string"
            },
            "failedDDLast30Days": {
              "type": "string"
            },
            "failedDDAvg6Months": {
              "type": "string"
            },
            "failedDDVolLast30Days": {
              "type": "string"
            },
            "failedDDVolAvg6Months": {
              "type": "string"
            },
            "failedStandingOrderLast30Days": {
              "type": "string"
            },
            "failedStandingOrderAvg6Months": {
              "type": "string"
            },
            "failedStandingOrderVolLast30Days": {
              "type": "string"
            },
            "failedStandingOrderVolAvg6Months": {
              "type": "string"
            },
            "savingsLast30Days": {
              "type": "string"
            },
            "savingsAvg6Months": {
              "type": "string"
            },
            "savingsVolLast30Days": {
              "type": "string"
            },
            "savingsVolAvg6Months": {
              "type": "string"
            },
            "industry": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "noOfDependents": {
              "type": "string"
            },
            "openBanking": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": []
        },
        "Guarantor": {
          "type": "object",
          "description": "The person guaranteeing for the loan.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "addresses": {
              "type": "array",
              "description": "A list of addresses for the guarantor.",
              "pii": true,
              "minItems": 1,
              "maxItems": 9,
              "items": {
                "$ref": "#/domains/LoanApplication/types/LoanAddress"
              }
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "relationshipStatus": {
              "type": "string",
              "description": "",
              "enum": [
                "single",
                "married",
                "divorced",
                "cohabiting",
                "widower"
              ]
            },
            "relationshipToApplicant": {
              "type": "string",
              "description": "",
              "enum": [
                "friend",
                "mother",
                "father",
                "partner",
                "sister",
                "brother",
                "mother-in-law",
                "father-in-law",
                "married",
                "grandmother",
                "grandfather",
                "cousin",
                "daughter",
                "son",
                "aunt",
                "brother-in-law",
                "sister-in-law",
                "uncle",
                "son-in-law",
                "daughter-in-law",
                "employer",
                "employee",
                "niece",
                "nephew"
              ]
            },
            "nationality": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Nationality according to passport."
            },
            "countryOfBirth": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country of birth."
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "dependantsCount": {
              "type": "integer",
              "minimum": 0
            },
            "residentialStatus": {
              "$ref": "#/domains/LoanApplication/types/ResidentialStatus"
            }
          },
          "required": [
            "person",
            "dateOfBirth",
            "nationality"
          ],
          "additionalProperties": false
        },
        "Addresses": {
          "type": "array",
          "description": "A list of addresses for the applicant.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/LoanApplication/types/LoanAddress"
          }
        },
        "LoanAddress": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "streetName": {
              "type": "string",
              "description": "Street name.",
              "minLength": 1,
              "example": "Twin Peaks Blv"
            },
            "houseNumber": {
              "type": "integer",
              "description": "House number.",
              "minLength": 1,
              "example": "501"
            },
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "minLength": 1,
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "minLength": 1,
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            },
            "dateMovedIn": {
              "type": "string",
              "format": "date",
              "description": "Date at which the applicant moved into this address."
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "own",
                "family",
                "rent"
              ]
            },
            "mortgage": {
              "$ref": "#/domains/LoanApplication/types/Mortgage"
            }
          },
          "required": [
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ],
          "additionalProperties": false
        },
        "ResidentialStatus": {
          "type": "string",
          "description": "",
          "enum": [
            "own",
            "family",
            "rent"
          ]
        },
        "Mortgage": {
          "type": "object",
          "description": "Mortgage information for the associated address.",
          "pii": true,
          "properties": {
            "monthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month by the loan applicant."
            },
            "jointMonthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month for a joint mortgage."
            }
          },
          "required": [
            "monthlyPayment"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "description": "Applicant employment details.",
          "pii": true,
          "properties": {
            "companyName": {
              "type": "string",
              "minLength": 1
            },
            "industry": {
              "type": "string",
              "minLength": 1
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "employed-fulltime",
                "employed-parttime",
                "unemployed",
                "self-employed",
                "on-benefits",
                "retired",
                "student"
              ]
            },
            "jobTitle": {
              "type": "string",
              "minLength": 1,
              "description": "Job title.",
              "example": "Computer programmer"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "grossIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual gross salary (before tax)."
            },
            "netIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual net salary (after tax)."
            },
            "payFrequency": {
              "type": "string",
              "enum": [
                "annually",
                "monthly",
                "weekly",
                "fortnightly",
                "four-weekly"
              ]
            }
          },
          "required": [
            "status"
          ],
          "additionalProperties": false
        },
        "PhoneOrNull": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/Phone"
            },
            {
              "type": "null"
            }
          ]
        },
        "DirectDebitPaymentOrNull": {
          "pii": true,
          "oneOf": [
            {
              "$ref": "#/domains/LoanApplication/types/DirectDebitPayment"
            },
            {
              "type": "null"
            }
          ]
        },
        "DirectDebitPayment": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "sortCode": {
              "type": "string",
              "description": "Bank sort code",
              "pattern": "\\d{2}-?\\d{2}-?\\d{2}",
              "example": "56-00-29"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "description": "Cover marketing name as provided by the insurer.",
              "example": "26207729"
            },
            "accountHolder": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "accountHolderAddress": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "selectedPaymentDay": {
              "type": "string",
              "description": "Preferred payment day, one of availableDirectDebitPaymentDays where available.",
              "example": "10"
            }
          },
          "required": [
            "sortCode",
            "accountNumber"
          ],
          "additionalProperties": false
        },
        "MobilePinConfirmation": {
          "type": "object",
          "description": "Mobile pin confirmation to confirm the applicant's mobile number.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "pin confirmation code.",
              "example": "1234",
              "minLength": 3,
              "maxLength": 10
            }
          },
          "required": [
            "code"
          ],
          "additionalProperties": false
        },
        "EmailVerification": {
          "type": "object",
          "description": "Confirmation that email verification is done.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Confirmation code.",
              "example": "1234",
              "minLength": 3,
              "maxLength": 100
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Files": {
          "type": "array",
          "description": "A list of uploaded files.",
          "pii": true,
          "minItems": 1,
          "maxItems": 99,
          "items": {
            "$ref": "#/domains/Generic/types/File"
          }
        },
        "Requirements": {
          "type": "array",
          "description": "A list of requirements.",
          "minItems": 0,
          "maxItems": 99,
          "items": {
            "$ref": "#/domains/LoanApplication/types/Requirement"
          }
        },
        "Requirement": {
          "type": "object",
          "description": "A required input for proof - e.g. of income.",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "description": "Name of requirement.",
              "example": "income"
            },
            "url": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Quote": {
          "type": "object",
          "description": "Loan quote",
          "pii": true,
          "properties": {
            "amount": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The loan amount required."
            },
            "monthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount repayable per month."
            },
            "repaymentMonths": {
              "type": "number",
              "description": "The number of months to repay the loan.",
              "example": 48
            },
            "apr": {
              "type": "number",
              "description": "The APR of the loan.",
              "example": 0.5
            },
            "fee": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Additional loan fee (if applicable)."
            }
          },
          "additionalProperties": false,
          "required": [
            "amount",
            "repaymentMonths",
            "apr"
          ]
        },
        "Documents": {
          "type": "array",
          "description": "A list of downloadable documents.",
          "pii": true,
          "minItems": 0,
          "maxItems": 99,
          "items": {
            "oneOf": [
              {
                "$ref": "#/domains/Generic/types/File"
              },
              {
                "$ref": "#/domains/Generic/types/Link"
              }
            ]
          }
        },
        "Confirmation": {
          "type": "object",
          "description": "Confirmation of the loan.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Loan confirmation code",
              "example": "1234"
            },
            "message": {
              "type": "string",
              "description": "Confirmation message from the web page.",
              "example": "Your loan is confirmed."
            },
            "savedUrl": {
              "$ref": "#/domains/Generic/types/Link"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "skipMobilePinVerification": {
              "type": "boolean",
              "default": false
            },
            "continueAfterSubmittingUrl": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Expenses": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/LoanApplication/types/Expense"
          }
        },
        "Expense": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1,
              "example": "How much do you earn per month?"
            },
            "value": {
              "type": "string",
              "minLength": 1,
              "example": "2000"
            }
          },
          "required": [
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        "ExpenseTypes": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/LoanApplication/types/ExpenseType"
          }
        },
        "ExpenseType": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "key"
          ],
          "additionalProperties": false
        },
        "FinancialPromotionRepresentativeSample": {
          "type": "object",
          "$ref": "#/domains/Generic/types/StructuredTextItem"
        },
        "Boolean": {
          "type": "boolean"
        },
        "Anything": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "KeyTerms": {
          "type": "object",
          "pii": true,
          "properties": {
            "loanAmount": {
              "type": "integer",
              "minLength": 1
            },
            "term": {
              "type": "integer",
              "minLength": 1
            },
            "monthlyRepayment": {
              "type": "integer",
              "minLength": 1
            },
            "apr": {
              "type": "integer",
              "minLength": 1
            },
            "totalAmountPayable": {
              "type": "integer",
              "minLength": 1
            }
          },
          "required": [],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "ConnectionReset",
          "category": "website",
          "description": "The supplier reset the TCP connection."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The customer already has a loan with this provider."
        },
        {
          "code": "EligibleForTopUp",
          "category": "client",
          "description": "The customer already has a loan with this provider and is eligible for a top up."
        },
        {
          "code": "GuarantorDeclined",
          "category": "client",
          "description": "Guarantor denied by lender."
        },
        {
          "code": "GuarantorDetailsInvalid",
          "category": "client",
          "description": "The guarantor details are not valid."
        },
        {
          "code": "LoanApplicationDeclined",
          "category": "client",
          "description": "Loan application denied by lender."
        },
        {
          "code": "LoanApplicationSuperseded",
          "category": "client",
          "description": "Loan application is superseded."
        },
        {
          "code": "MobilePinVerificationFailed",
          "category": "client",
          "description": "Pin verification failed."
        },
        {
          "code": "LoanTermsValidationFailed",
          "category": "client",
          "description": "Maximum amount or loan duration invalid."
        },
        {
          "code": "DirectDebitInvalid",
          "category": "client",
          "description": "The directDebit is invalid, according to the supplier."
        }
      ]
    },
    "LoanApplicationSA": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "email": {
          "$ref": "#/domains/LoanApplicationSA/types/Email"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "loan": {
          "$ref": "#/domains/LoanApplicationSA/types/Loan"
        },
        "applicant": {
          "$ref": "#/domains/LoanApplicationSA/types/Applicant"
        },
        "employment": {
          "$ref": "#/domains/LoanApplicationSA/types/Employment"
        },
        "tokenId": {
          "$ref": "#/domains/LoanApplicationSA/types/PiiString"
        },
        "directDebit": {
          "$ref": "#/domains/LoanApplicationSA/types/DirectDebitPaymentOrNull"
        },
        "mobilePinConfirmation": {
          "$ref": "#/domains/LoanApplicationSA/types/MobilePinConfirmation"
        },
        "mobilePinConfirmationRetry1": {
          "$ref": "#/domains/LoanApplicationSA/types/MobilePinConfirmation"
        },
        "mobilePinConfirmationRetry2": {
          "$ref": "#/domains/LoanApplicationSA/types/MobilePinConfirmation"
        },
        "expenses": {
          "$ref": "#/domains/LoanApplicationSA/types/Expenses"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "options": {
          "$ref": "#/domains/LoanApplicationSA/types/Options",
          "default": {},
          "initial": true
        }
      },
      "outputs": {
        "availableIndustryOptions": {
          "$ref": "#/domains/LoanApplicationSA/types/StringArray"
        },
        "availableJobTitles": {
          "$ref": "#/domains/LoanApplicationSA/types/StringArray"
        },
        "availableBanks": {
          "$ref": "#/domains/LoanApplicationSA/types/StringArray"
        },
        "expenseTypes": {
          "$ref": "#/domains/LoanApplicationSA/types/ExpenseTypes"
        },
        "confirmation": {
          "$ref": "#/domains/LoanApplicationSA/types/Confirmation"
        },
        "finalLoanAmount": {
          "$ref": "#/domains/LoanApplicationSA/types/LoanAmount"
        },
        "existingEmail": {
          "$ref": "#/domains/LoanApplicationSA/types/Existing"
        },
        "existingUser": {
          "$ref": "#/domains/LoanApplicationSA/types/Existing"
        }
      },
      "types": {
        "StringArray": {
          "type": "array",
          "items": {
            "$ref": "#/domains/LoanApplicationSA/types/String"
          }
        },
        "String": {
          "type": "string"
        },
        "PiiString": {
          "type": "string",
          "pii": true
        },
        "Loan": {
          "type": "object",
          "description": "Loan criteria",
          "properties": {
            "purpose": {
              "type": "string",
              "minLength": 1,
              "description": "Purpose of the loan.",
              "example": "buy a car"
            },
            "amount": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The loan amount required."
            },
            "repaymentMonths": {
              "type": "number",
              "description": "The number of months to repay the loan.",
              "example": 48
            },
            "existingLoan": {
              "type": "boolean",
              "description": "Existing loan with this provider."
            },
            "repaymentDays": {
              "type": "number",
              "description": "The number of days to repay the loan.",
              "example": 36
            },
            "promotionCode": {
              "type": "string",
              "minLength": 1,
              "description": "Promotion code."
            }
          },
          "additionalProperties": false,
          "required": [
            "amount"
          ]
        },
        "LoanAmount": {
          "type": "object",
          "$ref": "#/domains/Generic/types/Price",
          "description": "The loan amount contracted."
        },
        "ExistingApplication": {
          "type": "object",
          "description": "Existing loan application",
          "properties": {
            "id": {
              "type": "string",
              "description": "loan applicaton id.",
              "example": "12345"
            },
            "token": {
              "type": "string",
              "description": "Loan application token.",
              "example": "abcde"
            }
          },
          "additionalProperties": false,
          "required": [
            "id",
            "token"
          ]
        },
        "Email": {
          "type": "string",
          "format": "email",
          "example": "hello@example.com"
        },
        "Applicant": {
          "type": "object",
          "description": "The person applying for the loan.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/LoanApplicationSA/types/Person"
            },
            "addresses": {
              "type": "array",
              "description": "A list of addresses for the applicant.",
              "pii": true,
              "minItems": 1,
              "maxItems": 9,
              "items": {
                "$ref": "#/domains/LoanApplicationSA/types/LoanAddress"
              }
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "relationshipStatus": {
              "type": "string",
              "description": "",
              "enum": [
                "single",
                "married-prenuptial",
                "married-community",
                "divorced",
                "living-together",
                "cohabiting",
                "separated-prenuptial",
                "separated-community",
                "widower",
                "other-prenuptial",
                "other-community"
              ]
            },
            "nationality": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Nationality according to passport."
            },
            "dialect": {
              "type": "string",
              "description": "",
              "enum": [
                "other",
                "en",
                "af",
                "nd",
                "xh",
                "zu",
                "nso",
                "st",
                "tn",
                "ss",
                "ve",
                "ts"
              ]
            },
            "countryOfBirth": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country of birth."
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "dependantsCount": {
              "type": "integer",
              "minimum": 0
            },
            "residentialStatus": {
              "$ref": "#/domains/LoanApplicationSA/types/ResidentialStatus"
            }
          },
          "required": [
            "person",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "Addresses": {
          "type": "array",
          "description": "A list of addresses for the applicant.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/LoanApplicationSA/types/LoanAddress"
          }
        },
        "LoanAddress": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number.",
              "minLength": 1,
              "example": "501 Twin Peaks Blv"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "San Francisco"
            },
            "streetName": {
              "type": "string",
              "description": "Name of the street.",
              "minLength": 1,
              "example": "Clerkenwell Close"
            },
            "streetNumber": {
              "type": "string",
              "description": "Number of the street or other building identifier, such as house number or house name",
              "minLength": 1,
              "example": "27-31"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "minLength": 1,
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            },
            "dateMovedIn": {
              "type": "string",
              "format": "date",
              "description": "Date at which the applicant moved into this address."
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "own",
                "family",
                "rent"
              ]
            },
            "mortgage": {
              "$ref": "#/domains/LoanApplicationSA/types/Mortgage"
            }
          },
          "required": [
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ],
          "additionalProperties": false
        },
        "ResidentialStatus": {
          "type": "string",
          "description": "",
          "enum": [
            "own",
            "family",
            "rent"
          ]
        },
        "Mortgage": {
          "type": "object",
          "description": "Mortgage information for the associated address.",
          "pii": true,
          "properties": {
            "monthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month by the loan applicant."
            },
            "jointMonthlyPayment": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "The amount paid per month for a joint mortgage."
            }
          },
          "required": [
            "monthlyPayment"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "description": "Applicant employment details.",
          "pii": true,
          "properties": {
            "companyName": {
              "type": "string",
              "minLength": 1
            },
            "status": {
              "type": "string",
              "description": "",
              "enum": [
                "employed-fulltime",
                "employed-parttime",
                "unemployed",
                "self-employed",
                "on-benefits",
                "retired",
                "student"
              ]
            },
            "selectedIndustry": {
              "type": "string",
              "minLength": 1
            },
            "selectedJobTitle": {
              "type": "string",
              "minLength": 1
            },
            "period": {
              "$ref": "#/domains/LoanApplicationSA/types/EmploymentPeriod"
            },
            "jobTitle": {
              "type": "string",
              "minLength": 1,
              "description": "Job title.",
              "example": "Computer programmer"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "grossIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual gross salary (before tax)."
            },
            "netIncome": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Applicant's total annual net salary (after tax)."
            },
            "payFrequency": {
              "type": "string",
              "enum": [
                "monthly",
                "twice-monthly",
                "weekly",
                "bi-weekly",
                "last-day-of-month",
                "last-friday-of-month"
              ]
            },
            "payDay": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "status"
          ],
          "additionalProperties": false
        },
        "EmploymentPeriod": {
          "type": "object",
          "description": "Number of employment year and months.",
          "pii": true,
          "properties": {
            "years": {
              "type": "integer"
            },
            "months": {
              "type": "integer"
            }
          },
          "required": [
            "years",
            "months"
          ],
          "additionalProperties": false
        },
        "DirectDebitPaymentOrNull": {
          "pii": true,
          "oneOf": [
            {
              "$ref": "#/domains/LoanApplicationSA/types/DirectDebitPayment"
            },
            {
              "type": "null"
            }
          ]
        },
        "DirectDebitPayment": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "selectedBank": {
              "type": "string",
              "example": "First National Bank"
            },
            "account": {
              "$ref": "#/domains/LoanApplicationSA/types/Account"
            }
          },
          "required": [
            "selectedBank",
            "account"
          ],
          "additionalProperties": false
        },
        "Account": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "example": "Cheque",
              "enum": [
                "cheque",
                "current",
                "transmission",
                "savings"
              ]
            },
            "number": {
              "type": "string",
              "minLength": 12,
              "maxLength": 12,
              "description": "Cover marketing name as provided by the insurer.",
              "example": "262077292654"
            }
          },
          "required": [
            "type",
            "number"
          ],
          "additionalProperties": false
        },
        "MobilePinConfirmation": {
          "type": "object",
          "description": "Mobile pin confirmation to confirm the applicant's mobile number.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "pin confirmation code.",
              "example": "1234",
              "minLength": 3,
              "maxLength": 10
            }
          },
          "required": [
            "code"
          ],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "skipMobilePinVerification": {
              "type": "boolean",
              "default": false
            },
            "continueAfterSubmittingUrl": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Existing": {
          "type": "string",
          "enum": [
            "existing",
            "not-existing",
            "unknown"
          ]
        },
        "Expenses": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/LoanApplicationSA/types/Expense"
          }
        },
        "Expense": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1,
              "example": "How much do you earn per month?"
            },
            "value": {
              "type": "string",
              "minLength": 1,
              "example": "2000"
            }
          },
          "required": [
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Confirmation of the loan.",
          "pii": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Loan confirmation code",
              "example": "1234"
            },
            "message": {
              "type": "string",
              "description": "Confirmation message from the web page.",
              "example": "Your loan is confirmed."
            },
            "savedUrl": {
              "$ref": "#/domains/Generic/types/Link"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "ExpenseTypes": {
          "type": "array",
          "description": "A list of available cover options found on the page.",
          "minItems": 1,
          "maxItems": 40,
          "items": {
            "$ref": "#/domains/LoanApplicationSA/types/ExpenseType"
          }
        },
        "ExpenseType": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "key"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "ConnectionReset",
          "category": "website",
          "description": "The supplier reset the TCP connection."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The customer already has a loan with this provider."
        },
        {
          "code": "EligibleForTopUp",
          "category": "client",
          "description": "The customer already has a loan with this provider and is eligible for a top up."
        },
        {
          "code": "GuarantorDeclined",
          "category": "client",
          "description": "Guarantor denied by lender."
        },
        {
          "code": "GuarantorDetailsInvalid",
          "category": "client",
          "description": "The guarantor details are not valid."
        },
        {
          "code": "LoanApplicationSADeclined",
          "category": "client",
          "description": "Loan application denied by lender."
        },
        {
          "code": "MobilePinVerificationFailed",
          "category": "client",
          "description": "Pin verification failed."
        },
        {
          "code": "LoanTermsValidationFailed",
          "category": "client",
          "description": "Maximum amount or loan duration invalid."
        },
        {
          "code": "DirectDebitInvalid",
          "category": "client",
          "description": "The directDebit is invalid, according to the supplier."
        }
      ]
    },
    "EventBooking": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account",
          "canonical": [
            "/email"
          ]
        },
        "accountPassword": {
          "$ref": "#/domains/EventBooking/types/AccountPassword"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "deliveryAddress": {
          "$ref": "#/domains/Generic/types/Address"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "selectedDelivery": {
          "$ref": "#/domains/EventBooking/types/Delivery",
          "description": "Requested when delivery choices are required by website.<br/>At this point <code>availableDeliveries</code> output should contain information about available delivery options.<br/>Note: on deep links with pre-selected delivery options, this input might not required.<br/>Automation may fail if the incorrect option is specified, or if the delivery option is no longer available, for example, for a late or same day booking.",
          "sourceOutputKey": "availableDeliveries",
          "inputMethod": "SelectOne"
        },
        "options": {
          "$ref": "#/domains/EventBooking/types/Options",
          "default": {},
          "initial": true
        },
        "selectedRefund": {
          "$ref": "#/domains/EventBooking/types/SelectedRefund",
          "sourceOutputKey": "availableRefunds",
          "inputMethod": "SelectOne"
        },
        "selectedSeats": {
          "$ref": "#/domains/EventBooking/types/Seats"
        },
        "selectedMarketingContactOptions": {
          "$ref": "#/domains/EventBooking/types/SelectedItem",
          "description": "List of marketing contact options to be selected.",
          "sourceOutputKey": "availableMarketingContactOptions",
          "inputMethod": "SelectMany"
        },
        "selectedPerformance": {
          "$ref": "#/domains/EventBooking/types/Performance",
          "description": "List of available scheduling dates, times and locations.",
          "sourceOutputKey": "availablePerformances",
          "inputMethod": "SelectOne"
        },
        "selectedUpsells": {
          "$ref": "#/domains/EventBooking/types/Upsells",
          "description": "List of selected upsells.",
          "sourceOutputKey": "availableUpsells",
          "inputMethod": "SelectMany"
        },
        "overrideIntent": {
          "$ref": "#/domains/EventBooking/types/Intent",
          "description": "List of intents."
        },
        "promoCode": {
          "$ref": "#/domains/EventBooking/types/String"
        }
      },
      "outputs": {
        "tickets": {
          "description": "Emitted before finalPrice output. Contains information for the tickets about to be purchased by the job.",
          "$ref": "#/domains/EventBooking/types/Tickets"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/EventBooking/types/BookingConfirmation"
        },
        "availableMarketingContactOptions": {
          "$ref": "#/domains/EventBooking/types/StructuredTextItemsOrNull",
          "description": "List of marketing contact options provided."
        },
        "availableDeliveries": {
          "$ref": "#/domains/EventBooking/types/AvailableDeliveriesOrNull",
          "description": "Emitted when actual delivery information is collected.<br/>Note: on deep links with pre-selected delivery, this output may not be provided."
        },
        "availableRefunds": {
          "$ref": "#/domains/EventBooking/types/AvailableRefunds",
          "description": "Emitted when actual refund information is collected.<br/>Note: on deep links with pre-selected refund this output may not be provided."
        },
        "availableSeats": {
          "$ref": "#/domains/EventBooking/types/Seats"
        },
        "availablePerformances": {
          "$ref": "#/domains/EventBooking/types/Performances"
        },
        "availableUpsells": {
          "$ref": "#/domains/EventBooking/types/Upsells"
        },
        "showName": {
          "$ref": "#/domains/EventBooking/types/ShowName"
        },
        "seatsReserved": {
          "$ref": "#/domains/EventBooking/types/Boolean"
        }
      },
      "types": {
        "ShowName": {
          "type": "string",
          "description": "Name of the show being booked."
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/EventBooking/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "Delivery": {
          "type": "object",
          "description": "Ticket delivery information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Delivery text as provided by the insurer.",
              "example": "Collection from venue, Royal Mail post, Courier delivery"
            },
            "price": {
              "$ref": "#/domains/EventBooking/types/Price"
            }
          },
          "required": [
            "name"
          ]
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features such as upsells and additional features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "refund": {
              "type": "boolean",
              "default": false
            },
            "marketingContact": {
              "type": "boolean",
              "default": false
            },
            "useDeliveryAddressAsBilling": {
              "type": "boolean",
              "default": false
            },
            "noDMTJobsBefore": {
              "type": "boolean",
              "default": false
            },
            "upsells": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "AvailableDeliveriesOrNull": {
          "oneOf": [
            {
              "type": "array",
              "description": "A list of available delivery options found on the page.",
              "minItems": 1,
              "maxItems": 9,
              "items": {
                "$ref": "#/domains/EventBooking/types/Delivery"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "AvailableRefunds": {
          "type": "array",
          "description": "A list of available refund options found on the page.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/EventBooking/types/Refund"
          }
        },
        "SelectedRefund": {
          "oneOf": [
            {
              "$ref": "#/domains/EventBooking/types/Refund"
            },
            {
              "type": "null"
            }
          ]
        },
        "Refund": {
          "type": "object",
          "description": "Refund information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Refund marketing text as provided by the insurer.",
              "example": "No-Matter-What, Medical Emergency Only"
            },
            "price": {
              "$ref": "#/domains/EventBooking/types/Price"
            }
          },
          "required": [
            "name"
          ]
        },
        "Upsells": {
          "type": "array",
          "description": "A list of upsells.",
          "items": {
            "$ref": "#/domains/EventBooking/types/Upsell"
          }
        },
        "Upsell": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Glass of wine"
            },
            "quantity": {
              "type": "integer",
              "minimum": 1,
              "description": "Count of items",
              "example": 2
            },
            "description": {
              "type": "string",
              "example": "This package contains amazing glasses of wine (actual drink not included)."
            },
            "price": {
              "$ref": "#/domains/EventBooking/types/Price"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Performances": {
          "type": "array",
          "description": "A list of performances.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/EventBooking/types/Performance"
          }
        },
        "Performance": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9])$",
              "example": "2018-02-02"
            },
            "time": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "example": "15:41"
            },
            "location": {
              "type": "string"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Seats": {
          "type": "array",
          "description": "A list of seats.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/EventBooking/types/Seat"
          }
        },
        "Seat": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "minLength": 1,
              "example": "A10"
            },
            "section": {
              "type": "string",
              "minLength": 1,
              "example": "stalls"
            },
            "websiteId": {
              "type": "string",
              "description": "Unique identifier of the seat on the supplier's website, database id or html element id.",
              "minLength": 1,
              "example": "3ea307de-c69a-43c5-9d2e-63083ab3c945"
            },
            "sectionId": {
              "type": "string",
              "description": "Unique identifier of the seat section on the supplier's website, database id or html element id.",
              "minLength": 1,
              "example": "3ea307de-c69a-43c5-9d2e-63083ab3c945"
            },
            "ticketName": {
              "type": "string",
              "example": "Full price variety bundle"
            },
            "price": {
              "$ref": "#/domains/EventBooking/types/Price",
              "description": "Price, if found on the seat selection page."
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "SelectedItem": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            },
            {
              "type": "null"
            }
          ]
        },
        "Tickets": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 1,
              "description": "Count of tickets",
              "example": 2
            }
          },
          "required": [
            "count"
          ]
        },
        "StructuredTextItemsOrNull": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            }
          ]
        },
        "AccountPassword": {
          "type": "string",
          "pii": true
        },
        "Boolean": {
          "type": "boolean"
        },
        "Intent": {
          "type": "string",
          "enum": [
            "clearBasket"
          ]
        },
        "String": {
          "type": "string"
        },
        "Price": {
          "type": "object",
          "description": "Basic price information.",
          "properties": {
            "currencyCode": {
              "$ref": "#/domains/Generic/types/CurrencyCode"
            },
            "value": {
              "type": "integer",
              "description": "An integer in the smallest currency unit (100 for £1.00).",
              "example": "12300"
            },
            "tax": {
              "type": "integer",
              "example": "12"
            }
          },
          "required": [
            "currencyCode",
            "value"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "BasketCleared",
          "category": "client",
          "description": "Basket cleared upon request."
        },
        {
          "code": "DeliveryOptionInvalid",
          "category": "client",
          "description": "Delivery option does not match one of the options we are expecting"
        },
        {
          "code": "RefundOptionNotFound",
          "category": "client",
          "description": "Refund option does not match one of the options we are expecting"
        },
        {
          "code": "SeatSelectionNotAvailable",
          "category": "client",
          "description": "The seats are not available"
        },
        {
          "code": "EventNotAvailable",
          "category": "client",
          "description": "Requested event is not found"
        },
        {
          "code": "UpsellNotAvailable",
          "category": "client",
          "description": "Selected upsell item or quantity not available."
        }
      ]
    },
    "BroadbandSignup": {
      "description": "Allows automating broadband package signups in the UK.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
          "initial": true
        },
        "options": {
          "$ref": "#/domains/BroadbandSignup/types/Options",
          "default": {},
          "initial": true
        },
        "landlineCheck": {
          "$ref": "#/domains/BroadbandSignup/types/LandlineCheck",
          "canonical": [
            "/postcode"
          ]
        },
        "property": {
          "$ref": "#/domains/BroadbandSignup/types/Property",
          "canonical": [
            "/address/postcode",
            "/address/city",
            "/address/countrySubdivision"
          ]
        },
        "selectedTvPackages": {
          "$ref": "#/domains/BroadbandSignup/types/SelectedPackages",
          "sourceOutputKey": "availableTvPackages",
          "inputMethod": "SelectMany"
        },
        "selectedBroadbandPackage": {
          "$ref": "#/domains/BroadbandSignup/types/SelectedPackage",
          "sourceOutputKey": "availableBroadbandPackages",
          "inputMethod": "SelectOne"
        },
        "selectedPhonePackage": {
          "$ref": "#/domains/BroadbandSignup/types/SelectedPackage",
          "sourceOutputKey": "availablePhonePackages",
          "inputMethod": "SelectOne"
        },
        "contactPerson": {
          "$ref": "#/domains/BroadbandSignup/types/PersonDob"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "directDebit": {
          "$ref": "#/domains/BroadbandSignup/types/DirectDebit"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "landlineOptions": {
          "$ref": "#/domains/BroadbandSignup/types/LandlineOptions"
        },
        "installation": {
          "$ref": "#/domains/BroadbandSignup/types/Installation"
        },
        "monthlyPaymentMethod": {
          "$ref": "#/domains/BroadbandSignup/types/PaymentMethod"
        },
        "selectedMarketingContactOptions": {
          "$ref": "#/domains/BroadbandSignup/types/SelectedItem",
          "description": "List of marketing contact options to be selected.",
          "sourceOutputKey": "availableMarketingContactOptions",
          "inputMethod": "SelectMany"
        },
        "selectedTvSetupDate": {
          "$ref": "#/domains/BroadbandSignup/types/SetupDate",
          "sourceOutputKey": "availableTvSetupDates",
          "inputMethod": "SelectOne"
        },
        "selectedBroadbandSetupDate": {
          "$ref": "#/domains/BroadbandSignup/types/SetupDate",
          "sourceOutputKey": "availableBroadbandSetupDates",
          "inputMethod": "SelectOne"
        },
        "selectedMoveInDate": {
          "$ref": "#/domains/BroadbandSignup/types/SetupDate",
          "sourceOutputKey": "availableMoveInDates",
          "inputMethod": "SelectOne"
        },
        "selectedActiveLandlineOption": {
          "$ref": "#/domains/BroadbandSignup/types/String",
          "sourceOutputKey": "availableActiveLandlineOptions",
          "inputMethod": "SelectOne"
        },
        "selectedAddress": {
          "$ref": "#/domains/BroadbandSignup/types/PIIString",
          "sourceOutputKey": "availableAddresses",
          "inputMethod": "SelectOne"
        },
        "selectedInstallationAddress": {
          "$ref": "#/domains/BroadbandSignup/types/PIIString",
          "sourceOutputKey": "availableInstallationAddresses",
          "inputMethod": "SelectOne"
        },
        "selectedLineInstallationOption": {
          "$ref": "#/domains/BroadbandSignup/types/String"
        },
        "landlineChallenge": {
          "$ref": "#/domains/BroadbandSignup/types/String"
        },
        "directoryListing": {
          "$ref": "#/domains/BroadbandSignup/types/Boolean"
        },
        "alternativeCorrespondence": {
          "$ref": "#/domains/BroadbandSignup/types/NullableProperty"
        },
        "existingLandline": {
          "$ref": "#/domains/BroadbandSignup/types/ExistingLandline"
        },
        "voucherCode": {
          "$ref": "#/domains/BroadbandSignup/types/Voucher"
        }
      },
      "outputs": {
        "availableMarketingContactOptions": {
          "$ref": "#/domains/Generic/types/StructuredTextItems",
          "description": "List of marketing contact options provided by the insurer."
        },
        "availableTvPackages": {
          "$ref": "#/domains/BroadbandSignup/types/Packages"
        },
        "availableBroadbandPackages": {
          "$ref": "#/domains/BroadbandSignup/types/Packages"
        },
        "availablePhonePackages": {
          "$ref": "#/domains/BroadbandSignup/types/Packages"
        },
        "installationOptions": {
          "$ref": "#/domains/BroadbandSignup/types/InstallationOptions"
        },
        "availableAddresses": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableAddresses"
        },
        "availableInstallationAddresses": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableAddresses"
        },
        "availableTvSetupDates": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableSetupDatesOrNull"
        },
        "availableBroadbandSetupDates": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableSetupDatesOrNull"
        },
        "availableMoveInDates": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableSetupDatesOrNull"
        },
        "availableLineInstallationOptions": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableLineInstallationOptions"
        },
        "estimatedPriceBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItems"
        },
        "monthlyCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "oneOffCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "equipmentCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "extrasCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "upfrontPayment": {
          "$ref": "#/domains/BroadbandSignup/types/Anything"
        },
        "totalOneOffPrice": {
          "$ref": "#/domains/BroadbandSignup/types/Anything"
        },
        "monthlyPayments": {
          "$ref": "#/domains/BroadbandSignup/types/Anything"
        },
        "estimatedSpeed": {
          "$ref": "#/domains/BroadbandSignup/types/Anything"
        },
        "confirmation": {
          "$ref": "#/domains/BroadbandSignup/types/Confirmation"
        },
        "setupRequired": {
          "$ref": "#/domains/BroadbandSignup/types/Boolean"
        },
        "availableActiveLandlineOptions": {
          "$ref": "#/domains/BroadbandSignup/types/AvailableActiveLandlineOptions"
        },
        "serviceTermsAndConditions": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when T&Cs are presented."
        },
        "selectionBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItems"
        },
        "voucherDetails": {
          "$ref": "#/domains/BroadbandSignup/types/VoucherInformation"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "marketingContact": {
              "type": "boolean",
              "default": false
            },
            "success": {
              "type": "boolean",
              "default": false
            },
            "directoryListing": {
              "type": "boolean",
              "default": false
            },
            "addressSelection": {
              "type": "boolean",
              "default": false
            },
            "moveInDateSelection": {
              "type": "boolean",
              "default": false
            },
            "keepLandlineNumber": {
              "type": "boolean",
              "default": false
            },
            "screenshots": {
              "type": "boolean",
              "default": false
            },
            "testingFlow": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "LandlineCheck": {
          "type": "object",
          "description": "Information required to check existing landlines",
          "pii": true,
          "properties": {
            "postcode": {
              "$ref": "#/domains/BroadbandSignup/types/Postcode"
            },
            "landline": {
              "type": "string",
              "minLength": 9,
              "description": "Landline number (numbers only, excluding country code).",
              "example": "123456789",
              "pattern": "^0[0-9]{8,10}"
            },
            "billpayer": {
              "type": "boolean",
              "description": "Whether the user is also the bill payer of the landline check phone number."
            }
          },
          "required": [
            "postcode"
          ],
          "additionalProperties": false
        },
        "NullableProperty": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignup/types/Property"
            },
            {
              "type": "null"
            }
          ]
        },
        "Property": {
          "type": "object",
          "description": "Information about the property to be serviced.",
          "pii": true,
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "houseName": {
                  "type": "string",
                  "example": "Da house"
                },
                "streetNumber": {
                  "type": "string",
                  "minLength": 1,
                  "example": "93"
                },
                "streetName": {
                  "type": "string",
                  "minLength": 1,
                  "example": "Clerkenwell Close"
                },
                "postcode": {
                  "$ref": "#/domains/BroadbandSignup/types/Postcode"
                },
                "city": {
                  "type": "string",
                  "minLength": 1,
                  "example": "Dagenham"
                },
                "countrySubdivision": {
                  "type": "string",
                  "example": "Greater London"
                }
              },
              "required": [
                "postcode",
                "city",
                "countrySubdivision"
              ]
            }
          },
          "required": [
            "address"
          ],
          "additionalProperties": false
        },
        "LandlineOptions": {
          "type": "object",
          "description": "Owner details in relation to the address.",
          "pii": true,
          "properties": {
            "justMoved": {
              "type": "boolean"
            },
            "sharedProperty": {
              "type": "boolean"
            },
            "restartLine": {
              "type": "boolean"
            },
            "landline": {
              "type": "string",
              "minLength": 9,
              "description": "Landline number (numbers only, excluding country code).",
              "example": "123456789",
              "pattern": "^0[0-9]{8,10}"
            },
            "additionalLine": {
              "type": "boolean"
            }
          },
          "required": [
            "justMoved",
            "sharedProperty",
            "restartLine"
          ],
          "additionalProperties": false
        },
        "InstallationOptions": {
          "type": "object",
          "pii": true,
          "properties": {
            "propertyTypes": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "accessRestrictions": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "parkingRestrictions": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "buildingTypes": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "storeySelection": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Installation": {
          "type": "object",
          "pii": true,
          "properties": {
            "propertyType": {
              "type": "string"
            },
            "accessRestrictions": {
              "type": "string"
            },
            "parkingRestrictions": {
              "type": "string"
            },
            "buildingType": {
              "type": "string"
            },
            "storeySelection": {
              "type": "string"
            },
            "hasAccessToCommunalSatellite": {
              "type": "boolean"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "SelectedPackages": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignup/types/Packages"
            },
            {
              "type": "null"
            }
          ]
        },
        "SelectedPackage": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignup/types/Package"
            },
            {
              "type": "null"
            }
          ]
        },
        "Packages": {
          "type": "array",
          "description": "A list of packages.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignup/types/Package"
          }
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "All in One Package",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "image": {
              "$ref": "#/domains/Generic/types/Link"
            },
            "estimatedSpeed": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "PersonDob": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "Voucher": {
          "type": "object",
          "description": "Voucher details required to claim rewards.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "description": "Email used to receive information about voucher details.",
              "example": "hello@example.com"
            }
          },
          "required": [
            "email"
          ],
          "additionalProperties": false
        },
        "VoucherInformation": {
          "type": "object",
          "properties": {
            "termsAndConditions": {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            }
          },
          "additionalProperties": false
        },
        "DirectDebit": {
          "description": "Direct debit information for GB (sort code and account number) or IBAN information.",
          "pii": true,
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignup/types/DirectDebitGB"
            },
            {
              "$ref": "#/domains/BroadbandSignup/types/DirectDebitIban"
            }
          ]
        },
        "DirectDebitGB": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "sortCode": {
              "type": "string",
              "description": "Bank sort code",
              "pattern": "\\d{2}-?\\d{2}-?\\d{2}",
              "example": "56-00-29"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "description": "Account number provided by the bank.",
              "example": "26207729"
            },
            "accountHolder": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "accountHolderAddress": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "sortCode",
            "accountNumber",
            "accountHolder",
            "accountHolderAddress"
          ],
          "additionalProperties": false
        },
        "DirectDebitIban": {
          "type": "object",
          "description": "Account details for direct debit using IBAN.",
          "pii": true,
          "properties": {
            "iban": {
              "type": "string",
              "description": "International bank account number.",
              "example": "NL99BANK0123456789"
            }
          },
          "required": [
            "iban"
          ],
          "additionalProperties": false
        },
        "SetupDate": {
          "type": "object",
          "description": "Account details for direct debit.",
          "properties": {
            "date": {
              "type": "string",
              "format": "date",
              "example": "2019-01-01"
            }
          },
          "required": [
            "date"
          ],
          "additionalProperties": false
        },
        "AvailableSetupDatesOrNull": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "array",
              "description": "A list of setup dates.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/BroadbandSignup/types/SetupDate"
              }
            }
          ]
        },
        "Postcode": {
          "type": "string",
          "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
          "minLength": 4,
          "example": "RM108DE"
        },
        "AvailableAddresses": {
          "type": "array",
          "description": "A list of addresses.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "AvailableLineInstallationOptions": {
          "type": "array",
          "description": "A list of addresses.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "PaymentMethod": {
          "type": "string",
          "enum": [
            "card",
            "directdebit"
          ]
        },
        "Boolean": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "SelectedItem": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            },
            {
              "type": "null"
            }
          ]
        },
        "AvailableActiveLandlineOptions": {
          "type": "array",
          "description": "A list of options.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ExistingLandline": {
          "oneOf": [
            {
              "type": "object",
              "description": "Information required to check existing landlines",
              "pii": true,
              "properties": {
                "postcode": {
                  "$ref": "#/domains/BroadbandSignup/types/Postcode"
                },
                "landline": {
                  "type": "string",
                  "minLength": 9,
                  "description": "Landline number (numbers only, excluding country code).",
                  "example": "123456789",
                  "pattern": "^0[0-9]{8,10}"
                },
                "provider": {
                  "type": "string",
                  "description": "Landline provider"
                }
              },
              "required": [
                "postcode",
                "landline",
                "provider"
              ],
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "PIIString": {
          "type": "string",
          "pii": true
        },
        "String": {
          "type": "string"
        },
        "Anything": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        }
      },
      "errors": [
        {
          "code": "ContactUsToContinue",
          "category": "client",
          "description": "The user being asked to contact the supplier to continue the purchase."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The user being signed up is already a customer of this service."
        },
        {
          "code": "PackageNotAvailable",
          "category": "client",
          "description": "The package is not avaialbe."
        },
        {
          "code": "BankDetailsInvalid",
          "category": "client",
          "description": "Bank details invalid."
        },
        {
          "code": "DirectDebitRejected",
          "category": "client",
          "description": "Direct debit details rejected."
        },
        {
          "code": "LandlineMandatory",
          "category": "client",
          "description": "The landline is mandatory, but not either not provided or not valid."
        },
        {
          "code": "LandlineInvalid",
          "category": "client",
          "description": "The landline is not valid."
        },
        {
          "code": "OfferNotAvailable",
          "category": "client",
          "description": "The offer is not available, usually expired or not applicable to the user or client."
        }
      ]
    },
    "BroadbandSignupAU": {
      "description": "Allows automating broadband package signups in Australia.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
          "initial": true
        },
        "options": {
          "$ref": "#/domains/BroadbandSignupAU/types/Options",
          "default": {},
          "initial": true
        },
        "searchAddress": {
          "$ref": "#/domains/BroadbandSignupAU/types/StringAddress"
        },
        "selectedAddress": {
          "$ref": "#/domains/BroadbandSignupAU/types/StringAddress",
          "sourceOutputKey": "availableAddresses",
          "inputMethod": "SelectOne"
        },
        "selectedBroadbandPackage": {
          "$ref": "#/domains/BroadbandSignupAU/types/Package",
          "sourceOutputKey": "availableBroadbandPackages",
          "inputMethod": "SelectOne"
        },
        "selectedBroadbandExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras",
          "sourceOutputKey": "availableBroadbandExtras",
          "inputMethod": "SelectMany"
        },
        "selectedPhoneExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras",
          "sourceOutputKey": "availablePhoneExtras",
          "inputMethod": "SelectMany"
        },
        "selectedTvExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras",
          "sourceOutputKey": "availableTvExtras",
          "inputMethod": "SelectMany"
        },
        "selectedTvPackage": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extra",
          "sourceOutputKey": "availableTvPackages",
          "inputMethod": "SelectOne"
        },
        "contactPerson": {
          "$ref": "#/domains/BroadbandSignupAU/types/PersonDob"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "identityDocument": {
          "$ref": "#/domains/BroadbandSignupAU/types/IdentityDocument"
        },
        "currentAddress": {
          "$ref": "#/domains/BroadbandSignupAU/types/CurrentAddress"
        },
        "previousAddresses": {
          "$ref": "#/domains/BroadbandSignupAU/types/PreviousAddresses",
          "inputMethod": "SelectMany"
        },
        "employment": {
          "$ref": "#/domains/BroadbandSignupAU/types/Employment"
        },
        "landlineOptions": {
          "$ref": "#/domains/BroadbandSignupAU/types/LandlineOptions"
        },
        "keepPhoneNumberDetails": {
          "$ref": "#/domains/BroadbandSignupAU/types/KeepPhoneNumberDetails"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        }
      },
      "outputs": {
        "availableAddresses": {
          "$ref": "#/domains/BroadbandSignupAU/types/StringAddresses",
          "description": "List of available addresses to select from."
        },
        "availableBroadbandPackages": {
          "$ref": "#/domains/BroadbandSignupAU/types/Packages"
        },
        "availableBroadbandExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras"
        },
        "availablePhoneExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras"
        },
        "availableTvExtras": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras"
        },
        "availableTvPackages": {
          "$ref": "#/domains/BroadbandSignupAU/types/Extras"
        },
        "priceBreakdown": {
          "$ref": "#/domains/BroadbandSignupAU/types/PriceBreakdown",
          "description": "The list of price components, as found on the website."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "confirmation": {
          "$ref": "#/domains/BroadbandSignupAU/types/Confirmation",
          "description": "Booking confirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "success"
          ],
          "additionalProperties": false
        },
        "StringAddress": {
          "type": "string",
          "example": "50 Cresthaven"
        },
        "StringAddresses": {
          "type": "array",
          "description": "A list of strings.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupAU/types/StringAddress"
          }
        },
        "Packages": {
          "type": "array",
          "description": "A list of packages.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupAU/types/Package"
          }
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "All in One Package",
              "minLength": 1
            },
            "paymentPlanName": {
              "type": "string",
              "example": "Month to month",
              "minLength": 1
            },
            "priceLine": {
              "type": "string",
              "example": "Min. total cost for first month is $270 incl. $200 upfront costs",
              "minLength": 1
            },
            "description": {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "image": {
              "$ref": "#/domains/Generic/types/Link"
            },
            "estimatedSpeed": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Extras": {
          "type": "array",
          "description": "A list of extras.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupAU/types/Extra"
          }
        },
        "Extra": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Internet 100",
              "minLength": 1
            },
            "description": {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "CurrentAddress": {
          "type": "object",
          "properties": {
            "line1": {
              "type": "string",
              "example": "50 CRESTHAVEN BVD",
              "minLength": 1
            },
            "line2": {
              "type": "string",
              "example": "Flat 2"
            },
            "postCode": {
              "type": "string",
              "example": "3806",
              "minLength": 1
            },
            "city": {
              "type": "string",
              "example": "Melbourne",
              "minLength": 1
            },
            "citySubdivision": {
              "type": "string",
              "example": "Berwick",
              "minLength": 1
            },
            "countrySubdivision": {
              "$ref": "#/domains/BroadbandSignupAU/types/StateCode"
            },
            "status": {
              "type": "string",
              "enum": [
                "owned",
                "rent",
                "others"
              ]
            },
            "moveInDate": {
              "type": "string",
              "format": "date",
              "example": "2001-01-01"
            }
          },
          "required": [
            "line1",
            "postCode",
            "city",
            "citySubdivision",
            "countrySubdivision",
            "status"
          ],
          "additionalProperties": false
        },
        "PreviousAddresses": {
          "type": "array",
          "description": "A list of extras.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupAU/types/PreviousAddress"
          }
        },
        "PreviousAddress": {
          "type": "object",
          "properties": {
            "line1": {
              "type": "string",
              "example": "50 CRESTHAVEN BVD",
              "minLength": 1
            },
            "line2": {
              "type": "string",
              "example": "Flat 2"
            },
            "postCode": {
              "type": "string",
              "example": "3806",
              "minLength": 1
            },
            "city": {
              "type": "string",
              "example": "Melbourne",
              "minLength": 1
            },
            "citySubdivision": {
              "type": "string",
              "example": "Berwick",
              "minLength": 1
            },
            "countrySubdivision": {
              "$ref": "#/domains/BroadbandSignupAU/types/StateCode"
            }
          },
          "required": [
            "line1",
            "postCode",
            "city",
            "citySubdivision",
            "countrySubdivision"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "properties": {
            "occupation": {
              "type": "string",
              "example": "Product Manager",
              "minLength": 1
            },
            "industry": {
              "type": "string",
              "example": "IT",
              "minLength": 1
            },
            "status": {
              "type": "string",
              "enum": [
                "self-employed",
                "employed",
                "unemployed",
                "part-time",
                "retired"
              ]
            },
            "employerName": {
              "type": "string",
              "example": "Intel",
              "minLength": 1
            },
            "startDate": {
              "type": "string",
              "format": "date",
              "example": "2001-01-01"
            }
          },
          "required": [
            "occupation",
            "industry",
            "status",
            "employerName",
            "startDate"
          ],
          "additionalProperties": false
        },
        "PersonDob": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "driving-license"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueState": {
              "$ref": "#/domains/BroadbandSignupAU/types/StateCode"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number",
            "expirationDate",
            "issueCountryCode",
            "issueState"
          ],
          "additionalProperties": false
        },
        "LandlineOptions": {
          "type": "object",
          "description": "Landline options.",
          "properties": {
            "keepPhoneNumber": {
              "type": "boolean"
            },
            "transferService": {
              "type": "boolean"
            }
          },
          "required": [
            "keepPhoneNumber",
            "transferService"
          ],
          "additionalProperties": false
        },
        "KeepPhoneNumberDetails": {
          "type": "object",
          "description": "Landline options.",
          "properties": {
            "phoneNumber": {
              "type": "string",
              "minLength": 10,
              "description": "Landline number (numbers only, excluding country code).",
              "example": "123456789",
              "pattern": "^0[0-9]{8,10}"
            },
            "serviceProvider": {
              "type": "string",
              "example": "dodo"
            },
            "accountNumber": {
              "type": "string",
              "example": "1234567890"
            }
          },
          "required": [
            "phoneNumber",
            "serviceProvider",
            "accountNumber"
          ],
          "additionalProperties": false
        },
        "PriceBreakdown": {
          "type": "array",
          "description": "The list of price components, as found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupAU/types/PriceBreakdownItem"
          }
        },
        "PriceBreakdownItem": {
          "type": "object",
          "description": "A component of the price breakdown.",
          "properties": {
            "text": {
              "type": "string",
              "description": "The description of an item on the price breakdown list, as found on the website.",
              "example": "Credit card charge"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "text",
            "price"
          ]
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference extracted from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "StateCode": {
          "type": "string",
          "title": "ISO state code.",
          "description": "ISO state code representing the state. Uppercase.",
          "example": "us",
          "minLength": 2,
          "maxLength": 3,
          "enum": [
            "ACT",
            "NSW",
            "NT",
            "QLD",
            "SA",
            "TAS",
            "VIC",
            "WA"
          ]
        }
      },
      "errors": [
        {
          "code": "ContactUsToContinue",
          "category": "client",
          "description": "The user being asked to contact the supplier to continue the purchase."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The user being signed up is already a customer of this service."
        },
        {
          "code": "PackageNotAvailable",
          "category": "client",
          "description": "The package is not avaialbe."
        },
        {
          "code": "LandlineMandatory",
          "category": "client",
          "description": "The landline is mandatory, but not either not provided or not valid."
        },
        {
          "code": "LandlineInvalid",
          "category": "client",
          "description": "The landline is not valid."
        }
      ]
    },
    "BroadbandSignupUS": {
      "description": "Allows automating broadband package signups in the US.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
          "initial": true
        },
        "options": {
          "$ref": "#/domains/BroadbandSignupUS/types/Options",
          "default": {},
          "initial": true
        },
        "serviceAddress": {
          "$ref": "#/domains/BroadbandSignupUS/types/ServiceAddress",
          "canonical": [
            "/zip",
            "/streetAddress"
          ]
        },
        "contactPerson": {
          "$ref": "#/domains/BroadbandSignupUS/types/PersonDob"
        },
        "addBroadband": {
          "$ref": "#/domains/BroadbandSignupUS/types/Internet"
        },
        "selectedTvPackages": {
          "$ref": "#/domains/BroadbandSignupUS/types/SelectedPackages",
          "sourceOutputKey": "availableTvPackages",
          "inputMethod": "SelectMany"
        },
        "selectedTvPromotions": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull",
          "sourceOutputKey": "availableTvPromotions",
          "inputMethod": "SelectMany"
        },
        "selectedPremiumTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull",
          "sourceOutputKey": "availablePremiumTvChannels",
          "inputMethod": "SelectMany"
        },
        "selectedInternationalTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull",
          "sourceOutputKey": "availableInternationalTvChannels",
          "inputMethod": "SelectMany"
        },
        "selectedSportsTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull",
          "sourceOutputKey": "availableSportsTvChannels",
          "inputMethod": "SelectMany"
        },
        "selectedHardwareExtras": {
          "$ref": "#/domains/BroadbandSignupUS/types/SelectedHardwareExtras",
          "sourceOutputKey": "availableHardwareExtras",
          "inputMethod": "SelectMany"
        },
        "selectedHardwareOption": {
          "$ref": "#/domains/BroadbandSignupUS/types/HardwareOption",
          "sourceOutputKey": "availableHardwareOptions",
          "inputMethod": "SelectOne"
        },
        "selectedLandlordPermissionAnswer": {
          "$ref": "#/domains/BroadbandSignupUS/types/LandlordPermissionAnswer",
          "sourceOutputKey": "availableLandlordPermissionAnswers",
          "inputMethod": "SelectOne"
        },
        "selectedBroadbandExtras": {
          "$ref": "#/domains/BroadbandSignupUS/types/BroadbandExtras",
          "sourceOutputKey": "availableBroadbandExtras",
          "inputMethod": "SelectMany"
        },
        "selectedBroadbandPackage": {
          "$ref": "#/domains/BroadbandSignupUS/types/SelectedPackage",
          "sourceOutputKey": "availableBroadbandPackages",
          "inputMethod": "SelectOne"
        },
        "selectedInstallationOption": {
          "$ref": "#/domains/BroadbandSignupUS/types/InstallationOption",
          "sourceOutputKey": "availableInstallationOptions",
          "inputMethod": "SelectOne"
        },
        "selectedPhonePackage": {
          "$ref": "#/domains/BroadbandSignupUS/types/SelectedPackage",
          "sourceOutputKey": "availablePhonePackages",
          "inputMethod": "SelectOne"
        },
        "agentAccount": {
          "$ref": "#/domains/BroadbandSignupUS/types/AgentAccount"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "payment": {
          "$ref": "#/domains/BroadbandSignupUS/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "recurringPayment": {
          "$ref": "#/domains/BroadbandSignupUS/types/RecurringPayment"
        },
        "recurringPanToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "landlineOptions": {
          "$ref": "#/domains/BroadbandSignupUS/types/LandlineOptions"
        },
        "creditCheck": {
          "$ref": "#/domains/BroadbandSignupUS/types/CreditCheckOrNull"
        },
        "creditCheckAddress": {
          "$ref": "#/domains/BroadbandSignupUS/types/CheckAddressOrNull"
        },
        "tvCount": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvCount"
        },
        "directDebit": {
          "$ref": "#/domains/BroadbandSignupUS/types/DirectDebitIban"
        },
        "selectedTvSetupDate": {
          "$ref": "#/domains/BroadbandSignupUS/types/SetupDate",
          "sourceOutputKey": "availableTvSetupDates",
          "inputMethod": "SelectOne"
        },
        "selectedBroadbandSetupDate": {
          "$ref": "#/domains/BroadbandSignupUS/types/SetupDate",
          "sourceOutputKey": "availableBroadbandSetupDates",
          "inputMethod": "SelectOne"
        },
        "selectedActiveLandlineOption": {
          "$ref": "#/domains/BroadbandSignupUS/types/String",
          "sourceOutputKey": "availableActiveLandlineOptions",
          "inputMethod": "SelectOne"
        },
        "selectedSecurityQuestion": {
          "$ref": "#/domains/BroadbandSignupUS/types/SecurityQuestion",
          "sourceOutputKey": "availableSecurityQuestions",
          "inputMethod": "SelectOne"
        },
        "accountSecurityCode": {
          "$ref": "#/domains/BroadbandSignupUS/types/SecurityCode"
        },
        "securityAnswer": {
          "$ref": "#/domains/BroadbandSignupUS/types/Answer"
        },
        "existingLandline": {
          "$ref": "#/domains/BroadbandSignupUS/types/ExistingLandline"
        }
      },
      "outputs": {
        "availableTvPackages": {
          "$ref": "#/domains/BroadbandSignupUS/types/Packages"
        },
        "availableTvPromotions": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull"
        },
        "availablePremiumTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull"
        },
        "availableInternationalTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull"
        },
        "availableSportsTvChannels": {
          "$ref": "#/domains/BroadbandSignupUS/types/TvOptionsOrNull"
        },
        "availableBroadbandPackages": {
          "$ref": "#/domains/BroadbandSignupUS/types/Packages"
        },
        "availableBroadbandExtras": {
          "$ref": "#/domains/BroadbandSignupUS/types/BroadbandExtras"
        },
        "availableHardwareExtras": {
          "$ref": "#/domains/BroadbandSignupUS/types/HardwareExtras"
        },
        "availableHardwareOptions": {
          "$ref": "#/domains/BroadbandSignupUS/types/HardwareOptions"
        },
        "availableLandlordPermissionAnswers": {
          "$ref": "#/domains/BroadbandSignupUS/types/LandlordPermissionAnswers"
        },
        "availablePhonePackages": {
          "$ref": "#/domains/BroadbandSignupUS/types/Packages"
        },
        "availableInstallationOptions": {
          "$ref": "#/domains/BroadbandSignupUS/types/InstallationOptions"
        },
        "availableSecurityQuestions": {
          "$ref": "#/domains/BroadbandSignupUS/types/SecurityQuestions"
        },
        "availableTvSetupDates": {
          "$ref": "#/domains/BroadbandSignupUS/types/AvailableSetupDatesOrNull"
        },
        "availableBroadbandSetupDates": {
          "$ref": "#/domains/BroadbandSignupUS/types/AvailableSetupDatesOrNull"
        },
        "availableActiveLandlineOptions": {
          "$ref": "#/domains/BroadbandSignupUS/types/AvailableActiveLandlineOptions"
        },
        "creditCheckServiceFee": {
          "$ref": "#/domains/BroadbandSignupUS/types/CheckServiceFeeOrNull"
        },
        "estimatedPriceBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItems"
        },
        "monthlyCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "oneOffCosts": {
          "$ref": "#/domains/Generic/types/StructuredText"
        },
        "confirmation": {
          "$ref": "#/domains/BroadbandSignupUS/types/Confirmation"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        }
      },
      "types": {
        "ServiceAddress": {
          "type": "object",
          "pii": true,
          "properties": {
            "streetAddress": {
              "type": "string",
              "default": ""
            },
            "unit": {
              "type": "string",
              "default": ""
            },
            "city": {
              "type": "string",
              "default": ""
            },
            "state": {
              "type": "string",
              "enum": [
                "AK",
                "AL",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DC",
                "DE",
                "FL",
                "GA",
                "HI",
                "IA",
                "ID",
                "IL",
                "IN",
                "KS",
                "KY",
                "LA",
                "MA",
                "MD",
                "ME",
                "MI",
                "MN",
                "MO",
                "MS",
                "MT",
                "NC",
                "ND",
                "NE",
                "NH",
                "NJ",
                "NM",
                "NV",
                "NY",
                "OH",
                "OK",
                "OR",
                "PA",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VA",
                "VT",
                "WA",
                "WI",
                "WV",
                "WY"
              ]
            },
            "zip": {
              "type": "string",
              "default": ""
            }
          },
          "required": [
            "streetAddress",
            "zip"
          ],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            },
            "proxyUrl": {
              "type": "string",
              "default": ""
            },
            "mockDatabaseUrl": {
              "type": "string",
              "default": ""
            },
            "checkoutType": {
              "type": "string",
              "enum": [
                "broadband-and-tv",
                "tv-and-broadband"
              ]
            }
          },
          "required": [
            "checkoutType"
          ],
          "additionalProperties": false
        },
        "Internet": {
          "type": "boolean",
          "default": false
        },
        "CreditCheckOrNull": {
          "pii": true,
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "object",
              "description": "Information for client credit validation.",
              "pii": true,
              "properties": {
                "socialSecurityNumber": {
                  "type": "string",
                  "minLength": 9,
                  "maxLength": 11,
                  "default": ""
                },
                "document": {
                  "type": "object",
                  "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
                  "pii": true,
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Document type.",
                      "enum": [
                        "driver-license",
                        "state-issued-id",
                        "military-id",
                        "us-passport",
                        "foreign-government-id"
                      ]
                    },
                    "number": {
                      "type": "string",
                      "description": "Document number.",
                      "example": "75 127001"
                    },
                    "issueDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2008-01-01"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2028-01-01"
                    },
                    "issueCountryCode": {
                      "$ref": "#/domains/Generic/types/CountryCode",
                      "description": "Code of country where the document was issued."
                    },
                    "issueStateCode": {
                      "type": "string",
                      "description": "Code of state where the document was issued.",
                      "example": "AZ",
                      "enum": [
                        "AK",
                        "AL",
                        "AR",
                        "AZ",
                        "CA",
                        "CO",
                        "CT",
                        "DC",
                        "DE",
                        "FL",
                        "GA",
                        "HI",
                        "IA",
                        "ID",
                        "IL",
                        "IN",
                        "KS",
                        "KY",
                        "LA",
                        "MA",
                        "MD",
                        "ME",
                        "MI",
                        "MN",
                        "MO",
                        "MS",
                        "MT",
                        "NC",
                        "ND",
                        "NE",
                        "NH",
                        "NJ",
                        "NM",
                        "NV",
                        "NY",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "UT",
                        "VA",
                        "VT",
                        "WA",
                        "WI",
                        "WV",
                        "WY"
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "number",
                    "expirationDate",
                    "issueStateCode"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "socialSecurityNumber"
              ],
              "additionalProperties": false
            }
          ]
        },
        "CheckAddressOrNull": {
          "pii": true,
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "object",
              "description": "For different billing address.",
              "pii": true,
              "properties": {
                "streetAddress": {
                  "type": "string",
                  "default": ""
                },
                "unit": {
                  "type": "string",
                  "default": ""
                },
                "city": {
                  "type": "string",
                  "default": ""
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "AK",
                    "AL",
                    "AR",
                    "AZ",
                    "CA",
                    "CO",
                    "CT",
                    "DC",
                    "DE",
                    "FL",
                    "GA",
                    "HI",
                    "IA",
                    "ID",
                    "IL",
                    "IN",
                    "KS",
                    "KY",
                    "LA",
                    "MA",
                    "MD",
                    "ME",
                    "MI",
                    "MN",
                    "MO",
                    "MS",
                    "MT",
                    "NC",
                    "ND",
                    "NE",
                    "NH",
                    "NJ",
                    "NM",
                    "NV",
                    "NY",
                    "OH",
                    "OK",
                    "OR",
                    "PA",
                    "RI",
                    "SC",
                    "SD",
                    "TN",
                    "TX",
                    "UT",
                    "VA",
                    "VT",
                    "WA",
                    "WI",
                    "WV",
                    "WY"
                  ]
                },
                "zip": {
                  "type": "string",
                  "default": ""
                }
              },
              "required": [
                "streetAddress",
                "unit",
                "zip"
              ],
              "additionalProperties": false
            }
          ]
        },
        "CheckServiceFeeOrNull": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/domains/Generic/types/StructuredTextItem"
            }
          ]
        },
        "AgentAccount": {
          "type": "object",
          "description": "Information about the agent login account.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "agent@example.com"
            },
            "userName": {
              "type": "string",
              "default": ""
            },
            "password": {
              "type": "string",
              "default": ""
            }
          },
          "required": [
            "password"
          ],
          "additionalProperties": false
        },
        "LandlineOptions": {
          "type": "object",
          "description": "Owner details in relation to the address.",
          "pii": true,
          "properties": {
            "justMoved": {
              "type": "boolean"
            },
            "sharedProperty": {
              "type": "boolean"
            },
            "restartLine": {
              "type": "boolean"
            },
            "landline": {
              "type": "string",
              "minLength": 9,
              "description": "Landline number (numbers only, excluding country code).",
              "example": "123456789",
              "pattern": "^0[0-9]{8,10}"
            },
            "additionalLine": {
              "type": "boolean"
            }
          },
          "required": [
            "justMoved",
            "sharedProperty",
            "restartLine"
          ],
          "additionalProperties": false
        },
        "TvCount": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of TV's in the household.",
          "example": "8",
          "pattern": "^0[0-9]{1,2}"
        },
        "SecurityCode": {
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "description": "For authentication purposes, customers are required to set up a 4-digit passcode (Pin).",
          "pii": true
        },
        "SelectedPackages": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignupUS/types/Packages"
            },
            {
              "type": "null"
            }
          ]
        },
        "SelectedPackage": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignupUS/types/Package"
            },
            {
              "type": "null"
            }
          ]
        },
        "Packages": {
          "type": "array",
          "description": "A list of packages.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/Package"
          }
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "All in One Package",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "image": {
              "$ref": "#/domains/Generic/types/Link"
            },
            "estimatedSpeed": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "BroadbandExtras": {
          "type": "array",
          "description": "A list of broadband extra options.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/BroadbandExtra"
          }
        },
        "BroadbandExtra": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "InstallationOptions": {
          "type": "array",
          "description": "A list of installation packages.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/InstallationOption"
          }
        },
        "InstallationOption": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Professional Install",
              "minLength": 1
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "HardwareExtras": {
          "type": "array",
          "description": "A list of hardware devices.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/HardwareExtra"
          }
        },
        "HardwareExtra": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Genie Mini",
              "minLength": 1
            },
            "maxCount": {
              "type": "integer",
              "example": "3",
              "minimum": 1,
              "description": "Maximum number of required devices.",
              "pattern": "^0[0-9]{1,2}"
            }
          },
          "required": [
            "name",
            "maxCount"
          ],
          "additionalProperties": false
        },
        "SelectedHardwareExtras": {
          "type": "array",
          "description": "A list of hardware devices.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/SelectedHardwareExtra"
          }
        },
        "SelectedHardwareExtra": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Genie Mini",
              "minLength": 1
            },
            "count": {
              "type": "integer",
              "example": "3",
              "minimum": 1,
              "description": "Number of specific devices.",
              "pattern": "^0[0-9]{1}"
            }
          },
          "required": [
            "name",
            "count"
          ],
          "additionalProperties": false
        },
        "HardwareOptions": {
          "type": "array",
          "description": "A list of hardware options.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/HardwareOption"
          }
        },
        "HardwareOption": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "LandlordPermissionAnswers": {
          "type": "array",
          "description": "A list of answers for validating client permission to install services.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/LandlordPermissionAnswer"
          }
        },
        "LandlordPermissionAnswer": {
          "type": "string",
          "minLength": 1,
          "example": "I rent and I have permission from my landlord."
        },
        "TvOptionsOrNull": {
          "oneOf": [
            {
              "type": "array",
              "description": "A list of channels, promotions options.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/BroadbandSignupUS/types/TvOption"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "TvOption": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "PersonDob": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "DirectDebitIban": {
          "type": "object",
          "description": "Account details for direct debit using IBAN.",
          "pii": true,
          "properties": {
            "iban": {
              "type": "string",
              "description": "International bank account number.",
              "example": "NL99BANK0123456789"
            }
          },
          "required": [
            "iban"
          ],
          "additionalProperties": false
        },
        "SetupDate": {
          "type": "object",
          "description": "Account details for direct debit.",
          "properties": {
            "dateTime": {
              "type": "string",
              "minLength": 1,
              "example": "2020-03-16 09:00 - 11:00"
            }
          },
          "required": [
            "dateTime"
          ],
          "additionalProperties": false
        },
        "AvailableSetupDatesOrNull": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "type": "array",
              "description": "A list of setup dates.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/BroadbandSignupUS/types/SetupDate"
              }
            }
          ]
        },
        "Postcode": {
          "type": "string",
          "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
          "minLength": 4,
          "example": "RM108DE"
        },
        "SecurityQuestions": {
          "type": "array",
          "description": "A list of security questions.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupUS/types/SecurityQuestion"
          }
        },
        "SecurityQuestion": {
          "type": "string",
          "pii": true,
          "description": "A question for authentication if credentials are forgotten.",
          "example": "Who is your favorite actor?"
        },
        "Answer": {
          "type": "string",
          "pii": true,
          "description": "A answer to selected security question for authentication if credentials are forgotten.",
          "example": "Van Damme"
        },
        "Boolean": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "AvailableActiveLandlineOptions": {
          "type": "array",
          "description": "A list of options.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ExistingLandline": {
          "oneOf": [
            {
              "type": "object",
              "description": "Information required to check existing landlines",
              "pii": true,
              "properties": {
                "postcode": {
                  "$ref": "#/domains/BroadbandSignupUS/types/Postcode"
                },
                "landline": {
                  "type": "string",
                  "minLength": 9,
                  "description": "Landline number (numbers only, excluding country code).",
                  "example": "123456789",
                  "pattern": "^0[0-9]{8,10}"
                },
                "provider": {
                  "type": "string",
                  "description": "Landline provider"
                }
              },
              "required": [
                "postcode",
                "landline",
                "provider"
              ],
              "additionalProperties": false
            },
            {
              "type": "null"
            }
          ]
        },
        "Payment": {
          "type": "object",
          "description": "Payment information",
          "pii": true,
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "postcode": {
                  "type": "string",
                  "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
                  "example": "94581"
                }
              },
              "required": [
                "postcode"
              ],
              "additionalProperties": false
            },
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            }
          },
          "required": [
            "address",
            "card"
          ],
          "additionalProperties": false
        },
        "RecurringPayment": {
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/domains/BroadbandSignupUS/types/Payment"
            }
          ]
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "PIIString": {
          "type": "string",
          "pii": true
        },
        "String": {
          "type": "string"
        }
      },
      "errors": [
        {
          "code": "InvalidSSN",
          "category": "client",
          "description": "The social security number is invalid."
        },
        {
          "code": "InvalidPIN",
          "category": "client",
          "description": "The PIN is invalid."
        },
        {
          "code": "PackageNotAvailable",
          "category": "client",
          "description": "The package is not available."
        },
        {
          "code": "OfferNotAvailable",
          "category": "client",
          "description": "The offer is not available, usually expired or not applicable to the user or client."
        },
        {
          "code": "DateOfBirthInvalid",
          "category": "client",
          "description": "Date of birth is not accepted by the website",
          "example": "Child must be younger than 12"
        },
        {
          "code": "DocumentIssueDateInvalid",
          "category": "client",
          "description": "Document issue date is not accepted by the website",
          "example": "The issue date cannot be after today's date"
        },
        {
          "code": "DocumentExpiryDateInvalid",
          "category": "client",
          "description": "Document expiration date is not accepted by the website",
          "example": "Document should be valid for more than 3 months"
        },
        {
          "code": "SecurityInformationInvalid",
          "category": "client",
          "description": "The security information provided was not accepted by the website.",
          "example": "Invalid security code or question."
        },
        {
          "code": "ContactDetailsInvalid",
          "category": "client",
          "description": "Invalid contact details."
        },
        {
          "code": "CreditCheckAddressInvalid",
          "category": "client",
          "description": "Invalid credit check address."
        }
      ]
    },
    "BroadbandSignupES": {
      "description": "Allows automating broadband package signups in the ES.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
          "initial": true
        },
        "options": {
          "$ref": "#/domains/BroadbandSignupES/types/Options",
          "default": {},
          "initial": true
        },
        "serviceAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/ServiceAddress",
          "canonical": [
            "/postcode",
            "/city"
          ]
        },
        "billingAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/ServiceAddress",
          "canonical": [
            "/postcode",
            "/city"
          ]
        },
        "selectedBroadbandPackage": {
          "$ref": "#/domains/BroadbandSignupES/types/Package",
          "sourceOutputKey": "availableBroadbandPackages",
          "inputMethod": "SelectOne"
        },
        "contactPerson": {
          "$ref": "#/domains/BroadbandSignupES/types/Person"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "iban": {
          "$ref": "#/domains/BroadbandSignupES/types/String"
        },
        "bankAccountHolder": {
          "$ref": "#/domains/BroadbandSignupES/types/Person"
        },
        "landlineOptions": {
          "$ref": "#/domains/BroadbandSignupES/types/LandlineOptions"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/BroadbandSignupES/types/FinalPrice",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "selectedBroadbandSetupDate": {
          "$ref": "#/domains/BroadbandSignupES/types/SetupDate",
          "sourceOutputKey": "availableBroadbandSetupDates",
          "inputMethod": "SelectOne"
        },
        "selectedMarketingContactOptions": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings",
          "description": "List of marketing contact options to be selected.",
          "sourceOutputKey": "availableMarketingContactOptions",
          "inputMethod": "SelectMany"
        },
        "selectedStreetNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableStreetNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedFloorNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableFloorNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedDoorNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableDoorNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBuildingNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBuildingNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedEntranceNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableEntranceNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBillingStreetNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBillingStreetNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBillingFloorNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBillingFloorNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBillingDoorNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBillingDoorNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBillingEntranceNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBillingEntranceNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedBillingBuildingNumber": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "sourceOutputKey": "availableBillingBuildingNumbers",
          "inputMethod": "SelectOne"
        },
        "selectedServiceAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "description": "Selected service addresses.",
          "sourceOutputKey": "availableServiceAddresses",
          "inputMethod": "SelectOne"
        },
        "selectedBillingAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "description": "Selected billing addresses.",
          "sourceOutputKey": "availableBillingAddresses",
          "inputMethod": "SelectOne"
        },
        "selectedServiceAddressComponent": {
          "$ref": "#/domains/BroadbandSignupES/types/SelectedDynamicOption",
          "dynamic": true
        },
        "selectedBillingAddressComponent": {
          "$ref": "#/domains/BroadbandSignupES/types/SelectedDynamicOption",
          "dynamic": true
        },
        "selectedServiceProvider": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "description": "Selected provider.",
          "sourceOutputKey": "availableServiceProviders",
          "inputMethod": "SelectOne"
        }
      },
      "outputs": {
        "availableBroadbandPackages": {
          "$ref": "#/domains/BroadbandSignupES/types/Packages"
        },
        "updatedBroadbandPrice": {
          "$ref": "#/domains/BroadbandSignupES/types/String"
        },
        "availableBroadbandSetupDates": {
          "$ref": "#/domains/BroadbandSignupES/types/AvailableSetupDatesOrNull"
        },
        "legalConditions": {
          "$ref": "#/domains/Generic/types/StructuredTextItem"
        },
        "privacyPolicy": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when the privacy policy is presented."
        },
        "availableMarketingContactOptions": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings",
          "description": "List of marketing contact options provided by the provider."
        },
        "availableServiceAddresses": {
          "$ref": "#/domains/BroadbandSignupES/types/ServiceAddresses",
          "description": "List of service addresses."
        },
        "availableBillingAddresses": {
          "$ref": "#/domains/BroadbandSignupES/types/BillingAddresses",
          "description": "List of billing addresses."
        },
        "availableServiceProviders": {
          "$ref": "#/domains/BroadbandSignupES/types/ServiceProviders",
          "description": "List of providers."
        },
        "availableNationalities": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableServiceAddressComponent": {
          "$ref": "#/domains/BroadbandSignupES/types/AvailableDynamicOption",
          "dynamic": true
        },
        "availableBillingAddressComponent": {
          "$ref": "#/domains/BroadbandSignupES/types/AvailableDynamicOption",
          "dynamic": true
        },
        "availableStreetNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableFloorNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableDoorNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableBuildingNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableEntranceNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "finalServiceAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/String"
        },
        "availableBillingStreetNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableBillingFloorNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableBillingDoorNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableBillingEntranceNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "availableBillingBuildingNumbers": {
          "$ref": "#/domains/BroadbandSignupES/types/Strings"
        },
        "finalBillingAddress": {
          "$ref": "#/domains/BroadbandSignupES/types/String"
        },
        "confirmation": {
          "$ref": "#/domains/BroadbandSignupES/types/Confirmation"
        },
        "serviceTermsAndConditions": {
          "$ref": "#/domains/Generic/types/StructuredTextItem",
          "description": "Emitted when T&Cs are presented."
        },
        "broadbandPackageName": {
          "$ref": "#/domains/BroadbandSignupES/types/String",
          "description": "Emitted when there is a single package available and selected."
        },
        "estimatedPriceBreakdown": {
          "$ref": "#/domains/Generic/types/StructuredTextItem"
        },
        "estimatedPrice": {
          "$ref": "#/domains/BroadbandSignupES/types/EstimatedPrice"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/BroadbandSignupES/types/FinalPrice"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "ServiceAddress": {
          "type": "object",
          "description": "Information about the property to be serviced.",
          "pii": true,
          "properties": {
            "street": {
              "type": "string",
              "minLength": 1,
              "example": "Da road"
            },
            "number": {
              "type": "string",
              "minLength": 1,
              "example": "93"
            },
            "postcode": {
              "$ref": "#/domains/BroadbandSignupES/types/Postcode"
            },
            "city": {
              "type": "string",
              "minLength": 1,
              "example": "Madrid"
            },
            "citySubdivision": {
              "type": "string",
              "minLength": 1,
              "example": "Madrid"
            },
            "region": {
              "type": "string",
              "example": "Madrid"
            }
          },
          "required": [
            "street",
            "number",
            "city"
          ],
          "additionalProperties": false
        },
        "AvailableDynamicOption": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignupES/types/AvailableOptionString"
            },
            {
              "$ref": "#/domains/BroadbandSignupES/types/AvailableOptionSelectOne"
            },
            {
              "$ref": "#/domains/BroadbandSignupES/types/AvailableOptionSelectMany"
            }
          ]
        },
        "AvailableOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/BroadbandSignupES/types/String"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/BroadbandSignupES/types/String"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "SelectedDynamicOption": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignupES/types/SelectedOptionString"
            },
            {
              "$ref": "#/domains/BroadbandSignupES/types/SelectedOptionSelectOne"
            },
            {
              "$ref": "#/domains/BroadbandSignupES/types/SelectedOptionSelectMany"
            },
            {
              "type": "null"
            }
          ]
        },
        "SelectedOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "text"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "$ref": "#/domains/BroadbandSignupES/types/String"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/BroadbandSignupES/types/String"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "Packages": {
          "type": "array",
          "description": "A list of packages.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/Package"
          }
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "All in One Package",
              "minLength": 1
            },
            "description": {
              "oneOf": [
                {
                  "$ref": "#/domains/Generic/types/StructuredTextItem"
                },
                {
                  "type": "string"
                }
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "image": {
              "$ref": "#/domains/Generic/types/Link"
            },
            "estimatedSpeed": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Customer's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "nationality": {
              "type": "string",
              "example": "Argentina"
            },
            "DNI": {
              "type": "string",
              "description": "Customer's national document of identity.",
              "example": "11111111H"
            },
            "NIE": {
              "type": "string",
              "description": "Customer's foreigner identification number.",
              "example": "Y-12345678-R"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "AvailableSetupDatesOrNull": {
          "type": "array",
          "description": "A list of setup dates.",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/SetupDate"
          }
        },
        "SetupDate": {
          "type": "string",
          "description": "Account details for direct debit.",
          "format": "date",
          "example": "2019-01-01"
        },
        "Postcode": {
          "type": "string",
          "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
          "minLength": 4,
          "example": "RM108DE"
        },
        "AvailableAddresses": {
          "type": "array",
          "description": "A list of addresses.",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "Boolean": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "LandlineOptions": {
          "type": "object",
          "description": "Landline options.",
          "properties": {
            "keepPhoneNumber": {
              "type": "boolean"
            },
            "phoneNumber": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "serviceProvider": {
              "type": "string",
              "example": "dodo"
            },
            "owner": {
              "$ref": "#/domains/BroadbandSignupES/types/Person"
            }
          },
          "required": [
            "keepPhoneNumber"
          ],
          "additionalProperties": false
        },
        "ServiceAddresses": {
          "type": "array",
          "description": "A list of service addresses.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/String"
          }
        },
        "BillingAddresses": {
          "type": "array",
          "description": "A list of billing addresses.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/String"
          }
        },
        "ServiceProviders": {
          "type": "array",
          "description": "A list of providers.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/String"
          }
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "PIIString": {
          "type": "string",
          "pii": true
        },
        "StringsOrNull": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/domains/BroadbandSignupES/types/String"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "Strings": {
          "type": "array",
          "items": {
            "$ref": "#/domains/BroadbandSignupES/types/String"
          }
        },
        "EstimatedPrice": {
          "oneOf": [
            {
              "$ref": "#/domains/BroadbandSignupES/types/FinalPrice"
            },
            {
              "$ref": "#/domains/BroadbandSignupES/types/String"
            }
          ]
        },
        "String": {
          "type": "string"
        },
        "FinalPrice": {
          "type": "object",
          "properties": {
            "now": {
              "type": "string"
            },
            "monthly": {
              "type": "string"
            },
            "monthlyDiscounted": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "ContactUsToContinue",
          "category": "client",
          "description": "The user being asked to contact the supplier to continue the purchase."
        },
        {
          "code": "AlreadyACustomer",
          "category": "client",
          "description": "The user being signed up is already a customer of this service."
        },
        {
          "code": "PackageNotAvailable",
          "category": "client",
          "description": "The package is not avaialbe."
        },
        {
          "code": "BankDetailsInvalid",
          "category": "client",
          "description": "Bank details invalid."
        },
        {
          "code": "DirectDebitRejected",
          "category": "client",
          "description": "Direct debit details rejected."
        },
        {
          "code": "LandlineMandatory",
          "category": "client",
          "description": "The landline is mandatory, but not either not provided or not valid."
        },
        {
          "code": "LandlineInvalid",
          "category": "client",
          "description": "The landline is not valid."
        },
        {
          "code": "OfferNotAvailable",
          "category": "client",
          "description": "The offer is not available, usually expired or not applicable to the user or client."
        }
      ]
    },
    "HotelBooking": {
      "description": "Allows automating hotel booking on individual suppliers and OTAs.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "dataExtractionDomainId": "HotelBookingExtraction",
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "search": {
          "$ref": "#/domains/HotelBooking/types/Search"
        },
        "options": {
          "$ref": "#/domains/HotelBooking/types/Options",
          "default": {},
          "initial": true,
          "description": "A set of options that define the automation's behaviour."
        },
        "selectedRooms": {
          "$ref": "#/domains/HotelBooking/types/Rooms",
          "description": "List of rooms to be booked in one go. Depending on the supplier, only one item may be allowed.",
          "sourceOutputKey": "availableRooms",
          "inputMethod": "SelectMany"
        },
        "selectedHotel": {
          "$ref": "#/domains/HotelBooking/types/Hotel",
          "description": "Selected hotel.",
          "sourceOutputKey": "availableHotels",
          "inputMethod": "SelectOne"
        },
        "selectedSearchRate": {
          "$ref": "#/domains/HotelBooking/types/SearchRate",
          "description": "Selected search rate.",
          "sourceOutputKey": "availableSearchRates",
          "inputMethod": "SelectOne"
        },
        "guestAges": {
          "$ref": "#/domains/Generic/types/Ages",
          "description": "List of guest ages."
        },
        "mainGuest": {
          "$ref": "#/domains/HotelBooking/types/MainGuest",
          "description": "Personal details about the main guest.",
          "canonical": [
            "/person",
            "/contact/email"
          ]
        },
        "guests": {
          "$ref": "#/domains/HotelBooking/types/Guests",
          "description": "Personal details about the guests."
        },
        "visit": {
          "$ref": "#/domains/HotelBooking/types/Visit",
          "description": "Details about the visit."
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account",
          "description": "If required, used for logging in."
        },
        "payment": {
          "$ref": "#/domains/HotelBooking/types/Payment"
        },
        "selectedPaymentMethod": {
          "$ref": "#/domains/HotelBooking/types/PaymentMethod",
          "sourceOutputKey": "availablePaymentMethods",
          "inputMethod": "SelectOne"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "discount": {
          "$ref": "#/domains/HotelBooking/types/Discount"
        },
        "loginConfirmationCode": {
          "$ref": "#/domains/HotelBooking/types/ConfirmationCode",
          "description": "When logging in, some websites require a confirmation code."
        }
      },
      "outputs": {
        "availableSearchRates": {
          "$ref": "#/domains/HotelBooking/types/SearchRates",
          "description": "List of room rates."
        },
        "availableHotels": {
          "$ref": "#/domains/HotelBooking/types/Hotels",
          "description": "List of hotels found on the supplier's website."
        },
        "availableRooms": {
          "$ref": "#/domains/HotelBooking/types/Rooms",
          "description": "List of rooms found on the supplier's website."
        },
        "guestsAgeRanges": {
          "$ref": "#/domains/HotelBooking/types/AgeRanges",
          "description": "Age ranges. Guest type min/max age."
        },
        "totalBookingPrice": {
          "$ref": "#/domains/HotelBooking/types/TotalPrice",
          "description": "Total price of the current booking."
        },
        "availablePaymentMethods": {
          "$ref": "#/domains/HotelBooking/types/PaymentMethods",
          "description": "List of payment methods found on the supplier's website."
        },
        "hotelDetails": {
          "$ref": "#/domains/HotelBooking/types/HotelDetails",
          "description": "Details about the hotel."
        },
        "supportedCards": {
          "$ref": "#/domains/HotelBooking/types/SupportedCards",
          "description": "List of card brands and types found on the supplier's website."
        },
        "priceBreakdown": {
          "$ref": "#/domains/HotelBooking/types/PriceBreakdown",
          "description": "Total price breakdown."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/HotelBooking/types/BookingConfirmation"
        },
        "billingPrice": {
          "$ref": "#/domains/Generic/types/Price"
        },
        "loggedIn": {
          "$ref": "#/domains/HotelBooking/types/Boolean"
        },
        "availableRoomsFinished": {
          "$ref": "#/domains/HotelBooking/types/Boolean"
        },
        "bookingInputs": {
          "$ref": "#/domains/HotelBooking/types/BookingInputs",
          "description": "Echoed non-PII inputs"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "If <code>true</code>, returns a fake success without making a booking.",
              "default": false
            },
            "useSearchNotUrl": {
              "type": "boolean",
              "description": "If <code>true</code>, uses the search input.",
              "default": false
            },
            "searchRates": {
              "type": "boolean",
              "description": "If <code>true</code>, enables special rates output and input at search.",
              "default": false
            },
            "showMemberRates": {
              "type": "boolean",
              "description": "If <code>true</code>, enables member rates output and input at room selection.",
              "default": false
            },
            "enableDiscountCode": {
              "type": "boolean",
              "description": "If <code>true</code>, enables the discount code input.",
              "default": false
            },
            "outputAvailableRoomsOnce": {
              "type": "boolean",
              "description": "If <code>true</code>, the availableRooms output is delayed until the website's prices get their final update.",
              "default": false
            },
            "userAgent": {
              "type": "string",
              "description": "Enables custom user-agent header when performing automations."
            }
          }
        },
        "Discount": {
          "type": "object",
          "description": "Discount code.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Discount code",
              "example": "RL2XYZ"
            },
            "agentCode": {
              "type": "string",
              "description": "Agent code to unlock special discount codes",
              "example": "ABC1234"
            }
          },
          "additionalProperties": false,
          "required": [
            "code"
          ]
        },
        "Visit": {
          "type": "object",
          "properties": {
            "purpose": {
              "type": "string",
              "enum": [
                "business",
                "leisure"
              ]
            },
            "message": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "SupportedCards": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/HotelBooking/types/CardBrandType"
          }
        },
        "ConfirmationCode": {
          "type": "string",
          "minLength": 1,
          "example": "ABC123"
        },
        "CardBrandType": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Card type, debit or credit.",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "brand": {
              "type": "string",
              "description": "Card brand.",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            }
          },
          "required": [
            "brand",
            "type"
          ],
          "additionalProperties": false
        },
        "SearchRates": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/HotelBooking/types/SearchRate"
          }
        },
        "SearchRate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Senior Discounts"
            },
            "text": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Search": {
          "type": "object",
          "properties": {
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "rooms": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/HotelBooking/types/SearchRoom"
              }
            },
            "text": {
              "type": "string",
              "example": "London, UK",
              "minLength": 3
            },
            "currencyCode": {
              "$ref": "#/domains/Generic/types/CurrencyCode"
            },
            "languageCode": {
              "type": "string",
              "minLength": 2
            },
            "hotelId": {
              "type": "string"
            }
          },
          "required": [
            "checkInDate",
            "checkOutDate",
            "rooms"
          ],
          "additionalProperties": false
        },
        "SearchRoom": {
          "type": "object",
          "properties": {
            "ages": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "number",
                "minimum": 0,
                "maximum": 150,
                "exmaple": 31
              }
            }
          },
          "required": [
            "ages"
          ],
          "additionalProperties": false
        },
        "Hotels": {
          "type": "array",
          "description": "A list of hotels.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/HotelBooking/types/Hotel"
          }
        },
        "HotelDetails": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "My Hotel"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Hotel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "My Hotel"
            },
            "priceLine": {
              "type": "string",
              "minLength": 1,
              "example": "From 188 GBP Avg./night"
            },
            "addressLine": {
              "type": "string",
              "minLength": 1,
              "example": "21 Piccadilly London, United Kingdom W1J 0BH"
            },
            "images": {
              "type": "array",
              "description": "A list of images.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/Generic/types/Link"
              }
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Rooms": {
          "type": "array",
          "description": "A list of rooms.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/HotelBooking/types/Room"
          }
        },
        "RoomDescription": {
          "type": "array",
          "description": "A list to describe a room or a rate.",
          "minItems": 0,
          "items": {
            "type": "string",
            "example": "Maximum occupancy: 2"
          }
        },
        "Room": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "Standard Single Room"
            },
            "name": {
              "type": "string",
              "example": "Room with Window"
            },
            "rate": {
              "type": "string",
              "example": "Breakfast Plus"
            },
            "description": {
              "$ref": "#/domains/HotelBooking/types/RoomDescription"
            },
            "rateDescription": {
              "$ref": "#/domains/HotelBooking/types/RoomDescription"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 20600,
                "currency": "gbp"
              }
            },
            "strikePrice": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 30600,
                "currency": "gbp"
              }
            },
            "priceLines": {
              "type": "array",
              "items": {
                "$ref": "#/domains/HotelBooking/types/PriceLineItem"
              }
            },
            "cancellation": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "enum": [
                    "full-refundable",
                    "flexible-refundable",
                    "non-refundable",
                    "unknown"
                  ]
                },
                "details": {
                  "$ref": "#/domains/Generic/types/StructuredTextItem",
                  "example": {
                    "type": "Text",
                    "text": "Free cancellation up to 24h before. Cancellation not allowed afterwards."
                  }
                }
              },
              "required": [
                "code"
              ],
              "additionalProperties": false
            },
            "valueAdditions": {
              "type": "array",
              "items": {
                "$ref": "#/domains/HotelBooking/types/ValueAddition"
              }
            },
            "occupancy": {
              "type": "object",
              "properties": {
                "adults": {
                  "type": "number"
                },
                "children": {
                  "type": "number"
                },
                "infants": {
                  "type": "number"
                }
              },
              "required": [
                "adults"
              ],
              "additionalProperties": false
            },
            "rateGroup": {
              "type": "string",
              "example": "standard"
            },
            "isMemberRate": {
              "type": "boolean",
              "example": true
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/domains/Generic/types/Link"
              }
            }
          },
          "required": [
            "type",
            "price",
            "cancellation",
            "valueAdditions"
          ],
          "additionalProperties": false
        },
        "ValueAddition": {
          "type": "string",
          "enum": [
            "pay-later",
            "free-breakfast",
            "free-half-board",
            "free-full-board",
            "free-all-inclusive",
            "free-parking",
            "free-internet"
          ]
        },
        "PriceBreakdown": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HotelBooking/types/PriceLineItem"
          }
        },
        "PriceLineItem": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "net-rate",
                "city-tax",
                "vat",
                "hotel-fee",
                "resort-fee",
                "service-fee",
                "booking-fee",
                "total-now",
                "total-later",
                "total-later-supplier",
                "total-overall",
                "total-overall-supplier",
                "others"
              ]
            },
            "paidAtHotel": {
              "type": "boolean"
            },
            "excludedFromTotals": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 20600,
                "currency": "gbp"
              }
            }
          },
          "required": [
            "type",
            "description",
            "price"
          ],
          "additionalProperties": false
        },
        "PaymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HotelBooking/types/PaymentMethod"
          }
        },
        "PaymentMethod": {
          "type": "string",
          "enum": [
            "card",
            "paypal",
            "direct-debit",
            "bank-transfer",
            "no-prepayment"
          ]
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/HotelBooking/types/Person"
            },
            "contact": {
              "$ref": "#/domains/HotelBooking/types/GuestContact"
            },
            "memberId": {
              "$ref": "#/domains/HotelBooking/types/MemberId"
            }
          },
          "required": [
            "person",
            "contact"
          ],
          "additionalProperties": false
        },
        "MemberId": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "example": "12345"
            }
          },
          "required": [
            "number"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "phone": {
              "$ref": "#/domains/Generic/types/AnyPhoneString"
            },
            "email": {
              "type": "string",
              "description": "Email address used for contact.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "Guests": {
          "type": "array",
          "description": "A list of guests.",
          "minItems": 1,
          "pii": true,
          "items": {
            "$ref": "#/domains/HotelBooking/types/Person"
          }
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity. This is a copy of Generic.Person, with title and document removed.",
          "pii": true,
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "AgeRanges": {
          "type": "object",
          "properties": {
            "children": {
              "$ref": "#/domains/HotelBooking/types/AgeRange"
            },
            "infants": {
              "$ref": "#/domains/HotelBooking/types/AgeRange"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "AgeRange": {
          "type": "object",
          "properties": {
            "minAge": {
              "type": "integer"
            },
            "maxAge": {
              "type": "integer"
            }
          },
          "required": [
            "minAge",
            "maxAge"
          ],
          "additionalProperties": false
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "TotalPrice": {
          "type": "object",
          "description": "Total booking price that includes pay now and pay later",
          "properties": {
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "price"
          ]
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "person": {
              "$ref": "#/domains/HotelBooking/types/Person"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "Boolean": {
          "type": "boolean"
        },
        "BookingInputs": {
          "type": "object",
          "description": "Some of the inputs sent to the job, reflected back.",
          "pii": false,
          "properties": {
            "search": {
              "$ref": "#/domains/HotelBooking/types/Search"
            },
            "selectedRooms": {
              "$ref": "#/domains/HotelBooking/types/Rooms"
            }
          },
          "required": [
            "search",
            "selectedRooms"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "RoomNotAvailable",
          "category": "client",
          "description": "The website claims the room is not available for the selected dates."
        },
        {
          "code": "DiscountCodeInvalid",
          "category": "client",
          "description": "The website claims the discount code provided is invalid."
        },
        {
          "code": "MultipleRoomsRequired",
          "category": "client",
          "description": "Multiple rooms required for the requested amount of guests."
        },
        {
          "code": "MinimumStayRequired",
          "category": "client",
          "description": "The minimum stay requirement is not met."
        },
        {
          "code": "GuestDetailsInvalid",
          "category": "client",
          "description": "The guest details are invalid."
        }
      ]
    },
    "TestHotelBooking": {
      "description": "Allows automating hotel booking on individual suppliers and OTAs.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "search": {
          "$ref": "#/domains/TestHotelBooking/types/Search"
        },
        "options": {
          "$ref": "#/domains/TestHotelBooking/types/Options",
          "default": {},
          "initial": true,
          "description": "A set of options that define the automation's behaviour."
        },
        "selectedRooms": {
          "$ref": "#/domains/TestHotelBooking/types/Rooms",
          "description": "List of rooms to be booked in one go. Depending on the supplier, only one item may be allowed.",
          "sourceOutputKey": "availableRooms",
          "inputMethod": "SelectMany"
        },
        "selectedHotel": {
          "$ref": "#/domains/TestHotelBooking/types/Hotel",
          "description": "Selected hotel.",
          "sourceOutputKey": "availableHotels",
          "inputMethod": "SelectOne"
        },
        "selectedSearchRate": {
          "$ref": "#/domains/TestHotelBooking/types/SearchRate",
          "description": "Selected search rate.",
          "sourceOutputKey": "availableSearchRates",
          "inputMethod": "SelectOne"
        },
        "guestAges": {
          "$ref": "#/domains/Generic/types/Ages",
          "description": "List of guest ages."
        },
        "mainGuest": {
          "$ref": "#/domains/TestHotelBooking/types/MainGuest",
          "description": "Personal details about the main guest.",
          "canonical": [
            "/person",
            "/contact/email"
          ]
        },
        "guests": {
          "$ref": "#/domains/TestHotelBooking/types/Guests",
          "description": "Personal details about the guests."
        },
        "visit": {
          "$ref": "#/domains/TestHotelBooking/types/Visit",
          "description": "Details about the visit."
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account",
          "description": "If required, used for logging in."
        },
        "payment": {
          "$ref": "#/domains/TestHotelBooking/types/Payment"
        },
        "selectedPaymentMethod": {
          "$ref": "#/domains/TestHotelBooking/types/PaymentMethod",
          "sourceOutputKey": "availablePaymentMethods",
          "inputMethod": "SelectOne"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "loginConfirmationCode": {
          "$ref": "#/domains/TestHotelBooking/types/ConfirmationCode",
          "description": "When logging in, some websites require a confirmation code."
        }
      },
      "outputs": {
        "availableSearchRates": {
          "$ref": "#/domains/TestHotelBooking/types/SearchRates",
          "description": "List of room rates."
        },
        "availableHotels": {
          "$ref": "#/domains/TestHotelBooking/types/Hotels",
          "description": "List of hotels found on the supplier's website."
        },
        "availableRooms": {
          "$ref": "#/domains/TestHotelBooking/types/Rooms",
          "description": "List of rooms found on the supplier's website."
        },
        "guestsAgeRanges": {
          "$ref": "#/domains/TestHotelBooking/types/AgeRanges",
          "description": "Age ranges. Guest type min/max age."
        },
        "totalBookingPrice": {
          "$ref": "#/domains/TestHotelBooking/types/TotalPrice",
          "description": "Total price of the current booking."
        },
        "availablePaymentMethods": {
          "$ref": "#/domains/TestHotelBooking/types/PaymentMethods",
          "description": "List of payment methods found on the supplier's website."
        },
        "hotelDetails": {
          "$ref": "#/domains/TestHotelBooking/types/HotelDetails",
          "description": "Details about the hotel."
        },
        "supportedCards": {
          "$ref": "#/domains/TestHotelBooking/types/SupportedCards",
          "description": "List of card brands and types found on the supplier's website."
        },
        "priceBreakdown": {
          "$ref": "#/domains/TestHotelBooking/types/PriceBreakdown",
          "description": "Total price breakdown."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/TestHotelBooking/types/BookingConfirmation"
        },
        "billingPrice": {
          "$ref": "#/domains/Generic/types/Price"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "If <code>true</code>, returns a fake success without making a booking.",
              "default": false
            },
            "searchRates": {
              "type": "boolean",
              "description": "If <code>true</code>, enables special rates output and input at search.",
              "default": false
            },
            "showMemberRates": {
              "type": "boolean",
              "description": "If <code>true</code>, enables member rates output and input at room selection.",
              "default": false
            },
            "userAgent": {
              "type": "string",
              "description": "Enables custom user-agent header when performing automations."
            }
          }
        },
        "Visit": {
          "type": "object",
          "properties": {
            "purpose": {
              "type": "string",
              "enum": [
                "business",
                "leisure"
              ]
            },
            "message": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "SupportedCards": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/CardBrandType"
          }
        },
        "ConfirmationCode": {
          "type": "string",
          "minLength": 1,
          "example": "ABC123"
        },
        "CardBrandType": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Card type, debit or credit.",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "brand": {
              "type": "string",
              "description": "Card brand.",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            }
          },
          "required": [
            "brand",
            "type"
          ],
          "additionalProperties": false
        },
        "SearchRates": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/SearchRate"
          }
        },
        "SearchRate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "Senior Discounts"
            },
            "text": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Search": {
          "type": "object",
          "properties": {
            "checkInDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "checkOutDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "rooms": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/TestHotelBooking/types/SearchRoom"
              }
            },
            "text": {
              "type": "string",
              "example": "London, UK",
              "minLength": 3
            }
          },
          "required": [
            "checkInDate",
            "checkOutDate",
            "rooms"
          ],
          "additionalProperties": false
        },
        "SearchRoom": {
          "type": "object",
          "properties": {
            "ages": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "number",
                "minimum": 0,
                "maximum": 150,
                "exmaple": 31
              }
            }
          },
          "required": [
            "ages"
          ],
          "additionalProperties": false
        },
        "Hotels": {
          "type": "array",
          "description": "A list of hotels.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/Hotel"
          }
        },
        "HotelDetails": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "My Hotel"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Hotel": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1,
              "example": "My Hotel"
            },
            "priceLine": {
              "type": "string",
              "minLength": 1,
              "example": "From 188 GBP Avg./night"
            },
            "addressLine": {
              "type": "string",
              "minLength": 1,
              "example": "21 Piccadilly London, United Kingdom W1J 0BH"
            },
            "images": {
              "type": "array",
              "description": "A list of images.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/Generic/types/Link"
              }
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": false
        },
        "Rooms": {
          "type": "array",
          "description": "A list of rooms.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/Room"
          }
        },
        "RoomDescription": {
          "type": "array",
          "description": "A list to describe a room.",
          "minItems": 0,
          "items": {
            "type": "string",
            "example": "Maximum occupancy: 2"
          }
        },
        "Room": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "Standard Single Room"
            },
            "name": {
              "type": "string",
              "example": "Room with Window"
            },
            "rate": {
              "type": "string",
              "example": "Breakfast Plus"
            },
            "description": {
              "$ref": "#/domains/TestHotelBooking/types/RoomDescription"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 20600,
                "currency": "gbp"
              }
            },
            "strikePrice": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 30600,
                "currency": "gbp"
              }
            },
            "priceLines": {
              "type": "array",
              "items": {
                "$ref": "#/domains/TestHotelBooking/types/PriceLineItem"
              }
            },
            "cancellation": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "enum": [
                    "full-refundable",
                    "flexible-refundable",
                    "non-refundable",
                    "unknown"
                  ]
                },
                "details": {
                  "$ref": "#/domains/Generic/types/StructuredTextItem",
                  "example": {
                    "type": "Text",
                    "text": "Free cancellation up to 24h before. Cancellation not allowed afterwards."
                  }
                }
              },
              "required": [
                "code"
              ],
              "additionalProperties": false
            },
            "valueAdditions": {
              "type": "array",
              "items": {
                "$ref": "#/domains/TestHotelBooking/types/ValueAddition"
              }
            },
            "rateGroup": {
              "type": "string",
              "example": "standard"
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#/domains/Generic/types/Link"
              }
            }
          },
          "required": [
            "type",
            "price",
            "cancellation",
            "valueAdditions"
          ],
          "additionalProperties": false
        },
        "ValueAddition": {
          "type": "string",
          "enum": [
            "pay-later",
            "free-breakfast",
            "free-half-board",
            "free-full-board",
            "free-all-inclusive",
            "free-parking",
            "free-internet"
          ]
        },
        "PriceBreakdown": {
          "type": "array",
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/PriceLineItem"
          }
        },
        "PriceLineItem": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "net-rate",
                "city-tax",
                "vat",
                "hotel-fee",
                "resort-fee",
                "service-fee",
                "booking-fee",
                "total-now",
                "total-later",
                "total-later-supplier",
                "total-overall",
                "total-overall-supplier",
                "others"
              ]
            },
            "paidAtHotel": {
              "type": "boolean"
            },
            "excludedFromTotals": {
              "type": "boolean"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 20600,
                "currency": "gbp"
              }
            }
          },
          "required": [
            "type",
            "description",
            "price"
          ],
          "additionalProperties": false
        },
        "PaymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/PaymentMethod"
          }
        },
        "PaymentMethod": {
          "type": "string",
          "enum": [
            "card",
            "paypal",
            "direct-debit",
            "bank-transfer",
            "no-prepayment"
          ]
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/TestHotelBooking/types/Person"
            },
            "contact": {
              "$ref": "#/domains/TestHotelBooking/types/GuestContact"
            }
          },
          "required": [
            "person",
            "contact"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "phone": {
              "$ref": "#/domains/Generic/types/AnyPhoneString"
            },
            "email": {
              "type": "string",
              "description": "Email address used for contact.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "Guests": {
          "type": "array",
          "description": "A list of guests.",
          "minItems": 1,
          "pii": true,
          "items": {
            "$ref": "#/domains/TestHotelBooking/types/Person"
          }
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity. This is a copy of Generic.Person, with title and document removed.",
          "pii": true,
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "AgeRanges": {
          "type": "object",
          "properties": {
            "children": {
              "$ref": "#/domains/TestHotelBooking/types/AgeRange"
            },
            "infants": {
              "$ref": "#/domains/TestHotelBooking/types/AgeRange"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "AgeRange": {
          "type": "object",
          "properties": {
            "minAge": {
              "type": "integer"
            },
            "maxAge": {
              "type": "integer"
            }
          },
          "required": [
            "minAge",
            "maxAge"
          ],
          "additionalProperties": false
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "TotalPrice": {
          "type": "object",
          "description": "Total booking price that includes pay now and pay later",
          "properties": {
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "price"
          ]
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "person": {
              "$ref": "#/domains/TestHotelBooking/types/Person"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "RoomNotAvailable",
          "category": "client",
          "description": "The website claims the room is not available for the selected dates."
        }
      ]
    },
    "HotelPriceCrawling": {
      "description": "Enables crawling hotel prices.",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "previousResults": {
          "$ref": "#/domains/HotelPriceCrawling/types/Results",
          "description": "The list of available rooms with rates."
        },
        "searches": {
          "$ref": "#/domains/HotelPriceCrawling/types/Searches"
        }
      },
      "outputs": {
        "hotel": {
          "$ref": "#/domains/HotelPriceCrawling/types/Hotel",
          "description": "Hotel details as claimed by the website."
        },
        "ageThreshold": {
          "$ref": "#/domains/HotelPriceCrawling/types/Integer",
          "description": "The threshold which differentiates child guests from adult guests. This value is right bounded (the threshold itself belongs to the child category)."
        },
        "results": {
          "$ref": "#/domains/HotelPriceCrawling/types/Results",
          "description": "The list of available rooms with rates."
        },
        "pointOfSale": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "The list of available rooms with rates."
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {},
          "additionalProperties": false
        },
        "Results": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/HotelPriceCrawling/types/ResultItem"
          }
        },
        "ResultItem": {
          "type": "object",
          "properties": {
            "search": {
              "$ref": "#/domains/HotelPriceCrawling/types/Search"
            },
            "result": {
              "$ref": "#/domains/HotelPriceCrawling/types/Result"
            }
          },
          "required": [
            "search",
            "result"
          ],
          "additionalProperties": false
        },
        "Result": {
          "type": "object",
          "properties": {
            "estimated": {
              "type": "boolean"
            },
            "crawledAt": {
              "type": "integer"
            },
            "rooms": {
              "$ref": "#/domains/HotelPriceCrawling/types/Rooms"
            }
          },
          "required": [
            "estimated",
            "crawledAt",
            "rooms"
          ],
          "additionalProperties": false
        },
        "Rooms": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/HotelPriceCrawling/types/Room"
          }
        },
        "Room": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 200,
              "description": "The name of the room, as presented to users."
            },
            "id": {
              "type": "string",
              "description": "A room identifier, unique per hotel"
            },
            "description": {
              "type": "string"
            },
            "capacity": {
              "type": "integer",
              "description": "The maximum number of guests that a room can physically accommodate."
            },
            "occupancy": {
              "type": "integer",
              "description": "The maximum number of guests that a room is intended for."
            },
            "images": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/domains/Generic/types/Link"
              }
            },
            "rates": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/HotelPriceCrawling/types/Rate"
              }
            }
          },
          "required": [
            "name",
            "rates"
          ],
          "additionalProperties": false
        },
        "Rate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 200,
              "description": "The name of the rate, as presented to users."
            },
            "id": {
              "type": "string",
              "description": "A rate identifier, unique per hotel"
            },
            "rule": {
              "type": "string",
              "description": "A rate rule ID, e.g. 'member' or 'mobile'"
            },
            "description": {
              "type": "string"
            },
            "occupancy": {
              "type": "integer",
              "description": "The number of guests that the rate is intended for."
            },
            "breakfastIncluded": {
              "type": "boolean"
            },
            "parkingIncluded": {
              "type": "boolean"
            },
            "internetIncluded": {
              "type": "boolean"
            },
            "baseRate": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "taxes": {
              "type": "array",
              "minItems": 0,
              "items": {
                "$ref": "#/domains/Generic/types/NamedPrice"
              }
            }
          },
          "required": [
            "name",
            "baseRate",
            "taxes"
          ],
          "additionalProperties": false
        },
        "Hotel": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "A identifier, unique per hotel"
            },
            "name": {
              "type": "string",
              "maxLength": 200,
              "description": "Name of the hotel."
            },
            "language": {
              "type": "string",
              "description": "Default hotel language."
            },
            "currency": {
              "type": "string",
              "description": "Default hotel currency."
            },
            "address": {
              "type": "string",
              "description": "Hotel address."
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "String": {
          "type": "string"
        },
        "Integer": {
          "type": "integer"
        },
        "Searches": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/HotelPriceCrawling/types/Search"
          }
        },
        "Search": {
          "type": "object",
          "properties": {
            "hotelId": {
              "type": "string",
              "description": "A identifier, unique per hotel"
            },
            "checkIn": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            "nights": {
              "type": "integer"
            },
            "guests": {
              "type": "integer"
            }
          },
          "required": [
            "hotelId",
            "checkIn",
            "nights"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "RoomsNotAvailable",
          "category": "client",
          "description": "The website claims the room is not available for the search criteria."
        },
        {
          "code": "ChildrenCountNotSupported",
          "category": "client",
          "description": "The requested number of children is not supported by any room at this hotel."
        },
        {
          "code": "AdultsCountNotSupported",
          "category": "client",
          "description": "The requested number of adults is not supported by any room at this hotel."
        },
        {
          "code": "HotelNotOnIbe",
          "category": "client",
          "description": "The hotel was not found on the IBE."
        }
      ]
    },
    "HotelRoomBooking": {
      "description": "Enables booking hotel rooms.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "search": {
          "$ref": "#/domains/HotelRoomBooking/types/Search"
        },
        "roomId": {
          "$ref": "#/domains/HotelRoomBooking/types/String",
          "description": "Identifier of the room to be booked."
        },
        "rateId": {
          "$ref": "#/domains/HotelRoomBooking/types/String",
          "description": "Identifier of the rate to be booked."
        },
        "mainGuest": {
          "$ref": "#/domains/HotelRoomBooking/types/MainGuest",
          "description": "Personal details about the main guest.",
          "canonical": [
            "/person",
            "/contact/email"
          ]
        },
        "payment": {
          "$ref": "#/domains/HotelRoomBooking/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        }
      },
      "outputs": {
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/HotelRoomBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "person": {
              "$ref": "#/domains/HotelRoomBooking/types/Person"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "phone": {
              "$ref": "#/domains/Generic/types/AnyPhoneString"
            },
            "email": {
              "type": "string",
              "description": "Email address used for contact.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/HotelRoomBooking/types/Person"
            },
            "contact": {
              "$ref": "#/domains/HotelRoomBooking/types/GuestContact"
            }
          },
          "required": [
            "person",
            "contact"
          ],
          "additionalProperties": false
        },
        "String": {
          "type": "string"
        },
        "Search": {
          "type": "object",
          "properties": {
            "hotelId": {
              "type": "string",
              "description": "UBIO hotel identifier"
            },
            "checkIn": {
              "type": "string",
              "format": "date",
              "example": "2023-06-27"
            },
            "nights": {
              "type": "integer",
              "example": 2
            },
            "guests": {
              "type": "integer",
              "example": 2
            }
          },
          "required": [
            "hotelId",
            "checkIn",
            "nights",
            "guests"
          ],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "RoomNotAvailable",
          "category": "client",
          "description": "The website claims that the room is not available for the search criteria."
        }
      ]
    },
    "PropertyBooking": {
      "description": "Allows automating property booking.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "options": {
          "$ref": "#/domains/PropertyBooking/types/Options",
          "default": {},
          "initial": true
        },
        "mainGuest": {
          "$ref": "#/domains/PropertyBooking/types/MainGuest",
          "description": "Personal details about the main guest.",
          "canonical": [
            "/person",
            "/contact/email"
          ]
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        }
      },
      "outputs": {
        "property": {
          "$ref": "#/domains/PropertyBooking/types/Property"
        },
        "termsAndConditions": {
          "$ref": "#/domains/Generic/types/StructuredTextItem"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/PropertyBooking/types/BookingConfirmation"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        }
      },
      "types": {
        "Property": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "priceBreakdown": {
              "$ref": "#/domains/Generic/types/StructuredTextItems"
            },
            "dates": {
              "type": "object",
              "properties": {
                "checkin": {
                  "type": "string",
                  "format": "date",
                  "example": "2008-01-01"
                },
                "checkout": {
                  "type": "string",
                  "format": "date",
                  "example": "2008-01-01"
                }
              },
              "required": [
                "checkin",
                "checkout"
              ],
              "additionalProperties": false
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "example": {
                "value": 20600,
                "currency": "gbp"
              }
            }
          },
          "required": [
            "name",
            "price",
            "dates"
          ],
          "additionalProperties": false
        },
        "MainGuest": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/Generic/types/Person"
            },
            "contact": {
              "$ref": "#/domains/PropertyBooking/types/GuestContact"
            },
            "address": {
              "$ref": "#/domains/Generic/types/ExplicitAddress"
            }
          },
          "required": [
            "person",
            "contact"
          ],
          "additionalProperties": false
        },
        "GuestContact": {
          "type": "object",
          "properties": {
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "email": {
              "type": "string",
              "description": "Email address used for contact.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      },
      "errors": [
        {
          "code": "DepositNotFound",
          "category": "client",
          "description": "Given deposit option does not match one of the options we are expecting"
        },
        {
          "code": "PetOptionInvalid",
          "category": "client",
          "description": "Given pet option does not match one of the options we are expecting"
        },
        {
          "code": "PetOptionNotAvailable",
          "category": "client",
          "description": "Pet option is not available"
        },
        {
          "code": "GuestCountInvalid",
          "category": "client",
          "description": "Number of guests is not accepted by the website"
        },
        {
          "code": "GuestAgeInvalid",
          "category": "client",
          "description": "Guest age is not accepted by the website"
        },
        {
          "code": "PropertyRentalNotAvailable",
          "category": "client",
          "description": "Property rental is not found",
          "example": "Property rental unavailable on given date provided"
        }
      ]
    },
    "Remittance": {
      "description": "Allows a payment of money that is transferred to another party",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page.",
          "initial": true
        },
        "options": {
          "$ref": "#/domains/Remittance/types/Options",
          "default": {},
          "initial": true
        },
        "account": {
          "$ref": "#/domains/Remittance/types/Account"
        },
        "confirmAccount": {
          "$ref": "#/domains/Remittance/types/AccountConfirmation"
        },
        "sender": {
          "$ref": "#/domains/Remittance/types/Sender"
        },
        "recipient": {
          "$ref": "#/domains/Remittance/types/Recipient"
        },
        "directDebit": {
          "$ref": "#/domains/Remittance/types/DirectDebit"
        },
        "selectedAccountType": {
          "$ref": "#/domains/Remittance/types/AccountType",
          "sourceOutputKey": "availableAccountTypes",
          "inputMethod": "SelectOne"
        },
        "payment": {
          "$ref": "#/domains/Remittance/types/Payment"
        },
        "alternativeBillingAddress": {
          "$ref": "#/domains/Generic/types/Address"
        },
        "selectedPaymentMethod": {
          "$ref": "#/domains/Remittance/types/PaymentMethod",
          "sourceOutputKey": "availablePaymentMethods",
          "inputMethod": "SelectOne"
        },
        "selectedSendingReason": {
          "$ref": "#/domains/Remittance/types/String",
          "sourceOutputKey": "availableSendingReasons",
          "inputMethod": "SelectOne"
        },
        "selectedTopupAmount": {
          "$ref": "#/domains/Remittance/types/String",
          "sourceOutputKey": "availableTopupAmounts",
          "inputMethod": "SelectOne"
        },
        "selectedDeliveryMethod": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "selectedDeliveryLocation": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "selectedSecurityQuestion": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "securityAnswer": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "smsCode": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "proofOfId": {
          "$ref": "#/domains/Generic/types/File"
        },
        "selectedOccupation": {
          "$ref": "#/domains/Remittance/types/String"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        }
      },
      "outputs": {
        "availablePaymentMethods": {
          "$ref": "#/domains/Remittance/types/PaymentMethods",
          "description": "List of payment methods found on the supplier's website."
        },
        "availableAccountTypes": {
          "$ref": "#/domains/Remittance/types/AccountTypes",
          "description": "List of account types found on the supplier's website."
        },
        "availableSendingReasons": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "availableTopupAmounts": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "availableDeliveryMethods": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "availableDeliveryLocations": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "availableSecurityQuestions": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "availableOccupations": {
          "$ref": "#/domains/Remittance/types/Strings"
        },
        "confirmation": {
          "$ref": "#/domains/Remittance/types/Confirmation"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/Generic/types/Person"
            },
            "transferType": {
              "type": "string",
              "example": "Bank Transfer"
            }
          },
          "required": [
            "email",
            "isExisting"
          ],
          "additionalProperties": false
        },
        "AccountConfirmation": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            }
          },
          "required": [
            "code"
          ],
          "additionalProperties": false
        },
        "Sender": {
          "type": "object",
          "properties": {
            "person": {
              "$ref": "#/domains/Remittance/types/Person"
            },
            "amount": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "person",
            "amount",
            "address"
          ],
          "additionalProperties": false
        },
        "Recipient": {
          "type": "object",
          "properties": {
            "person": {
              "$ref": "#/domains/Remittance/types/Person"
            },
            "phone": {
              "$ref": "#/domains/Generic/types/Phone"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "bankAccount": {
              "oneOf": [
                {
                  "$ref": "#/domains/Remittance/types/BankAccountSWIFT"
                },
                {
                  "$ref": "#/domains/Remittance/types/BankAccountClabe"
                },
                {
                  "$ref": "#/domains/Remittance/types/BankAccountNameNumber"
                },
                {
                  "$ref": "#/domains/Remittance/types/BankAccountRoutingAccount"
                }
              ]
            }
          },
          "required": [
            "person",
            "phone",
            "address",
            "bankAccount"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Customer's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "nationality": {
              "type": "string",
              "example": "Argentina"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "DirectDebit": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "example": "3850237499"
            },
            "routingNumber": {
              "type": "string",
              "minLength": 1,
              "example": "322271721"
            },
            "bankAccountType": {
              "type": "string",
              "minLength": 1,
              "example": "Checking"
            },
            "bankName": {
              "type": "string",
              "minLength": 1,
              "example": "Bank of America"
            },
            "accountHolder": {
              "type": "string",
              "minLength": 1,
              "example": "John Doe"
            }
          },
          "required": [
            "accountNumber",
            "routingNumber",
            "bankAccountType",
            "accountHolder"
          ],
          "additionalProperties": false
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details.",
          "pii": true,
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            }
          },
          "required": [
            "card"
          ],
          "additionalProperties": false
        },
        "PaymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/domains/Remittance/types/PaymentMethod"
          }
        },
        "PaymentMethod": {
          "type": "string",
          "enum": [
            "card-credit",
            "card-debit",
            "paypal",
            "direct-debit",
            "bank-transfer",
            "no-prepayment"
          ]
        },
        "AccountTypes": {
          "type": "array",
          "items": {
            "$ref": "#/domains/Remittance/types/AccountType"
          }
        },
        "AccountType": {
          "type": "string"
        },
        "BankAccountClabe": {
          "type": "object",
          "description": "Account details for direct debit Mexico.",
          "pii": true,
          "properties": {
            "countryCode": {
              "type": "string",
              "enum": [
                "mx"
              ]
            },
            "CLABE": {
              "type": "string",
              "minLength": 1,
              "description": "Recipient's account number specific to Mexico"
            }
          },
          "required": [
            "countryCode",
            "CLABE"
          ],
          "additionalProperties": false
        },
        "BankAccountNameNumber": {
          "type": "object",
          "description": "Account details for direct debit USA.",
          "pii": true,
          "properties": {
            "countryCode": {
              "type": "string",
              "enum": [
                "do",
                "gt",
                "hn",
                "sv"
              ]
            },
            "bankName": {
              "type": "string",
              "minLength": 1,
              "example": "Banco Agricola"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "example": "10548568"
            }
          },
          "required": [
            "countryCode",
            "bankName",
            "accountNumber"
          ],
          "additionalProperties": false
        },
        "BankAccountSWIFT": {
          "type": "object",
          "description": "Account details for direct debit USA.",
          "pii": true,
          "properties": {
            "countryCode": {
              "type": "string",
              "enum": [
                "sv"
              ]
            },
            "swiftCode": {
              "type": "string",
              "minLength": 1,
              "example": "111000025"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "example": "10548568"
            }
          },
          "required": [
            "countryCode",
            "swiftCode",
            "accountNumber"
          ],
          "additionalProperties": false
        },
        "BankAccountRoutingAccount": {
          "type": "object",
          "description": "Account details for direct debit USA.",
          "pii": true,
          "properties": {
            "countryCode": {
              "type": "string",
              "enum": [
                "us"
              ]
            },
            "routingNumber": {
              "type": "string",
              "minLength": 1,
              "example": "111000025"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "example": "10548568"
            }
          },
          "required": [
            "countryCode",
            "routingNumber",
            "accountNumber"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on success page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Confirmation reference grabbed from the page.",
              "example": "215664558"
            },
            "message": {
              "type": "string",
              "description": "Message about successful transfer.",
              "example": "Your transfer was successful."
            }
          },
          "additionalProperties": false,
          "required": [
            "reference"
          ]
        },
        "AvailableDeliveryMethods": {
          "type": "array",
          "items": {
            "$ref": "#/domains/Remittance/types/DeliveryMethod"
          }
        },
        "DeliveryMethod": {
          "type": "string"
        },
        "Strings": {
          "type": "array",
          "items": {
            "$ref": "#/domains/Remittance/types/String"
          }
        },
        "String": {
          "type": "string"
        }
      },
      "errors": [
        {
          "code": "ContactUsToContinue",
          "category": "client",
          "description": "The user being asked to contact the supplier to continue the purchase."
        },
        {
          "code": "BankDetailsInvalid",
          "category": "client",
          "description": "Bank details invalid."
        },
        {
          "code": "DirectDebitRejected",
          "category": "client",
          "description": "Direct debit details rejected."
        }
      ]
    },
    "HolidayBooking": {
      "description": "Allows automating holiday package booking on individual suppliers and OTAs.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        },
        "options": {
          "$ref": "#/domains/HolidayBooking/types/Options",
          "default": {},
          "initial": true,
          "description": "A set of options that define the automation's behaviour."
        },
        "selectedBoard": {
          "$ref": "#/domains/HolidayBooking/types/Board",
          "description": "One of availableBoards.",
          "sourceOutputKey": "availableBoards",
          "inputMethod": "SelectOne"
        },
        "selectedFlightBundle": {
          "$ref": "#/domains/HolidayBooking/types/FlightBundle",
          "description": "One of availableFlightBundles.",
          "sourceOutputKey": "availableFlightBundles",
          "inputMethod": "SelectOne"
        },
        "selectedRoomType": {
          "$ref": "#/domains/HolidayBooking/types/RoomType",
          "description": "One of availableRoomTypes.",
          "sourceOutputKey": "availableRoomTypes",
          "inputMethod": "SelectOne"
        },
        "selectedHotelTransfer": {
          "$ref": "#/domains/HolidayBooking/types/HotelTransfer",
          "description": "One of availableHotelTransfers.",
          "sourceOutputKey": "availableHotelTransfers",
          "inputMethod": "SelectOne"
        },
        "selectedDeposit": {
          "$ref": "#/domains/HolidayBooking/types/Deposit",
          "description": "One of availableDeposits."
        },
        "passengers": {
          "$ref": "#/domains/HolidayBooking/types/Passengers",
          "initial": true
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        }
      },
      "outputs": {
        "estimatedPriceBreakdown": {
          "$ref": "#/domains/HolidayBooking/types/PriceBreakdown",
          "description": "The list of price components, as found on the website."
        },
        "estimatedTotalPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "finalPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "priceBreakdown": {
          "$ref": "#/domains/HolidayBooking/types/PriceBreakdown",
          "description": "The list of price components, as found on the website."
        },
        "availableBoards": {
          "$ref": "#/domains/HolidayBooking/types/Boards"
        },
        "availableFlightBundles": {
          "$ref": "#/domains/HolidayBooking/types/FlightBundles"
        },
        "availableRoomTypes": {
          "$ref": "#/domains/HolidayBooking/types/RoomTypes"
        },
        "availableHotelTransfers": {
          "$ref": "#/domains/HolidayBooking/types/HotelTransfers"
        },
        "availableDeposits": {
          "$ref": "#/domains/HolidayBooking/types/Deposits"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/HolidayBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "default": {}
        },
        "PriceBreakdown": {
          "type": "array",
          "description": "The list of price components, as found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/HolidayBooking/types/PriceBreakdownItem"
          }
        },
        "PriceBreakdownItem": {
          "type": "object",
          "description": "A component of the price breakdown.",
          "properties": {
            "text": {
              "type": "string",
              "description": "The description of an item on the price breakdown list, as found on the website.",
              "example": "Credit card charge"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "text",
            "price"
          ]
        },
        "HotelTransfers": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HolidayBooking/types/HotelTransfer"
          }
        },
        "HotelTransfer": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type"
          ],
          "additionalProperties": false
        },
        "RoomTypes": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HolidayBooking/types/RoomType"
          }
        },
        "RoomType": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type"
          ],
          "additionalProperties": false
        },
        "FlightBundles": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HolidayBooking/types/FlightBundle"
          }
        },
        "FlightBundle": {
          "type": "object",
          "description": "Outbound and inbound flights specification.",
          "properties": {
            "outbound": {
              "$ref": "#/domains/HolidayBooking/types/Flight"
            },
            "inbound": {
              "$ref": "#/domains/HolidayBooking/types/Flight"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "outbound",
            "inbound",
            "price"
          ],
          "additionalProperties": false
        },
        "Flight": {
          "type": "object",
          "description": "Outbound and inbound flights specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/HolidayBooking/types/DateTimeAirport"
            },
            "destination": {
              "$ref": "#/domains/HolidayBooking/types/DateTimeAirport"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "DateTimeAirport": {
          "type": "object",
          "properties": {
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time of flight (airport local time).",
              "example": "2018-02-02 19:40"
            },
            "airportCode": {
              "$ref": "#/domains/HolidayBooking/types/AirportCode"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of airport.",
              "example": "us"
            }
          },
          "required": [
            "dateTime",
            "airportCode"
          ],
          "additionalProperties": false
        },
        "AirportCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[A-Z]{3}$",
          "description": "International Air Transport Association airport code.",
          "example": "SFO"
        },
        "Boards": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HolidayBooking/types/Board"
          }
        },
        "Board": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type"
          ],
          "additionalProperties": false
        },
        "Deposits": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HolidayBooking/types/Deposit"
          }
        },
        "Deposit": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name",
            "price"
          ],
          "additionalProperties": false
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/HolidayBooking/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth",
            "addAdditionalLuggage"
          ],
          "additionalProperties": false
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      },
      "errors": []
    },
    "QRCodeExtraction": {
      "description": "Allows QR code data extraction from different types of files",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "initial": true,
          "description": "Website entry point. Should be a deep link to either package selection page, or to payment page."
        }
      },
      "outputs": {
        "qrCodeContent": {
          "$ref": "#/domains/QRCodeExtraction/types/CodeContents"
        }
      },
      "types": {
        "CodeContents": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/QRCodeExtraction/types/CodeContent"
          }
        },
        "CodeContent": {
          "type": "object",
          "description": "",
          "additionalProperties": false,
          "properties": {
            "content": {
              "type": "string"
            }
          },
          "required": []
        }
      },
      "errors": []
    },
    "ElectronicTravelAuthorisation": {
      "description": "Allows automating ETAs.",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "options": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Options",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either login page or further down the funnel.",
          "initial": true
        },
        "agent": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Agent"
        },
        "applicant": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Applicant"
        },
        "relativesNotAccompanyingApplicant": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Relatives"
        },
        "selectedEmploymentDomain": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/SelectedOption"
        },
        "selectedEmploymentJobTitle": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/SelectedOption"
        },
        "selectedVisitPurpose": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/SelectedOption"
        },
        "emailConfirmationUrl": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "URL provided via confirmation email."
        },
        "application": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Application"
        },
        "identityCardPhoto": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of applicant identity card. Used for visa validation."
        },
        "businessInvitationLetter": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of applicant invitation letter."
        },
        "companyRegistrationDocument": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of company registration document. Used when travel for bussines."
        },
        "travelItineraryDocument": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of travel itinerary. Used for bussines and tourism."
        },
        "visaApplication": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of visa application. Used for bussines and tourism."
        },
        "residencyCardDocument": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of residency card. Used for bussines and tourism."
        },
        "hotelBookingConfirmationDocument": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/NullableDocument",
          "description": "A photo of hotel booking confirmation document."
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        },
        "cbpGlobalEntryProgramMembership": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/String"
        },
        "previousApplicationVisaNumber": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/PreviousApplicationVisaNumber"
        },
        "residencyPermit": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/ResidencyPermit"
        }
      },
      "outputs": {
        "availableEmploymentDomains": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/AvailableOptions"
        },
        "availableEmploymentJobTitles": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/AvailableOptions"
        },
        "availableVisitPurposes": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/AvailableOptions"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "confirmation": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/Confirmation"
        },
        "applicationReference": {
          "$ref": "#/domains/ElectronicTravelAuthorisation/types/String"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "additionalProperties": false
        },
        "String": {
          "type": "string"
        },
        "ResidencyPermit": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            }
          },
          "required": [
            "number",
            "expirationDate"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": []
        },
        "Application": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "purpose": {
              "type": "string",
              "enum": [
                "business",
                "tourist",
                "transit",
                ""
              ]
            },
            "purposeDescription": {
              "type": "string"
            },
            "entries": {
              "type": "integer"
            },
            "arrivalDate": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/DateOrEmptyString",
              "description": "Entry date in YYYY-MM-DD format."
            },
            "departureDateTime": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/DateTimeOrEmptyString",
              "description": "Date and time of departure (UTC)."
            },
            "destinationContact": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
                },
                "email": {
                  "type": "string",
                  "description": "Typically used for contact details.",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "description": "Phone number.",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/Phone"
                }
              },
              "required": [],
              "additionalProperties": false
            },
            "transitContact": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
                },
                "email": {
                  "type": "string",
                  "description": "Typically used for contact details.",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "description": "Phone number.",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/Phone"
                }
              },
              "required": [],
              "additionalProperties": false
            },
            "wasRequestedBefore": {
              "type": "boolean"
            },
            "transportation": {
              "type": "string",
              "enum": [
                "aeroplane",
                "ship",
                "land",
                ""
              ]
            },
            "pointOfEntry": {
              "type": "string",
              "description": "The border point of entry. Port, airport or border name."
            },
            "isTransit": {
              "type": "boolean"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "AvailableOptions": {
          "type": "array",
          "items": {
            "$ref": "#/domains/ElectronicTravelAuthorisation/types/SelectedOption"
          }
        },
        "SelectedOption": {
          "type": "string"
        },
        "Agent": {
          "type": "object",
          "properties": {
            "person": {
              "type": "object",
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/Person"
            },
            "organisation": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "object",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
                }
              },
              "required": [
                "name",
                "address"
              ],
              "additionalProperties": false
            },
            "phone": {
              "description": "Phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "email": {
              "type": "string",
              "description": "Account email, typically used for contact details.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully.",
              "format": "email",
              "example": "hello@example.com"
            }
          },
          "required": [
            "person",
            "organisation",
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "Applicant": {
          "type": "object",
          "properties": {
            "person": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/Person"
            },
            "homeAddress": {
              "type": "object",
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
            },
            "contact": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "object",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
                },
                "email": {
                  "type": "string",
                  "description": "Applicant email, typically used for contact details.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully.",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "description": "Phone number, may also be used as contact details.",
                  "$ref": "#/domains/Generic/types/Phone"
                }
              },
              "required": [
                "address",
                "email",
                "phone"
              ],
              "additionalProperties": false
            },
            "emergencyContact": {
              "type": "object",
              "properties": {
                "person": {
                  "type": "object",
                  "$ref": "#/domains/ElectronicTravelAuthorisation/types/Person"
                },
                "email": {
                  "type": "string",
                  "description": "Applicant email, typically used for contact details.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully.",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "description": "Phone number, may also be used as contact details.",
                  "$ref": "#/domains/Generic/types/Phone"
                }
              },
              "required": [
                "person",
                "email",
                "phone"
              ],
              "additionalProperties": false
            },
            "documents": {
              "type": "array",
              "items": {
                "$ref": "#/domains/ElectronicTravelAuthorisation/types/Passport"
              }
            },
            "employment": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/Employment"
            },
            "nationalIdentityNumber": {
              "type": "string",
              "description": "Where applicable, citizens of certain countries are assigned a unique national identity number, usually at birth, which never changes."
            },
            "otherNationalities": {
              "type": "array",
              "items": {
                "$ref": "#/domains/ElectronicTravelAuthorisation/types/OtherNationality"
              }
            }
          },
          "required": [
            "person",
            "contact",
            "emergencyContact",
            "documents"
          ],
          "additionalProperties": false
        },
        "Relatives": {
          "type": "array",
          "items": {
            "$ref": "#/domains/ElectronicTravelAuthorisation/types/Relative"
          }
        },
        "Relative": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "example": "Smith"
            },
            "age": {
              "type": "integer"
            },
            "relationship": {
              "type": "string",
              "description": "Relationship to the applicant.",
              "example": "Child"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "relationship"
          ],
          "additionalProperties": false
        },
        "OtherNationality": {
          "type": "object",
          "properties": {
            "isCurrent": {
              "type": "boolean"
            },
            "obtainedBy": {
              "type": "string",
              "description": "",
              "enum": [
                "birth",
                "parents",
                "naturalisation",
                "other"
              ]
            },
            "obtainedOtherReason": {
              "type": "string",
              "description": "When obtainedBy is 'other', this entry is mandatory."
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            }
          },
          "required": [
            "isCurrent",
            "obtainedBy",
            "countryCode"
          ],
          "additionalProperties": false
        },
        "Employment": {
          "type": "object",
          "properties": {
            "status": {
              "enum": [
                "employed",
                "self-employed",
                "student",
                "retired",
                "unemployed"
              ]
            },
            "name": {
              "type": "string"
            },
            "address": {
              "type": "object",
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/ExplicitAddress"
            },
            "businessType": {
              "type": "string"
            },
            "occupation": {
              "type": "string"
            },
            "jobTitle": {
              "type": "string"
            },
            "phone": {
              "description": "Phone number, may also be used as contact details.",
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/Phone"
            },
            "startDate": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/DateOrEmptyString",
              "description": "Employment start date in YYYY-MM-DD format."
            }
          },
          "required": [
            "name",
            "address",
            "businessType",
            "occupation",
            "jobTitle",
            "phone",
            "startDate"
          ],
          "additionalProperties": false
        },
        "DateTimeOrEmptyString": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "example": "2020-02-02 19:40"
            },
            {
              "type": "string",
              "enum": [
                ""
              ]
            }
          ]
        },
        "DateOrEmptyString": {
          "oneOf": [
            {
              "type": "string",
              "format": "date",
              "example": "1976-01-27"
            },
            {
              "type": "string",
              "enum": [
                ""
              ]
            }
          ]
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "",
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "gender": {
              "type": "string",
              "description": "",
              "enum": [
                "male",
                "female",
                "transgender"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "example": "Smith"
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            },
            "alias": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name(s) or given name(s), as specified in ID.",
                  "example": "Bob"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name or surname, as specified in ID.",
                  "example": "Smith"
                }
              },
              "required": [
                "firstName",
                "lastName"
              ],
              "additionalProperties": false
            },
            "birthDatePlace": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "Applicant's date of birth in YYYY-MM-DD format.",
                  "format": "date",
                  "example": "1976-01-27"
                },
                "city": {},
                "countryCode": {
                  "$ref": "#/domains/Generic/types/CountryCode"
                }
              },
              "required": [
                "date",
                "city",
                "countryCode"
              ],
              "additionalProperties": false
            },
            "civilStatus": {
              "type": "string",
              "enum": [
                "single",
                "married",
                "civil partnership"
              ]
            },
            "parentsNames": {
              "type": "object",
              "properties": {
                "father": {
                  "type": "object",
                  "description": "Basic information about father's identity.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "mr.",
                      "enum": [
                        "",
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                      ]
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name(s) or given name(s), of person's father.",
                      "example": "Bob"
                    },
                    "middleName": {
                      "type": "string",
                      "default": "",
                      "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name or surname, of person's father.",
                      "example": "Smith"
                    }
                  },
                  "required": [
                    "firstName",
                    "lastName"
                  ],
                  "additionalProperties": false
                },
                "mother": {
                  "type": "object",
                  "description": "Basic information about mother's identity.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "mr.",
                      "enum": [
                        "",
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                      ]
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name(s) or given name(s), of person's mother.",
                      "example": "Bob"
                    },
                    "middleName": {
                      "type": "string",
                      "default": "",
                      "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name or surname, of person's mother.",
                      "example": "Smith"
                    }
                  },
                  "required": [
                    "firstName",
                    "lastName"
                  ],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "Passport": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "ordinary",
                "diplomatic",
                "official",
                "service",
                "temporary"
              ]
            },
            "nationality": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/CountryCodeOrEmptyString"
            },
            "citizenship": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/CountryCodeOrEmptyString"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            "issuePlace": {
              "type": "string"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "bioDataPagePhoto": {
              "$ref": "#/domains/Generic/types/File",
              "description": "A photo with passport details section. Used for passport validation."
            },
            "photo": {
              "$ref": "#/domains/Generic/types/File",
              "description": "Applicant passport photo. Used for passport validation."
            }
          },
          "required": [
            "type",
            "issueCountryCode",
            "expirationDate",
            "number"
          ],
          "additionalProperties": false
        },
        "ExplicitAddress": {
          "type": "object",
          "description": "Physical address information, typically used as part of billing or shipping address objects.",
          "pii": true,
          "properties": {
            "streetName": {
              "type": "string",
              "description": "Street name without number.",
              "example": "Twin Peaks Blv"
            },
            "streetNumberOrHouseName": {
              "type": "string",
              "description": "Street number or house name.",
              "example": "Buckingham Palace"
            },
            "line2": {
              "type": "string",
              "description": "Additional address information (e.g. flat).",
              "example": "Flat 2"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "example": "San Francisco"
            },
            "postcode": {
              "type": "string",
              "description": "Postcode in country-specific format, e.g. 5-digit number in US or <code>E3 3RP</code> in UK.",
              "example": "94581"
            },
            "countryCode": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/CountryCodeOrEmptyString"
            },
            "countrySubdivision": {
              "$ref": "#/domains/Generic/types/CountrySubdivision"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Phone": {
          "type": "object",
          "description": "Phone information, typically used on contact details pages.",
          "pii": true,
          "properties": {
            "countryCode": {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/CountryCodeOrEmptyString"
            },
            "number": {
              "type": "string",
              "description": "Mobile phone number (numbers only, excluding country code).",
              "example": "123456789"
            }
          },
          "required": [
            "countryCode",
            "number"
          ],
          "additionalProperties": false
        },
        "CountryCodeOrEmptyString": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/CountryCode"
            },
            {
              "type": "string",
              "enum": [
                ""
              ]
            }
          ]
        },
        "NullableDocument": {
          "oneOf": [
            {
              "$ref": "#/domains/Generic/types/File"
            },
            {
              "type": "null"
            }
          ]
        },
        "PreviousApplicationVisaNumber": {
          "oneOf": [
            {
              "$ref": "#/domains/ElectronicTravelAuthorisation/types/String"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "errors": [
        {
          "code": "DocumentDetailsInvalid",
          "category": "client",
          "description": "Document details invalid or not acceptable."
        },
        {
          "code": "ApplicantDetailsInvalid",
          "category": "client",
          "description": "Applicant details invalid or not acceptable."
        },
        {
          "code": "ApplicationAlreadyExists",
          "category": "client",
          "description": "An application for this data already exists."
        }
      ]
    },
    "Internal": {
      "description": "Internal domain for testing platform features.",
      "private": true,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "options": {
          "$ref": "#/domains/Internal/types/Options",
          "description": "Used by service-api tests.",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Used by most test services."
        },
        "dynamicInput": {
          "$ref": "#/domains/Internal/types/Value",
          "description": "Used by test-stages service.",
          "dynamic": true
        },
        "password": {
          "$ref": "#/domains/Internal/types/SomethingPrivate",
          "description": "Private/PII/Confidential."
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Used by test-price-consent service.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken",
          "description": "Used by test-pan-replacement service."
        }
      },
      "outputs": {
        "object": {
          "$ref": "#/domains/Internal/types/Object"
        },
        "value": {
          "$ref": "#/domains/Internal/types/Value"
        },
        "dynamicOutput": {
          "$ref": "#/domains/Internal/types/Value",
          "description": "Used by test-stages service.",
          "dynamic": true
        },
        "finalPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Used by test-price-consent service."
        },
        "confirmation": {
          "$ref": "#/domains/Internal/types/Confirmation"
        },
        "somethingPrivate": {
          "$ref": "#/domains/Internal/types/SomethingPrivate"
        }
      },
      "types": {
        "Value": {
          "type": [
            "null",
            "string",
            "number",
            "boolean",
            "object",
            "array"
          ],
          "description": "An arbitrary value."
        },
        "Object": {
          "type": "object",
          "description": "An object of arbitrary structure."
        },
        "Array": {
          "type": "object",
          "description": "An array of arbitrary values.",
          "items": {
            "$ref": "#/domains/Internal/types/Value"
          }
        },
        "Options": {
          "type": "object",
          "description": "Flags for testing optional features.",
          "properties": {
            "flag": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \" success\" page.",
          "properties": {
            "code": {
              "type": "string",
              "description": "reference grabbed from the page.",
              "example": "UBIO1234"
            },
            "message": {
              "type": "string",
              "description": "Message about successful automation.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the page."
            }
          },
          "additionalProperties": false,
          "required": [
            "code"
          ]
        },
        "SomethingPrivate": {
          "type": "string",
          "description": "I contain some PII.",
          "pii": true,
          "example": "N/A"
        }
      },
      "errors": [
        {
          "code": "InternalError",
          "category": "server",
          "description": "Internal error occurred"
        },
        {
          "code": "ClientError",
          "category": "client",
          "description": "Client caused error"
        }
      ]
    },
    "FlightBookingExtraction": {
      "description": "Internal domain for generating FlightBooking inputs.",
      "private": true,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL"
        },
        "options": {
          "$ref": "#/domains/FlightBooking/types/Options",
          "default": {},
          "initial": true
        },
        "selectedOriginAirportCode": {
          "$ref": "#/domains/FlightBooking/types/AirportCode",
          "sourceOutputKey": "availableOriginAirportCodes",
          "inputMethod": "SelectOne"
        },
        "selectedDestinationAirportCode": {
          "$ref": "#/domains/FlightBooking/types/AirportCode",
          "sourceOutputKey": "availableDestinationAirportCodes",
          "inputMethod": "SelectOne"
        },
        "outboundMonthYear": {
          "$ref": "#/domains/FlightBookingExtraction/types/MonthYear"
        },
        "inboundMonthYear": {
          "$ref": "#/domains/FlightBookingExtraction/types/MonthYearOrNull"
        },
        "selectedOutboundDay": {
          "$ref": "#/domains/FlightBookingExtraction/types/Day",
          "sourceOutputKey": "availableOutboundDays",
          "inputMethod": "SelectOne"
        },
        "selectedInboundDay": {
          "$ref": "#/domains/FlightBookingExtraction/types/Day",
          "sourceOutputKey": "availableInboundDays",
          "inputMethod": "SelectOne"
        },
        "passengerAges": {
          "$ref": "#/domains/Generic/types/Ages"
        }
      },
      "outputs": {
        "availableOriginAirportCodes": {
          "$ref": "#/domains/FlightBookingExtraction/types/AirportCodes"
        },
        "availableDestinationAirportCodes": {
          "$ref": "#/domains/FlightBookingExtraction/types/AirportCodes"
        },
        "availableOutboundDays": {
          "$ref": "#/domains/FlightBookingExtraction/types/Days"
        },
        "availableInboundDays": {
          "$ref": "#/domains/FlightBookingExtraction/types/Days"
        },
        "search": {
          "$ref": "#/domains/FlightBooking/types/Search"
        },
        "selectedOutboundFlight": {
          "$ref": "#/domains/FlightBooking/types/Flight"
        },
        "selectedInboundFlight": {
          "$ref": "#/domains/FlightBooking/types/Flight"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "additionalProperties": false
        },
        "AirportCodes": {
          "type": "array",
          "items": {
            "$ref": "#/domains/FlightBooking/types/AirportCode"
          }
        },
        "Days": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MonthYear": {
          "type": "string",
          "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])"
        },
        "MonthYearOrNull": {
          "oneOf": [
            {
              "$ref": "#/domains/FlightBookingExtraction/types/MonthYear"
            },
            {
              "type": "null"
            }
          ]
        },
        "Day": {
          "type": "string",
          "pattern": "\\d{1,2}"
        }
      },
      "errors": []
    },
    "HotelBookingExtraction": {
      "description": "Internal domain for generating HotelBooking inputs.",
      "private": true,
      "inputs": {
        "options": {
          "$ref": "#/domains/HotelBookingExtraction/types/Options",
          "default": {},
          "initial": true
        },
        "selectedDestination": {
          "$ref": "#/domains/HotelBookingExtraction/types/Destination",
          "sourceOutputKey": "availableDestinations",
          "inputMethod": "SelectOne"
        },
        "checkinDate": {
          "$ref": "#/domains/HotelBookingExtraction/types/Date"
        },
        "checkoutDate": {
          "$ref": "#/domains/HotelBookingExtraction/types/Date"
        },
        "selectedHotel": {
          "$ref": "#/domains/HotelBookingExtraction/types/Hotel",
          "sourceOutputKey": "availableHotels",
          "inputMethod": "SelectOne"
        },
        "guestAges": {
          "$ref": "#/domains/Generic/types/Ages"
        }
      },
      "outputs": {
        "search": {
          "$ref": "#/domains/HotelBooking/types/Search"
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page."
        },
        "availableDestinations": {
          "$ref": "#/domains/HotelBookingExtraction/types/Destinations"
        },
        "availableHotels": {
          "$ref": "#/domains/HotelBookingExtraction/types/Hotels"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "properties": {
            "searchRates": {
              "type": "boolean",
              "description": "If <code>true</code>, enables special rates output and input at search.",
              "default": false
            }
          }
        },
        "Destination": {
          "type": "string",
          "minLength": 3
        },
        "Destinations": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HotelBookingExtraction/types/Destination"
          }
        },
        "Hotel": {
          "type": "string",
          "minLength": 3
        },
        "Hotels": {
          "type": "array",
          "items": {
            "$ref": "#/domains/HotelBookingExtraction/types/Hotel"
          }
        },
        "Date": {
          "type": "string",
          "format": "date",
          "description": "Date (hotel local date).",
          "example": "2019-01-01"
        }
      },
      "errors": []
    },
    "MotorInsuranceExtraction": {
      "description": "Internal domain for generating MotorInsurance inputs.",
      "private": true,
      "inputs": {
        "options": {
          "$ref": "#/domains/MotorInsurance/types/Options",
          "default": {},
          "initial": true
        }
      },
      "outputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL"
        },
        "cookies": {
          "$ref": "#/domains/Generic/types/Cookies"
        }
      },
      "types": {},
      "errors": []
    },
    "PetInsurance": {
      "description": "",
      "private": false,
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "pets": {
          "$ref": "#/domains/PetInsurance/types/Pets"
        },
        "account": {
          "$ref": "#/domains/Generic/types/Account"
        },
        "applicant": {
          "$ref": "#/domains/PetInsurance/types/Applicant"
        },
        "directDebit": {
          "$ref": "#/domains/PetInsurance/types/DirectDebit"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        },
        "cover": {
          "$ref": "#/domains/PetInsurance/types/SelectedOptions"
        },
        "coverStartDate": {
          "$ref": "#/domains/PetInsurance/types/CoverStartDate"
        },
        "selectedPaymentMethod": {
          "$ref": "#/domains/PetInsurance/types/PaymentMethod"
        },
        "optionalExtras": {
          "$ref": "#/domains/PetInsurance/types/OptionalExtras"
        },
        "selectedPackage": {
          "$ref": "#/domains/PetInsurance/types/Package"
        }
      },
      "outputs": {
        "coverValues": {
          "$ref": "#/domains/PetInsurance/types/AvailableOptions"
        },
        "availablePackages": {
          "$ref": "#/domains/PetInsurance/types/AvailablePackages"
        },
        "availablePaymentMethods": {
          "$ref": "#/domains/PetInsurance/types/AvailablePaymentMethods"
        },
        "estimatedQuote": {
          "$ref": "#/domains/PetInsurance/types/QuoteValue"
        },
        "quote": {
          "$ref": "#/domains/PetInsurance/types/QuoteValue"
        },
        "documents": {
          "$ref": "#/domains/PetInsurance/types/Documents"
        },
        "registrationDocs": {
          "$ref": "#/domains/PetInsurance/types/Documents"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "confirmation": {
          "$ref": "#/domains/PetInsurance/types/Confirmation"
        }
      },
      "types": {
        "Pets": {
          "type": "array",
          "description": "An array of Bike objects.",
          "items": {
            "$ref": "#/domains/PetInsurance/types/Pet"
          },
          "minItems": 1
        },
        "Pet": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "animalType": {
              "type": "string",
              "enum": [
                "dog",
                "cat"
              ]
            },
            "gender": {
              "type": "string",
              "enum": [
                "male",
                "female"
              ]
            },
            "breedType": {
              "type": "string",
              "enum": [
                "pedigree",
                "cross breed",
                "mongrel"
              ]
            },
            "breedName": {
              "type": "string",
              "enum": [
                "Affenpinscher",
                "Afghan Hound",
                "Afghan Shepherd",
                "Aidi",
                "Airedale Terrier",
                "Akbash",
                "Akita",
                "Alano Español",
                "Alaskan husky",
                "Alaskan Klee Kai",
                "Alaskan Malamute",
                "Alaunt",
                "Alopekis",
                "Alpine Dachsbracke",
                "Alpine Mastiff",
                "Alpine Spaniel",
                "American Akita",
                "American Bully",
                "American Bulldog",
                "American Cocker Spaniel",
                "American English Coonhound",
                "American Eskimo Dog",
                "American Foxhound",
                "American Hairless Terrier",
                "American Pit Bull Terrier",
                "American Staffordshire Terrier",
                "American Water Spaniel",
                "Anatolian Shepherd Dog",
                "Andalusian Hound",
                "Anglo-Français de Petite Vénerie",
                "Appenzeller Sennenhund",
                "Argentine Polar Dog",
                "Ariegeois",
                "Armant",
                "Armenian Gampr dog",
                "Artois Hound",
                "Australian Cattle Dog",
                "Australian Kelpie",
                "Australian Shepherd",
                "Australian Stumpy Tail Cattle Dog",
                "Australian Terrier",
                "Austrian Black and Tan Hound",
                "Austrian Pinscher",
                "Azawakh",
                "Bakharwal dog",
                "Barbado da Terceira",
                "Barbet",
                "Basenji",
                "Basque Shepherd Dog",
                "Basset Artésien Normand",
                "Basset Bleu de Gascogne",
                "Basset Fauve de Bretagne",
                "Basset Hound",
                "Bavarian Mountain Hound",
                "Beagle",
                "Beagle-Harrier",
                "Bearded Collie",
                "Beauceron",
                "Bedlington Terrier",
                "Belgian Shepherd Dog (Groenendael)",
                "Belgian Shepherd Dog (Laekenois)",
                "Belgian Shepherd Dog (Malinois)",
                "Belgian Shepherd Dog (Tervuren)",
                "Bergamasco Shepherd",
                "Berger Blanc Suisse",
                "Berger Picard",
                "Bernese Mountain Dog",
                "Bichon Frisé",
                "Billy",
                "Black and Tan Coonhound",
                "Black and Tan Virginia Foxhound",
                "Black Norwegian Elkhound",
                "Black Russian Terrier",
                "Black Mouth Cur",
                "Bloodhound",
                "Blue Heeler",
                "Blue Lacy",
                "Blue Paul Terrier",
                "Blue Picardy Spaniel",
                "Bluetick Coonhound",
                "Boerboel",
                "Bohemian Shepherd",
                "Bolognese",
                "Border Collie",
                "Border Terrier",
                "Borzoi",
                "Bosnian Coarse-haired Hound",
                "Boston Terrier",
                "Bouvier des Ardennes",
                "Bouvier des Flandres",
                "Boxer",
                "Boykin Spaniel",
                "Bracco Italiano",
                "Braque d'Auvergne",
                "Braque de l'Ariege",
                "Braque du Bourbonnais",
                "Braque du Puy",
                "Braque Francais",
                "Braque Saint-Germain",
                "Brazilian Dogo",
                "Brazilian Terrier",
                "Briard",
                "Briquet Griffon Vendéen",
                "Brittany",
                "Broholmer",
                "Bruno Jura Hound",
                "Brussels Griffon",
                "Bucovina Shepherd Dog",
                "Bull and Terrier",
                "Bull Terrier",
                "Bulldog",
                "Bullenbeisser",
                "Bullmastiff",
                "Bully Kutta",
                "Burgos Pointer",
                "Cairn Terrier",
                "Canaan Dog",
                "Canadian Eskimo Dog",
                "Cane Corso",
                "Cantabrian Water Dog",
                "Cão da Serra de Aires",
                "Cão de Castro Laboreiro",
                "Cão de Gado Transmontano",
                "Cão Fila de São Miguel",
                "Carolina Dog",
                "Carpathian Shepherd Dog",
                "Catalan Sheepdog",
                "Caucasian Shepherd Dog",
                "Cavalier King Charles Spaniel",
                "Celtic Hound",
                "Central Asian Shepherd Dog",
                "Cesky Fousek",
                "Cesky Terrier",
                "Chesapeake Bay Retriever",
                "Chien Français Blanc et Noir",
                "Chien Français Blanc et Orange",
                "Chien Français Tricolore",
                "Chien-gris",
                "Chihuahua",
                "Chilean Terrier",
                "Chinese Chongqing Dog",
                "Chinese Crested Dog",
                "Chinese Imperial Dog",
                "Chinook",
                "Chippiparai",
                "Chiribaya Dog",
                "Chow Chow",
                "Cierny Sery",
                "Cirneco dell'Etna",
                "Clumber Spaniel",
                "Collie, Rough",
                "Collie, Smooth",
                "Combai",
                "Cordoba Fighting Dog",
                "Coton de Tulear",
                "Cretan Hound",
                "Croatian Sheepdog",
                "Cumberland Sheepdog",
                "Curly-Coated Retriever",
                "Cursinu",
                "Czechoslovakian Wolfdog",
                "Dachshund",
                "Dalbo dog",
                "Dalmatian",
                "Dandie Dinmont Terrier",
                "Danish-Swedish Farmdog",
                "Deutsche Bracke",
                "Doberman Pinscher",
                "Dogo Argentino",
                "Dogo Cubano",
                "Dogue de Bordeaux",
                "Drentse Patrijshond",
                "Drever",
                "Dunker",
                "Dutch Shepherd",
                "Dutch Smoushond",
                "East Siberian Laika",
                "East European Shepherd",
                "Elo",
                "English Cocker Spaniel",
                "English Foxhound",
                "English Mastiff",
                "English Pointer",
                "English Setter",
                "English Shepherd",
                "English Springer Spaniel",
                "English Toy Terrier (Black & Tan)",
                "English Water Spaniel",
                "English White Terrier",
                "Entlebucher Mountain Dog",
                "Estonian Hound",
                "Estrela Mountain Dog",
                "Eurasier",
                "Eurohound",
                "Field Spaniel",
                "Fila Brasileiro",
                "Finnish Hound",
                "Finnish Lapphund",
                "Finnish Spitz",
                "Flat-Coated Retriever",
                "Fox Terrier, Smooth",
                "Fox Terrier, Wire",
                "French Brittany",
                "French Bulldog",
                "French Spaniel",
                "Gaddi Kutta",
                "Galgo Español",
                "Galician Shepherd Dog",
                "Garafian Shepherd",
                "Gascon Saintongeois",
                "Georgian Shepherd",
                "German Longhaired Pointer",
                "German Pinscher",
                "German Roughhaired Pointer",
                "German Shepherd Dog",
                "German Shorthaired Pointer",
                "German Spaniel",
                "German Spitz",
                "German Wirehaired Pointer",
                "Giant Schnauzer",
                "Glen of Imaal Terrier",
                "Golden Retriever",
                "Gordon Setter",
                "Gran Mastín de Borínquen",
                "Grand Anglo-Français Blanc et Noir",
                "Grand Anglo-Français Blanc et Orange",
                "Grand Anglo-Français Tricolore",
                "Grand Basset Griffon Vendéen",
                "Grand Bleu de Gascogne",
                "Grand Griffon Vendéen",
                "Great Dane",
                "Great Pyrenees",
                "Greater Swiss Mountain Dog",
                "Greek Harehound",
                "Greek Shepherd",
                "Greenland Dog",
                "Greyhound",
                "Griffon Bleu de Gascogne",
                "Griffon Fauve de Bretagne",
                "Griffon Nivernais",
                "Guatemalan Dogo",
                "Gull Terrier",
                "Hamiltonstövare",
                "Hanover Hound",
                "Hare Indian Dog",
                "Harrier",
                "Havanese",
                "Hawaiian Poi Dog",
                "Himalayan Sheepdog",
                "Hokkaido",
                "Hortaya borzaya",
                "Hovawart",
                "Huntaway",
                "Hygen Hound",
                "Ibizan Hound",
                "Icelandic Sheepdog",
                "Indian pariah dog",
                "Indian Spitz",
                "Irish Red and White Setter",
                "Irish Setter",
                "Irish Terrier",
                "Irish Water Spaniel",
                "Irish Wolfhound",
                "Istrian Coarse-haired Hound",
                "Istrian Short-haired Hound",
                "Italian Greyhound",
                "Jack Russell Terrier",
                "Jagdterrier",
                "Swedish Elkhound",
                "Japanese Chin",
                "Japanese Spitz",
                "Japanese Terrier",
                "Jindo",
                "Jonangi",
                "Kaikadi dog",
                "Kai Ken",
                "Kangal Shepherd Dog",
                "Kanni",
                "Karakachan dog",
                "Karelian Bear Dog",
                "Karst Shepherd",
                "Keeshond",
                "Kerry Beagle",
                "Kerry Blue Terrier",
                "King Charles Spaniel",
                "King Shepherd",
                "Kintamani",
                "Kishu Ken",
                "Komondor",
                "Koolie",
                "Koyun dog",
                "Kromfohrländer",
                "Kumaon Mastiff",
                "Kunming Wolfdog",
                "Kurī",
                "Kuvasz",
                "Kyi-Leo",
                "Labrador Husky",
                "Labrador Retriever",
                "Lagotto Romagnolo",
                "Lakeland Terrier",
                "Lancashire Heeler",
                "Landseer",
                "Lapponian Herder",
                "Lapponian Shepherd",
                "Large Münsterländer",
                "Leonberger",
                "Lhasa Apso",
                "Lithuanian Hound",
                "Louisiana Catahoula Leopard Dog",
                "Löwchen",
                "Mackenzie River husky",
                "Magyar agár",
                "Mahratta Greyhound",
                "Maltese",
                "Maremma Sheepdog",
                "Marquesan Dog",
                "McNab dog",
                "Miniature American Shepherd",
                "Miniature Bull Terrier",
                "Miniature Fox Terrier",
                "Miniature Pinscher",
                "Miniature Schnauzer",
                "Miniature Shar Pei",
                "Molossus",
                "Molossus of Epirus",
                "Montenegrin Mountain Hound",
                "Moscow Watchdog",
                "Moscow Water Dog",
                "Mountain Cur",
                "Mucuchies",
                "Mudhol Hound",
                "Mudi",
                "Neapolitan Mastiff",
                "Nederlandse Kooikerhondje",
                "Nenets Herding Laika",
                "Newfoundland",
                "New Guinea singing dog",
                "New Zealand Heading Dog",
                "Norfolk Spaniel",
                "Norfolk Terrier",
                "Norrbottenspets",
                "North Country Beagle",
                "Northern Inuit Dog",
                "Norwegian Buhund",
                "Norwegian Elkhound",
                "Norwegian Lundehund",
                "Norwich Terrier",
                "Nova Scotia Duck Tolling Retriever",
                "Old Croatian Sighthound",
                "Old Danish Pointer",
                "Old English Bulldog",
                "Old English Sheepdog",
                "Old English Terrier",
                "Old German Shepherd Dog",
                "Old Spanish Pointer",
                "Old Time Farm Shepherd",
                "Old Welsh Grey Sheepdog",
                "Olde English Bulldogge",
                "Otterhound",
                "Pachon Navarro",
                "Pandikona",
                "Paisley Terrier",
                "Papillon",
                "Parson Russell Terrier",
                "Pastore della Lessinia e del Lagorai",
                "Patterdale Terrier",
                "Pekingese",
                "Perro de Pastor Mallorquin",
                "Perro de Presa Canario",
                "Perro de Presa Mallorquin",
                "Peruvian Inca Orchid",
                "Petit Basset Griffon Vendéen",
                "Petit Bleu de Gascogne",
                "Phalène",
                "Pharaoh Hound",
                "Phu Quoc Ridgeback",
                "Picardy Spaniel",
                "Plummer Terrier",
                "Plott Hound",
                "Podenco Canario",
                "Poitevin",
                "Polish Greyhound",
                "Polish Hound",
                "Polish Hunting Dog",
                "Polish Lowland Sheepdog",
                "Polish Tatra Sheepdog",
                "Pomeranian",
                "Pont-Audemer Spaniel",
                "Poodle",
                "Porcelaine",
                "Portuguese Podengo",
                "Portuguese Pointer",
                "Portuguese Water Dog",
                "Posavac Hound",
                "Potsdam Greyhound",
                "Pražský Krysařík",
                "Pudelpointer",
                "Pug",
                "Puli",
                "Pumi",
                "Pungsan dog",
                "Pyrenean Mastiff",
                "Pyrenean Shepherd",
                "Rafeiro do Alentejo",
                "Rajapalayam",
                "Rampur Greyhound",
                "Rastreador Brasileiro",
                "Rat Terrier",
                "Ratonero Bodeguero Andaluz",
                "Ratonero Mallorquin",
                "Ratonero Murciano de Huerta",
                "Ratonero Valenciano",
                "Redbone Coonhound",
                "Rhodesian Ridgeback",
                "Romanian Mioritic Shepherd Dog",
                "Romanian Raven Shepherd Dog",
                "Rottweiler",
                "Russian Salon Dog",
                "Russian Spaniel",
                "Russian Toy",
                "Russian Tracker",
                "Russo-European Laika",
                "Russell Terrier",
                "Saarloos Wolfdog",
                "Sabueso Español",
                "Sabueso fino Colombiano",
                "Saint Bernard",
                "Saint John's water dog",
                "Saint-Usuge Spaniel",
                "Sakhalin Husky",
                "Salish Wool Dog",
                "Saluki",
                "Samoyed",
                "Sapsali",
                "Šarplaninac",
                "Schapendoes",
                "Schillerstövare",
                "Schipperke",
                "Schweizer Laufhund",
                "Schweizerischer Niederlaufhund",
                "Scotch Collie",
                "Scottish Deerhound",
                "Scottish Terrier",
                "Sealyham Terrier",
                "Segugio Italiano",
                "Segugio Maremmano",
                "Seppala Siberian Sleddog",
                "Serbian Hound",
                "Serbian Tricolour Hound",
                "Seskar Seal Dog",
                "Shar Pei",
                "Shetland Sheepdog",
                "Shiba Inu",
                "Shih Tzu",
                "Shikoku",
                "Shiloh Shepherd",
                "Siberian Husky",
                "Silken Windhound",
                "Silky Terrier",
                "Sinhala Hound",
                "Skye Terrier",
                "Sloughi",
                "Slovakian Wirehaired Pointer",
                "Slovensky Cuvac",
                "Slovensky Kopov",
                "Smålandsstövare",
                "Small Münsterländer",
                "Small Greek Domestic Dog",
                "Smithfield",
                "Soft-Coated Wheaten Terrier",
                "South Russian Ovcharka",
                "Southern Hound",
                "Spanish Mastiff",
                "Spanish Water Dog",
                "Spinone Italiano",
                "Sporting Lucas Terrier",
                "Stabyhoun",
                "Staffordshire Bull Terrier",
                "Standard Manchester Terrier",
                "Standard Schnauzer",
                "Stephens Cur",
                "Styrian Coarse-haired Hound",
                "Sussex Spaniel",
                "Swedish Lapphund",
                "Swedish Vallhund",
                "Tahitian Dog",
                "Tahltan Bear Dog",
                "Taigan",
                "Taiwan Dog",
                "Talbot Hound",
                "Tamaskan Dog",
                "Teddy Roosevelt Terrier",
                "Telomian",
                "Tenterfield Terrier",
                "Terceira Mastiff",
                "Thai Bangkaew Dog",
                "Thai Ridgeback",
                "Tibetan Mastiff",
                "Tibetan Spaniel",
                "Tibetan Terrier",
                "Tornjak",
                "Tosa",
                "Toy Bulldog",
                "Toy Fox Terrier",
                "Toy Manchester Terrier",
                "Toy Trawler Spaniel",
                "Transylvanian Hound",
                "Treeing Cur",
                "Treeing Tennessee Brindle",
                "Treeing Walker Coonhound",
                "Trigg Hound",
                "Turnspit",
                "Tweed Water Spaniel",
                "Tyrolean Hound",
                "Cimarrón Uruguayo",
                "Vanjari Hound",
                "Villano de Las Encartaciones",
                "Villanuco de Las Encartaciones",
                "Vizsla",
                "Volpino Italiano",
                "Weimaraner",
                "Welsh Corgi, Cardigan",
                "Welsh Corgi, Pembroke",
                "Welsh Hillman",
                "Welsh Sheepdog",
                "Welsh Springer Spaniel",
                "Welsh Terrier",
                "West Highland White Terrier",
                "West Siberian Laika",
                "Westphalian Dachsbracke",
                "Wetterhoun",
                "Whippet",
                "White Shepherd",
                "Wirehaired Pointing Griffon",
                "Wirehaired Vizsla",
                "Xiasi Dog",
                "Xoloitzcuintli",
                "Yakutian Laika",
                "Yorkshire Terrier",
                "Abyssinian",
                "Aegean",
                "American Curl",
                "American Bobtail",
                "American Shorthair",
                "American Wirehair",
                "Arabian Mau",
                "Australian Mist",
                "Asian",
                "Asian Semi-longhair",
                "Balinese",
                "Bambino",
                "Bengal",
                "Birman",
                "Bombay",
                "Brazilian Shorthair",
                "British Semi-longhair",
                "British Shorthair",
                "British Longhair",
                "Burmese",
                "Burmilla",
                "Chantilly-Tiffany",
                "Chartreux",
                "Chausie",
                "Cheetoh",
                "Colorpoint Shorthair",
                "Javanese",
                "Cornish Rex",
                "Cymric",
                "Cyprus",
                "Egyptian Mau",
                "European Shorthair",
                "Exotic Shorthair",
                "German Rex",
                "Havana Brown",
                "Himalayan",
                "Japanese Bobtail",
                "Khao Manee",
                "Korat",
                "Korean Bobtail",
                "Kurilian Bobtail",
                "LaPerm",
                "Lykoi",
                "Maine Coon",
                "Manx",
                "Minskin",
                "Munchkin",
                "Nebelung",
                "Napoleon",
                "Norwegian Forest Cat",
                "Ocicat",
                "Ojos Azules",
                "Oregon Rex",
                "Oriental Bicolor",
                "Oriental Shorthair",
                "Oriental Longhair",
                "Pixie-bob",
                "Raas",
                "Ragamuffin",
                "Russian Blue",
                "Savannah",
                "Selkirk Rex",
                "Serengeti",
                "Siamese",
                "Thai",
                "Siberian",
                "Singapura",
                "Snowshoe",
                "Sokoke",
                "Somali",
                "Sphynx",
                "Suphalak",
                "Thai Lilac",
                "Tonkinese",
                "Toyger",
                "Turkish Angora",
                "Turkish Van",
                "York Chocolate"
              ]
            },
            "secondaryBreed": {
              "type": "string"
            },
            "size": {
              "type": "string",
              "enum": [
                "small",
                "medium",
                "large"
              ]
            },
            "isNeutered": {
              "type": "boolean"
            },
            "isChipped": {
              "type": "boolean"
            },
            "isVaccinated": {
              "type": "boolean"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "description": "Date of birth YYYY-MM-DD.",
              "example": "1980-01-01"
            },
            "petPrice": {
              "type": "integer"
            },
            "hasExistingConditions": {
              "type": "boolean"
            }
          },
          "required": [
            "name",
            "animalType",
            "breedType",
            "isNeutered",
            "isChipped",
            "isVaccinated",
            "dateOfBirth",
            "petPrice",
            "hasExistingConditions"
          ],
          "additionalProperties": false
        },
        "Applicant": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "type": "object",
              "description": "Basic information about person's identity.",
              "pii": true,
              "properties": {
                "title": {
                  "type": "string",
                  "description": "",
                  "enum": [
                    "mr",
                    "miss",
                    "ms",
                    "mrs"
                  ]
                },
                "firstName": {
                  "type": "string",
                  "description": "First name(s) or given name(s), as specified in ID.",
                  "minLength": 1,
                  "example": "Bob"
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name or surname, as specified in ID.",
                  "minLength": 1,
                  "example": "Smith"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of birth YYYY-MM-DD.",
                  "example": "1980-01-01"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "hello@example.com"
                },
                "phone": {
                  "$ref": "#/domains/Generic/types/Phone"
                }
              },
              "required": [
                "title",
                "firstName",
                "lastName",
                "dateOfBirth",
                "email",
                "phone"
              ],
              "additionalProperties": false
            },
            "address": {
              "$ref": "#/domains/Generic/types/ExplicitAddress"
            }
          },
          "required": [
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "DirectDebit": {
          "type": "object",
          "description": "Account details for direct debit.",
          "pii": true,
          "properties": {
            "sortCode": {
              "type": "string",
              "description": "Bank sort code",
              "pattern": "\\d{2}-?\\d{2}-?\\d{2}",
              "example": "56-00-29"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "description": "Cover marketing name as provided by the insurer.",
              "example": "26207729"
            },
            "accountName": {
              "type": "string",
              "minLength": 1
            },
            "bankName": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "sortCode",
            "accountNumber",
            "accountName",
            "bankName"
          ],
          "additionalProperties": false
        },
        "AvailablePaymentMethods": {
          "type": "array",
          "description": "An array of PaymentMethod objects.",
          "items": {
            "$ref": "#/domains/PetInsurance/types/PaymentMethod"
          },
          "minItems": 1
        },
        "PaymentMethod": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "annually",
                "monthly"
              ]
            },
            "method": {
              "type": "string",
              "enum": [
                "direct-debit",
                "credit-card"
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "type",
            "method",
            "price"
          ],
          "additionalProperties": false
        },
        "QuoteValue": {
          "type": "object",
          "properties": {
            "monthly": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "annually": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about the successful operation."
            }
          },
          "required": [
            "message"
          ],
          "additionalProperties": false
        },
        "OptionalExtras": {
          "type": "object",
          "properties": {},
          "required": [],
          "additionalProperties": true
        },
        "AvailablePackages": {
          "type": "array",
          "description": "An array of Package objects.",
          "items": {
            "$ref": "#/domains/PetInsurance/types/Package"
          },
          "minItems": 1
        },
        "Package": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "description": {
              "type": "string",
              "minLength": 1
            },
            "monthly": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "annually": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "benefits": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "name"
          ],
          "additionalProperties": true
        },
        "Documents": {
          "type": "array",
          "description": "An array of Link objects.",
          "items": {
            "$ref": "#/domains/Generic/types/Link"
          },
          "minItems": 1
        },
        "AvailableOptions": {
          "type": "array",
          "description": "Additional options to be filled in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/PetInsurance/types/AvailableOptionString"
              },
              {
                "$ref": "#/domains/PetInsurance/types/AvailableOptionBoolean"
              },
              {
                "$ref": "#/domains/PetInsurance/types/AvailableOptionSelectOne"
              },
              {
                "$ref": "#/domains/PetInsurance/types/AvailableOptionSelectMany"
              }
            ]
          }
        },
        "AvailableOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionBoolean": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "Boolean"
              ]
            },
            "label": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "SelectedOptions": {
          "type": "array",
          "description": "Additional options to fill in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/PetInsurance/types/SelectedOptionString"
              },
              {
                "$ref": "#/domains/PetInsurance/types/SelectedOptionBoolean"
              },
              {
                "$ref": "#/domains/PetInsurance/types/SelectedOptionSelectOne"
              },
              {
                "$ref": "#/domains/PetInsurance/types/SelectedOptionSelectMany"
              }
            ]
          }
        },
        "SelectedOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "text"
          ],
          "additionalProperties": false
        },
        "SelectedOptionBoolean": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "type": "boolean"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "CoverStartDate": {
          "type": "string",
          "format": "date",
          "description": "The date the cover starts on.",
          "example": "1980-01-01"
        }
      },
      "errors": []
    },
    "MobileSignup": {
      "description": "Allows subscribing to mobile offers (which might also include delivery of SIM cards or other mobile related items)",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/code"
      },
      "inputs": {
        "applicant": {
          "$ref": "#/domains/MobileSignup/types/Anything",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
          "initial": true
        },
        "selectedOffer": {
          "$ref": "#/domains/MobileSignup/types/Anything"
        },
        "deliveryAddress": {
          "$ref": "#/domains/MobileSignup/types/Anything"
        },
        "selectedDeliveryAddress": {
          "$ref": "#/domains/MobileSignup/types/Anything"
        },
        "selectedDeliveryDate": {
          "$ref": "#/domains/MobileSignup/types/Date"
        },
        "bankDetails": {
          "$ref": "#/domains/MobileSignup/types/Anything"
        },
        "account": {
          "$ref": "#/domains/MobileSignup/types/Account"
        },
        "options": {
          "$ref": "#/domains/MobileSignup/types/Options",
          "default": {},
          "initial": true
        }
      },
      "outputs": {
        "availableOffers": {
          "$ref": "#/domains/MobileSignup/types/Anything",
          "description": "Available offers for subscription"
        },
        "availableDeliveryAddresses": {
          "$ref": "#/domains/MobileSignup/types/Anything",
          "description": "List of available delivery addresses provided by the website"
        },
        "availableDeliveryDates": {
          "$ref": "#/domains/MobileSignup/types/AvailableDeliveryDates"
        },
        "priceBreakdown": {
          "$ref": "#/domains/MobileSignup/types/Anything"
        },
        "confirmation": {
          "$ref": "#/domains/MobileSignup/types/Confirmation"
        }
      },
      "types": {
        "Anything": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "Date": {
          "type": "string",
          "description": "Delivery date in YYYY-MM-DD format.",
          "format": "date",
          "example": "2019-05-27"
        },
        "AvailableDeliveryDates": {
          "type": "array",
          "description": "A list of delivery dates.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/MobileSignup/types/Date"
          }
        },
        "Confirmation": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "example": "abc"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            }
          },
          "required": [
            "email",
            "phone",
            "isExisting"
          ],
          "additionalProperties": false
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features.",
          "properties": {
            "success": {
              "type": "boolean",
              "default": false
            }
          },
          "required": [],
          "additionalProperties": false
        }
      },
      "errors": [
        {
          "code": "DuplicateRequest",
          "category": "client",
          "description": "The website claims this is a duplicate attempt."
        }
      ]
    },
    "TrainBooking": {
      "description": "Automates bus and chack tickets booking on websites.",
      "private": false,
      "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to one of the checkout flow pages."
        },
        "search": {
          "$ref": "#/domains/TrainBooking/types/Search",
          "initial": true
        },
        "selectedOutboundTrip": {
          "$ref": "#/domains/TrainBooking/types/Trip",
          "sourceOutputKey": "availableOutboundTrips",
          "inputMethod": "SelectOne"
        },
        "selectedInboundTrip": {
          "$ref": "#/domains/TrainBooking/types/Trip",
          "sourceOutputKey": "availableInboundTrips",
          "inputMethod": "SelectOne"
        },
        "selectedOutboundJourney": {
          "$ref": "#/domains/TrainBooking/types/Journey",
          "sourceOutputKey": "availableOutboundJourneys",
          "inputMethod": "SelectOne"
        },
        "selectedInboundJourney": {
          "$ref": "#/domains/TrainBooking/types/Journey",
          "sourceOutputKey": "availableInboundJourneys",
          "inputMethod": "SelectOne"
        },
        "selectedOutboundFare": {
          "$ref": "#/domains/TrainBooking/types/Fare",
          "sourceOutputKey": "availableOutboundFares",
          "inputMethod": "SelectOne"
        },
        "selectedInboundFare": {
          "$ref": "#/domains/TrainBooking/types/Fare",
          "sourceOutputKey": "availableInboundFares",
          "inputMethod": "SelectOne"
        },
        "selectedDelivery": {
          "$ref": "#/domains/TrainBooking/types/Delivery",
          "description": "Requested when delivery choices are required by website.<br/>At this point <code>availableDeliveries</code> output should contain information about available delivery options.<br/>Note: on deep links with pre-selected delivery options, this input might not required.<br/>Automation may fail if the incorrect option is specified, or if the delivery option is no longer available, for example, for a late or same day booking.",
          "sourceOutputKey": "availableDeliveries",
          "inputMethod": "SelectOne"
        },
        "account": {
          "$ref": "#/domains/TrainBooking/types/Account",
          "canonical": [
            "/email"
          ]
        },
        "passengers": {
          "$ref": "#/domains/TrainBooking/types/Passengers"
        },
        "discount": {
          "$ref": "#/domains/TrainBooking/types/Discount"
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        },
        "smsConfirmation": {
          "$ref": "#/domains/TrainBooking/types/VerificationCode",
          "description": "An SMS confirmation for authorizing the payment. Occurs in some of the transactions in place of 3dsecure."
        },
        "options": {
          "$ref": "#/domains/TrainBooking/types/Options",
          "default": {},
          "initial": true
        }
      },
      "outputs": {
        "availableOutboundTrips": {
          "$ref": "#/domains/TrainBooking/types/Trips"
        },
        "availableInboundTrips": {
          "$ref": "#/domains/TrainBooking/types/Trips"
        },
        "availableOutboundJourneys": {
          "$ref": "#/domains/TrainBooking/types/Journeys"
        },
        "availableInboundJourneys": {
          "$ref": "#/domains/TrainBooking/types/Journeys"
        },
        "availableOutboundFares": {
          "$ref": "#/domains/TrainBooking/types/AvailableFares"
        },
        "availableInboundFares": {
          "$ref": "#/domains/TrainBooking/types/AvailableFares"
        },
        "availableDeliveries": {
          "$ref": "#/domains/TrainBooking/types/AvailableDeliveriesOrNull",
          "description": "Emitted when actual delivery information is collected.<br/>Note: on deep links with pre-selected delivery, this output may not be provided."
        },
        "estimatedPrice": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Price shown by the website prior to requiring passenger information.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/TrainBooking/types/BookingConfirmation"
        }
      },
      "types": {
        "Search": {
          "type": "object",
          "description": "Information about the trip.",
          "properties": {
            "cabinClass": {
              "description": "Preferred cabin class, used on trip search forms.",
              "type": "string",
              "enum": [
                "second",
                "first"
              ]
            },
            "outbound": {
              "$ref": "#/domains/TrainBooking/types/TrainSearch",
              "description": "Outbound trip specification."
            },
            "inbound": {
              "$ref": "#/domains/TrainBooking/types/TrainSearch",
              "description": "Inbound (return) trip specification. If omitted, one-way trip booking flow is used."
            },
            "passengerAges": {
              "$ref": "#/domains/Generic/types/Ages",
              "description": "Ages of all passengers.",
              "example": [
                34,
                31,
                9
              ]
            }
          },
          "required": [
            "outbound",
            "passengerAges"
          ],
          "additionalProperties": false
        },
        "TrainSearch": {
          "type": "object",
          "description": "Outbound and inbound trips specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/TrainBooking/types/DateTerminal"
            },
            "destination": {
              "$ref": "#/domains/TrainBooking/types/DateTerminal"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "DateTerminal": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "format": "date",
              "description": "Date of trip (terminal local date).",
              "example": "2019-01-01"
            },
            "time": {
              "type": "string",
              "pattern": "^[012][0-9]:[0-5][0-9]$",
              "description": "Selected time for availability search.",
              "example": "08:00"
            },
            "terminalLocality": {
              "type": "string",
              "description": "Terminal locality, usually city name.",
              "example": "London"
            },
            "terminalName": {
              "type": "string",
              "description": "Name of the terminal as found on the booking website.",
              "example": "London Liverpool Street"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of the terminal.",
              "example": "gb"
            }
          },
          "required": [
            "date",
            "time",
            "terminalName"
          ],
          "additionalProperties": false
        },
        "Trips": {
          "type": "array",
          "description": "An array of trips.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TrainBooking/types/Trip"
          }
        },
        "Trip": {
          "type": "object",
          "description": "Outbound and inbound specification.",
          "properties": {
            "origin": {
              "$ref": "#/domains/TrainBooking/types/DateTimeTerminal"
            },
            "destination": {
              "$ref": "#/domains/TrainBooking/types/DateTimeTerminal"
            },
            "connectionsCount": {
              "type": "integer"
            },
            "lowestPrice": {
              "type": "object",
              "description": "'Start from' price for each class.",
              "properties": {
                "secondClass": {
                  "$ref": "#/domains/Generic/types/Price"
                },
                "firstClass": {
                  "$ref": "#/domains/Generic/types/Price"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "Journeys": {
          "type": "array",
          "description": "An array of journeys.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TrainBooking/types/Journey"
          }
        },
        "Journey": {
          "type": "object",
          "description": "Outbound and inbound specification.",
          "properties": {
            "segments": {
              "type": "array",
              "description": "List of change stations names.",
              "items": {
                "$ref": "#/domains/TrainBooking/types/Segment"
              }
            },
            "origin": {
              "$ref": "#/domains/TrainBooking/types/DateTimeTerminal"
            },
            "destination": {
              "$ref": "#/domains/TrainBooking/types/DateTimeTerminal"
            },
            "connectionsCount": {
              "type": "integer"
            },
            "fares": {
              "$ref": "#/domains/TrainBooking/types/JourneyFares"
            }
          },
          "required": [
            "origin",
            "destination"
          ],
          "additionalProperties": false
        },
        "JourneyFares": {
          "type": "array",
          "description": "A list of available journey fares found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TrainBooking/types/Fare"
          }
        },
        "JourneyFare": {
          "type": "object",
          "description": "Train fare information.",
          "additionalProperties": false,
          "properties": {
            "fareName": {
              "type": "string"
            },
            "className": {
              "type": "string"
            },
            "cabinClass": {
              "$ref": "#/domains/TrainBooking/types/CabinClass"
            },
            "cancellation": {
              "type": "string",
              "description": "Fare cancellation type.",
              "example": "rebookable",
              "enum": [
                "rebookable",
                "non-rebookable",
                "refundable",
                "unknown"
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "cabinClass",
            "cancellation",
            "price"
          ]
        },
        "AvailableFares": {
          "type": "array",
          "description": "A list of available fares found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TrainBooking/types/Fare"
          }
        },
        "Fare": {
          "type": "object",
          "description": "Train fare information.",
          "additionalProperties": false,
          "properties": {
            "segments": {
              "type": "array",
              "description": "List of change stations names.",
              "items": {
                "$ref": "#/domains/TrainBooking/types/Segment"
              }
            },
            "fareName": {
              "type": "string"
            },
            "className": {
              "type": "string"
            },
            "cabinClass": {
              "$ref": "#/domains/TrainBooking/types/CabinClass"
            },
            "cancellation": {
              "type": "string",
              "description": "Fare cancellation type.",
              "example": "rebookable",
              "enum": [
                "rebookable",
                "non-rebookable",
                "refundable",
                "unknown"
              ]
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "cabinClass",
            "cancellation",
            "price"
          ]
        },
        "Segment": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "origin": {
              "$ref": "#/domains/TrainBooking/types/Itinerary"
            },
            "destination": {
              "$ref": "#/domains/TrainBooking/types/Itinerary"
            }
          },
          "required": [
            "origin",
            "destination"
          ]
        },
        "Transport": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "number": {
              "type": "string",
              "description": "Reference number of the transportation vehicle.",
              "example": "AW 1675"
            },
            "method": {
              "type": "string",
              "description": "Type of transportation (ie train, bus).",
              "enum": [
                "train",
                "bus",
                "tram",
                "metro",
                "taxi",
                "walking",
                "ferry"
              ]
            }
          },
          "required": [
            "number"
          ]
        },
        "Itinerary": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "terminalName": {
              "type": "string",
              "description": "Name of the terminal as found on the booking website.",
              "example": "London Liverpool Street"
            },
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time (terminal local time).",
              "example": "2018-02-02 19:40"
            },
            "transport": {
              "$ref": "#/domains/TrainBooking/types/Transport"
            }
          },
          "required": [
            "terminalName"
          ]
        },
        "CabinClass": {
          "type": "string",
          "enum": [
            "second-class",
            "first-class",
            "sleeping-car"
          ]
        },
        "DateTimeTerminal": {
          "type": "object",
          "properties": {
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time (terminal local time).",
              "example": "2018-02-02 19:40"
            },
            "terminalLocality": {
              "type": "string",
              "description": "Terminal locality, usually city name.",
              "example": "London"
            },
            "terminalName": {
              "type": "string",
              "description": "Name of the terminal as found on the booking website.",
              "example": "London Liverpool Street"
            },
            "countryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Country code of the terminal.",
              "example": "gb"
            }
          },
          "required": [
            "dateTime",
            "terminalName"
          ],
          "additionalProperties": false
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "items": {
            "$ref": "#/domains/TrainBooking/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "document": {
              "$ref": "#/domains/TrainBooking/types/PassengerDocument"
            }
          },
          "required": [
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "contactEmail": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "username": {
              "type": "string",
              "example": "john012345"
            },
            "person": {
              "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
              "$ref": "#/domains/TrainBooking/types/Person"
            }
          },
          "required": [
            "email",
            "isExisting"
          ],
          "additionalProperties": false
        },
        "Discount": {
          "type": "string",
          "minLength": 1,
          "pii": true
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "document": {
              "$ref": "#/domains/TrainBooking/types/IdentityDocument"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "IdentityDocument": {
          "type": "object",
          "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "city": {
              "type": "string",
              "description": "Name of city, town or other settlement.",
              "minLength": 1,
              "example": "New York"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number",
            "expirationDate",
            "issueCountryCode"
          ],
          "additionalProperties": false
        },
        "AvailableDeliveriesOrNull": {
          "oneOf": [
            {
              "type": "array",
              "description": "A list of available delivery options found on the page.",
              "minItems": 1,
              "items": {
                "$ref": "#/domains/TrainBooking/types/Delivery"
              }
            },
            {
              "type": "null"
            }
          ]
        },
        "Delivery": {
          "type": "object",
          "description": "Ticket delivery information.",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string",
              "description": "Delivery text as provided by the insurer."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "name"
          ]
        },
        "PassengerDocument": {
          "type": "object",
          "description": "Passenger ID (passport or other travel document). Automation may fail if this information is required by website, but not provided by Client.",
          "pii": true,
          "properties": {
            "type": {
              "type": "string",
              "description": "Document type.",
              "enum": [
                "passport",
                "national-id"
              ]
            },
            "number": {
              "type": "string",
              "description": "Document number.",
              "example": "75 127001"
            },
            "issueDate": {
              "type": "string",
              "format": "date",
              "example": "2008-01-01"
            },
            "expirationDate": {
              "type": "string",
              "format": "date",
              "example": "2028-01-01"
            },
            "issueCountryCode": {
              "$ref": "#/domains/Generic/types/CountryCode",
              "description": "Code of country where the document was issued."
            }
          },
          "required": [
            "type",
            "number",
            "expirationDate",
            "issueCountryCode"
          ],
          "additionalProperties": false
        },
        "VerificationCode": {
          "type": "object",
          "description": "Verification code",
          "properties": {
            "code": {
              "type": "string",
              "example": "1234"
            }
          },
          "required": [
            "code"
          ]
        },
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features such as upsells and additional features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "priceCheck": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        }
      },
      "errors": [
        {
          "code": "TripInvalid",
          "category": "client",
          "description": "Trip details are invalid."
        },
        {
          "code": "OutboundTripNotAvailable",
          "category": "client",
          "description": "Outbound trip dates/times are not available, either sold out or not found."
        },
        {
          "code": "InboundTripNotAvailable",
          "category": "client",
          "description": "Inbound trip dates/times are not available, either sold out or not found."
        },
        {
          "code": "OutboundFareNotFound",
          "category": "client",
          "description": "Given outbound fare does not match one of the options we are expecting."
        },
        {
          "code": "LoadingFailed",
          "category": "client",
          "description": "A website issue in which the page gets stuck in infinite loading."
        },
        {
          "code": "NoJourneysAvailable",
          "category": "client",
          "description": "When the search returns no results."
        },
        {
          "code": "InboundFareNotFound",
          "category": "client",
          "description": "Given inbound fare does not match one of the options we are expecting."
        },
        {
          "code": "ExtraLuggageNotAvailable",
          "category": "client",
          "description": "The website does not allow adding additional luggage."
        },
        {
          "code": "ExtraLuggageLimitExceeded",
          "category": "client",
          "description": "The website does not allow adding the amount of additional luggage specified in the input."
        },
        {
          "code": "PassengerDetailsInvalid",
          "category": "client",
          "description": "The website invalidates some of the passenger details."
        },
        {
          "code": "DocumentDetailsInvalid",
          "category": "client",
          "description": "The website invalidates the document details."
        },
        {
          "code": "SeatsNotAvailable",
          "category": "client",
          "description": "The website claims that either no seats are available, or the selected seats are not available."
        }
      ]
    },
    "TravelTicketRetrieval": {
      "description": "Allows automating tickets retrieval for means of travel on websites.",
      "private": false,
      "inputs": {
        "options": {
          "$ref": "#/domains/TravelTicketRetrieval/types/Options",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
          "initial": true
        },
        "bookingConfirmation": {
          "$ref": "#/domains/TravelTicketRetrieval/types/BookingConfirmation"
        }
      },
      "outputs": {
        "bookedTickets": {
          "$ref": "#/domains/TravelTicketRetrieval/types/BookedTickets"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {}
        },
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference.",
              "example": "RL2XYZ"
            },
            "code": {
              "type": "string",
              "description": "Code required to amend a booking.",
              "example": "1411"
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "email": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "BookedTickets": {
          "type": "array",
          "description": "A list of available tickets found on the website.",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/Generic/types/File"
          }
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        },
        {
          "code": "BookingNotAvailable",
          "category": "client",
          "description": "Booking is blocked, usually caused by trying to access it after short periods of time."
        }
      ]
    },
    "FlightBookingStatus": {
      "description": "Allows automating flight status retrieval.",
      "private": false,
      "inputs": {
        "bookingConfirmation": {
          "$ref": "#/domains/FlightBookingStatus/types/BookingConfirmation"
        }
      },
      "outputs": {
        "inboundDateTime": {
          "$ref": "#/domains/FlightBookingStatus/types/FlightDateTime"
        },
        "outboundDateTime": {
          "$ref": "#/domains/FlightBookingStatus/types/FlightDateTime"
        },
        "inboundFlightNumber": {
          "$ref": "#/domains/FlightBookingStatus/types/FlightNumber"
        },
        "outboundFlightNumber": {
          "$ref": "#/domains/FlightBookingStatus/types/FlightNumber"
        },
        "outboundStatus": {
          "$ref": "#/domains/FlightBookingStatus/types/Status"
        },
        "inboundStatus": {
          "$ref": "#/domains/FlightBookingStatus/types/Status"
        }
      },
      "types": {
        "BookingConfirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "email": {
              "type": "string",
              "description": "Email the booking confirmation was sent to.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference",
            "email"
          ]
        },
        "FlightDateTime": {
          "type": "object",
          "properties": {
            "departure": {
              "$ref": "#/domains/FlightBookingStatus/types/DateTime"
            },
            "arrival": {
              "$ref": "#/domains/FlightBookingStatus/types/DateTime"
            }
          },
          "required": [
            "departure",
            "arrival"
          ],
          "additionalProperties": false
        },
        "DateTime": {
          "type": "string",
          "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
          "description": "Date and time of flight (airport local time).",
          "example": "2021-02-02 19:40"
        },
        "FlightNumber": {
          "type": "string",
          "description": "Flight number.",
          "example": "ABC 1234"
        },
        "Status": {
          "type": "string",
          "description": "Flight booking status, as shown by the website"
        }
      },
      "errors": [
        {
          "code": "CustomerVerificationRequired",
          "category": "client",
          "description": "The website requires customer verification."
        }
      ]
    },
    "FlightBookingRefund": {
      "description": "Allows automating flight refunds.",
      "private": false,
      "inputs": {
        "flight": {
          "$ref": "#/domains/FlightBookingRefund/types/Flight"
        },
        "contact": {
          "$ref": "#/domains/FlightBookingRefund/types/Contact"
        },
        "passengers": {
          "$ref": "#/domains/FlightBookingRefund/types/Passengers"
        }
      },
      "outputs": {},
      "types": {
        "Flight": {
          "type": "object",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Flight booking reference.",
              "example": "RL2XYZ"
            },
            "number": {
              "type": "string"
            },
            "isReturn": {
              "type": "boolean"
            },
            "date": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9])",
              "description": "Date of flight (airport local time).",
              "example": "2021-02-22"
            }
          },
          "required": [
            "bookingReference",
            "number",
            "isReturn",
            "date"
          ],
          "additionalProperties": false
        },
        "Contact": {
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "description": "Booking email address.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "required": [
            "email"
          ],
          "additionalProperties": false
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "lastName": {
              "type": "string",
              "description": "Last name(s) or family name(s), as specified in passport or travel document.",
              "example": "Bobson"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "maxItems": 20,
          "items": {
            "$ref": "#/domains/FlightBookingRefund/types/Passenger"
          }
        }
      },
      "errors": [
        {
          "code": "RefundAlreadyRequested",
          "category": "client",
          "description": "A refund has already been requested for this booking."
        },
        {
          "code": "FlightDetailsInvalid",
          "category": "client",
          "description": "The flight details provided are invalid."
        },
        {
          "code": "RefundRequestFailed",
          "category": "website",
          "description": "The refund request has failed."
        }
      ]
    },
    "FlightBookingManagement": {
      "description": "Allows automating airplane tickets booking on airline websites and OTAs.",
      "private": false,
      "inputs": {
        "options": {
          "$ref": "#/domains/FlightBookingManagement/types/Options",
          "default": {},
          "initial": true
        },
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
          "initial": true
        },
        "passengers": {
          "$ref": "#/domains/FlightBookingManagement/types/Passengers",
          "canonical": [
            "/0/firstName",
            "/0/lastName",
            "/0/dateOfBirth"
          ]
        },
        "payment": {
          "$ref": "#/domains/FlightBookingManagement/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "bookingConfirmation": {
          "$ref": "#/domains/FlightBookingManagement/types/BookingConfirmation"
        },
        "selectedSeats": {
          "$ref": "#/domains/FlightBookingManagement/types/SeatsWithLegs"
        },
        "selectedAdditionalLuggage": {
          "$ref": "#/domains/FlightBookingManagement/types/AdditionalLuggage"
        },
        "expectedPrice": {
          "description": "Used to check the final price",
          "$ref": "#/domains/Generic/types/Price"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        }
      },
      "outputs": {
        "availableSeats": {
          "$ref": "#/domains/FlightBookingManagement/types/SeatsWithLegs"
        },
        "includedLuggage": {
          "$ref": "#/domains/FlightBookingManagement/types/IncludedLuggage"
        },
        "availableAdditionalLuggage": {
          "$ref": "#/domains/FlightBookingManagement/types/AdditionalLuggage"
        },
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "confirmation": {
          "$ref": "#/domains/FlightBookingManagement/types/Confirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "luggageSelection": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will select additional luggage.",
              "default": false
            },
            "seatSelection": {
              "type": "boolean",
              "description": "If <code>true</code>, automation will request <code>selectedSeats</code> for seat selection.",
              "default": false
            }
          }
        },
        "Passengers": {
          "type": "array",
          "description": "An array with details for each passenger.",
          "pii": true,
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#/domains/FlightBookingManagement/types/Passenger"
          }
        },
        "Passenger": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "ageGroup": {
              "enum": [
                "adult",
                "child",
                "infant",
                "infantOnLap"
              ]
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            },
            "frequentFlyer": {
              "$ref": "#/domains/FlightBooking/types/PassengerFrequentFlyer"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "IncludedLuggage": {
          "type": "array",
          "items": {
            "$ref": "#/domains/FlightBookingManagement/types/IncludedLuggageItem"
          }
        },
        "IncludedLuggageItem": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 2
            },
            "weightCategory": {
              "type": "string",
              "example": "20kg"
            }
          },
          "required": [],
          "additionalProperties": false
        },
        "AdditionalLuggage": {
          "type": "array",
          "items": {
            "$ref": "#/domains/FlightBookingManagement/types/AdditionalLuggageItem"
          }
        },
        "AdditionalLuggageItem": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "example": 2
            },
            "weightCategory": {
              "type": "string",
              "example": "20kg"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Luggage price, if such information is available."
            }
          },
          "required": [
            "count",
            "weightCategory",
            "price"
          ],
          "additionalProperties": false
        },
        "AvailableSeatsLeg": {
          "type": "object",
          "properties": {
            "leg": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string"
                },
                "to": {
                  "type": "string"
                },
                "airline": {
                  "type": "string"
                },
                "flightNumber": {
                  "type": "string"
                }
              },
              "description": "Flight leg."
            },
            "seats": {
              "type": "array",
              "items": {
                "$ref": "#/domains/FlightBookingManagement/types/Seat"
              }
            }
          },
          "required": [
            "leg",
            "seats"
          ],
          "additionalProperties": false
        },
        "SeatsWithLegs": {
          "description": "Seat availability information for each leg.",
          "type": "array",
          "items": {
            "$ref": "#/domains/FlightBookingManagement/types/AvailableSeatsLeg"
          }
        },
        "BookingConfirmation": {
          "pii": true,
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "firstName": {
              "type": "string",
              "description": "First name, as specified in passport or travel document.",
              "example": "Smith"
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "email": {
              "type": "string",
              "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
              "format": "email",
              "example": "client@example.com"
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ]
        },
        "Seat": {
          "type": "object",
          "description": "Seat metadata.",
          "properties": {
            "seatNumber": {
              "$ref": "#/domains/FlightBookingManagement/types/SeatNumber"
            },
            "available": {
              "type": "boolean",
              "description": "<code>true</code> if website allows selecting this seat, <code>false</code> otherwise."
            },
            "restricted": {
              "type": "boolean",
              "description": "<code>true</code> if seat has restrictions for certain groups of passengers."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Seat price, if such information is available."
            }
          },
          "required": [
            "seatNumber",
            "available"
          ],
          "additionalProperties": false
        },
        "SeatNumber": {
          "type": "string",
          "description": "Seat number as extracted from website.",
          "example": "7A"
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/FlightBookingManagement/types/Person"
            },
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "tax": {
              "$ref": "#/domains/Generic/types/Tax"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity.",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "description": "",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            },
            "document": {
              "$ref": "#/domains/Generic/types/IdentityDocument"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on the \"success\" page.",
          "properties": {
            "message": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "message"
          ]
        }
      },
      "errors": [
        {
          "code": "BookingNotFound",
          "category": "client",
          "description": "Booking not found, usually caused by wrong booking reference or name."
        }
      ]
    },
    "ContestSignup": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "confirmation",
        "valuePath": "/reference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "agentLogin": {
          "$ref": "#/domains/ContestSignup/types/Account"
        },
        "account": {
          "$ref": "#/domains/ContestSignup/types/Account",
          "canonical": [
            "/email"
          ]
        },
        "dynamicAccount": {
          "$ref": "#/domains/ContestSignup/types/Account",
          "dynamic": true
        },
        "payment": {
          "$ref": "#/domains/Generic/types/Payment"
        },
        "dynamicPayment": {
          "$ref": "#/domains/Generic/types/Payment",
          "dynamic": true
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "dynamicPanToken": {
          "$ref": "#/domains/Generic/types/PanToken",
          "dynamic": true
        },
        "priceRange": {
          "$ref": "#/domains/Generic/types/PriceRange",
          "description": "Acceptable price range. Prices within this range are acceptable and purchases will be automatically confirmed."
        },
        "selectedEvent": {
          "$ref": "#/domains/ContestSignup/types/Event",
          "sourceOutputKey": "availableEvents",
          "inputMethod": "SelectOne"
        },
        "selectedEntries": {
          "$ref": "#/domains/ContestSignup/types/Entries",
          "sourceOutputKey": "availableEntries",
          "inputMethod": "SelectMany"
        },
        "selectedEventOptions": {
          "$ref": "#/domains/ContestSignup/types/SelectedOptions"
        },
        "participants": {
          "$ref": "#/domains/ContestSignup/types/Participants"
        },
        "options": {
          "$ref": "#/domains/ContestSignup/types/Options",
          "default": {},
          "initial": true
        },
        "discount": {
          "$ref": "#/domains/ContestSignup/types/Discount"
        },
        "emergencyContact": {
          "$ref": "#/domains/ContestSignup/types/EmergencyContact"
        },
        "selectedDynamicOption": {
          "$ref": "#/domains/ContestSignup/types/SelectedDynamicOption",
          "dynamic": true
        }
      },
      "outputs": {
        "authenticationTerms": {
          "$ref": "#/domains/ContestSignup/types/Terms"
        },
        "registrationWaivers": {
          "$ref": "#/domains/ContestSignup/types/Terms"
        },
        "availableEvents": {
          "$ref": "#/domains/ContestSignup/types/Events"
        },
        "availableEntries": {
          "$ref": "#/domains/ContestSignup/types/Entries"
        },
        "availableEventOptions": {
          "$ref": "#/domains/ContestSignup/types/AvailableOptions"
        },
        "availableParticipantOptions": {
          "$ref": "#/domains/ContestSignup/types/AvailableOptions"
        },
        "availableDynamicOptions": {
          "$ref": "#/domains/ContestSignup/types/AvailableDynamicOption",
          "dynamic": true
        },
        "visibleOptions": {
          "$ref": "#/domains/ContestSignup/types/VisibleOptions"
        },
        "existingAccountDetails": {
          "$ref": "#/domains/ContestSignup/types/ExistingAccountDetails"
        },
        "priceBreakdown": {
          "$ref": "#/domains/ContestSignup/types/PriceBreakdown",
          "description": "The list of price components, as found on the website."
        },
        "confirmation": {
          "$ref": "#/domains/ContestSignup/types/Confirmation"
        }
      },
      "types": {
        "Options": {
          "type": "object",
          "description": "Flags for enabling optional automation features such as upsells and additional features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "If <code>true</code>, returns a fake success without making a booking.",
              "default": false
            },
            "dynamicPayment": {
              "type": "boolean",
              "default": false
            },
            "dynamicAccount": {
              "type": "boolean",
              "default": false
            },
            "metadataId": {
              "type": "string",
              "description": "Metadata ID",
              "default": ""
            }
          }
        },
        "Terms": {
          "type": "array",
          "items": {
            "$ref": "#/domains/Generic/types/StructuredTextItem"
          }
        },
        "Account": {
          "type": "object",
          "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
          "pii": true,
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
              "format": "email",
              "example": "hello@example.com"
            },
            "password": {
              "type": "string",
              "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
              "default": ""
            },
            "isExisting": {
              "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
              "type": "boolean"
            },
            "person": {
              "$ref": "#/domains/ContestSignup/types/PersonDob"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "securityQuestion": {},
            "securityAnswer": {}
          },
          "required": [
            "email",
            "isExisting"
          ],
          "additionalProperties": false
        },
        "PersonDob": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth"
          ],
          "additionalProperties": false
        },
        "Events": {
          "type": "array",
          "description": "A list of events.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/ContestSignup/types/Event"
          }
        },
        "Event": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "startDate": {
              "type": "string",
              "format": "date"
            },
            "startTime": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            },
            "strikePrice": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "name"
          ]
        },
        "Entries": {
          "type": "array",
          "description": "A list of possible entries.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/ContestSignup/types/Entry"
          }
        },
        "Entry": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "count": {
              "type": "integer"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "name"
          ]
        },
        "Participants": {
          "type": "array",
          "description": "A list of participants.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/ContestSignup/types/Participant"
          }
        },
        "Participant": {
          "type": "object",
          "pii": true,
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in passport or travel document.",
              "example": "Bob"
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in passport or travel document.",
              "example": "Smith"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Passenger's date of birth in YYYY-MM-DD format.",
              "format": "date",
              "example": "1976-01-27"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "hello@example.com"
            },
            "phone": {
              "description": "Account phone number, may also be used as contact details.",
              "$ref": "#/domains/Generic/types/Phone"
            },
            "membership": {
              "description": "Personal membership details.",
              "$ref": "#/domains/ContestSignup/types/Membership"
            },
            "additionalOptions": {
              "description": "Additional personal details requested by the supplier.",
              "$ref": "#/domains/ContestSignup/types/SelectedOptions"
            },
            "address": {
              "$ref": "#/domains/Generic/types/ExplicitAddress"
            },
            "isRegistrantAccountOwner": {
              "description": "Specifies whether the participant is the account owner or not.",
              "default": false,
              "$ref": "#/domains/ContestSignup/types/Boolean"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth",
            "email",
            "phone"
          ],
          "additionalProperties": false
        },
        "Membership": {
          "type": "object",
          "description": "Membership details.",
          "properties": {
            "organisation": {
              "type": "string",
              "example": "Run for Us"
            },
            "number": {
              "type": "string",
              "example": "rfu-12345"
            }
          },
          "additionalProperties": false,
          "required": [
            "number"
          ]
        },
        "Discount": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "code": {
              "type": "string",
              "description": "Discount code",
              "example": "RL2XYZ"
            }
          },
          "additionalProperties": false,
          "required": [
            "code"
          ]
        },
        "EmergencyContact": {
          "type": "object",
          "description": "Emergency contact details.",
          "properties": {
            "name": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [
            "name",
            "phone"
          ]
        },
        "Confirmation": {
          "type": "object",
          "description": "Information gathered on \"Booking success\" page.",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Booking reference grabbed from the page.",
              "example": "RL2XYZ"
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking.",
              "example": "Your booking was successful."
            }
          },
          "additionalProperties": false,
          "required": []
        },
        "AvailableDynamicOption": {
          "oneOf": [
            {
              "$ref": "#/domains/ContestSignup/types/AvailableOptionString"
            },
            {
              "$ref": "#/domains/ContestSignup/types/AvailableOptionSelectOne"
            },
            {
              "$ref": "#/domains/ContestSignup/types/AvailableOptionSelectMany"
            }
          ]
        },
        "AvailableOptions": {
          "type": "array",
          "description": "Additional options to be filled in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/ContestSignup/types/AvailableOptionString"
              },
              {
                "$ref": "#/domains/ContestSignup/types/AvailableOptionSelectOne"
              },
              {
                "$ref": "#/domains/ContestSignup/types/AvailableOptionSelectMany"
              }
            ]
          }
        },
        "AvailableOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "inputType",
            "label"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/ContestSignup/types/OptionWithPrice"
              }
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "AvailableOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/ContestSignup/types/OptionWithPrice"
              }
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "SelectedDynamicOption": {
          "oneOf": [
            {
              "$ref": "#/domains/ContestSignup/types/SelectedOptionString"
            },
            {
              "$ref": "#/domains/ContestSignup/types/SelectedOptionSelectOne"
            },
            {
              "$ref": "#/domains/ContestSignup/types/SelectedOptionSelectMany"
            },
            {
              "type": "null"
            }
          ]
        },
        "SelectedOptions": {
          "type": "array",
          "description": "Additional options to fill in.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/domains/ContestSignup/types/SelectedOptionString"
              },
              {
                "$ref": "#/domains/ContestSignup/types/SelectedOptionSelectOne"
              },
              {
                "$ref": "#/domains/ContestSignup/types/SelectedOptionSelectMany"
              }
            ]
          }
        },
        "SelectedOptionString": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "String"
              ]
            },
            "label": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "inputType",
            "label",
            "text"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectOne": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectOne"
              ]
            },
            "label": {
              "type": "string"
            },
            "option": {
              "$ref": "#/domains/ContestSignup/types/OptionWithPrice"
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "option"
          ],
          "additionalProperties": false
        },
        "SelectedOptionSelectMany": {
          "type": "object",
          "properties": {
            "inputType": {
              "enum": [
                "SelectMany"
              ]
            },
            "label": {
              "type": "string"
            },
            "options": {
              "type": "array",
              "items": {
                "$ref": "#/domains/ContestSignup/types/OptionWithPrice"
              }
            },
            "isMandatory": {
              "type": "boolean"
            },
            "images": {
              "$ref": "#/domains/ContestSignup/types/Images"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "inputType",
            "label",
            "options"
          ],
          "additionalProperties": false
        },
        "OptionWithPrice": {
          "type": "object",
          "description": "Additional options to be filled in, visible to the automation at that point in time.",
          "properties": {
            "label": {
              "type": "string"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "label"
          ],
          "additionalProperties": false
        },
        "VisibleOptions": {
          "type": "array",
          "description": "Additional options to be filled in, visible to the automation at that point in time.",
          "properties": {
            "label": {
              "type": "string"
            }
          },
          "required": [
            "label"
          ],
          "additionalProperties": false
        },
        "Images": {
          "type": "array",
          "description": "Relevant images.",
          "items": {
            "$ref": "#/domains/Generic/types/Link"
          }
        },
        "PriceBreakdown": {
          "type": "array",
          "description": "The list of price components, as found on the website.",
          "minItems": 1,
          "items": {
            "$ref": "#/domains/ContestSignup/types/PriceBreakdownItem"
          }
        },
        "PriceBreakdownItem": {
          "type": "object",
          "description": "A component of the price breakdown.",
          "properties": {
            "text": {
              "type": "string",
              "description": "The description of an item on the price breakdown list, as found on the website.",
              "example": "Credit card charge"
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price"
            }
          },
          "required": [
            "text",
            "price"
          ]
        },
        "ExistingAccountDetails": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "#/domains/Generic/types/NamedText"
          }
        },
        "Boolean": {
          "type": "boolean"
        }
      },
      "errors": [
        {
          "code": "InvalidAdditionalParticipantOptions",
          "category": "client",
          "description": "The participants/*/additionalOptions is invalid."
        },
        {
          "code": "InvalidParticipantDetails",
          "category": "client",
          "description": "One of the participants' details are invalid."
        },
        {
          "code": "EntriesNotAvailable",
          "category": "client",
          "description": "One or more entries are not available."
        },
        {
          "code": "EventNotAvailable",
          "category": "client",
          "description": "The event is not available."
        },
        {
          "code": "EventRegistrationEnded",
          "category": "client",
          "description": "The registration for this event ended."
        },
        {
          "code": "InvalidPassword",
          "category": "client",
          "description": "The specified password is not valid."
        },
        {
          "code": "AccountAlreadyExists",
          "category": "client",
          "description": "The specified account already exists."
        },
        {
          "code": "ParticipantAlreadyRegistered",
          "category": "client",
          "description": "The specified participant is already registered."
        },
        {
          "code": "AccountLocked",
          "category": "client",
          "description": "The specified account is not accessible."
        }
      ]
    },
    "ProductPurchase": {
      "description": "",
      "private": false,
      "successCode": {
        "outputKey": "orderConfirmation",
        "valuePath": "/orderReference"
      },
      "inputs": {
        "url": {
          "$ref": "#/domains/Generic/types/URL",
          "description": "Website entry point.",
          "initial": true
        },
        "attributes": {
          "$ref": "#/domains/ProductPurchase/types/Attributes",
          "description": "Product attributes such as size, colour, quantity/amount, type e.t.c.",
          "initial": true
        },
        "account": {
          "$ref": "#/domains/ProductPurchase/types/Account",
          "description": "Name and contact details.",
          "canonical": [
            "/contact/email"
          ]
        },
        "deliveryAddress": {
          "$ref": "#/domains/Generic/types/Address"
        },
        "payment": {
          "$ref": "#/domains/ProductPurchase/types/Payment"
        },
        "panToken": {
          "$ref": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
          "$ref": "#/domains/Generic/types/PriceConsent",
          "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
          "sourceOutputKey": "finalPrice",
          "inputMethod": "Consent"
        }
      },
      "outputs": {
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
          "$ref": "#/domains/Generic/types/PriceConsent"
        },
        "orderConfirmation": {
          "$ref": "#/domains/ProductPurchase/types/OrderConfirmation"
        }
      },
      "types": {
        "Attributes": {
          "type": "object",
          "default": {}
        },
        "Account": {
          "type": "object",
          "pii": true,
          "properties": {
            "person": {
              "$ref": "#/domains/ProductPurchase/types/Person"
            },
            "contact": {
              "$ref": "#/domains/ProductPurchase/types/Contact"
            }
          },
          "required": [
            "person",
            "contact"
          ],
          "additionalProperties": false
        },
        "Contact": {
          "type": "object",
          "properties": {
            "phone": {
              "$ref": "#/domains/Generic/types/AnyPhoneString"
            },
            "email": {
              "type": "string",
              "description": "Contact email address.",
              "format": "email",
              "example": "mail@example.com"
            }
          },
          "required": [
            "phone",
            "email"
          ],
          "additionalProperties": false
        },
        "Person": {
          "type": "object",
          "description": "Basic information about person's identity. This is a copy of Generic.Person, with title and document removed.",
          "pii": true,
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name(s) or given name(s), as specified in ID.",
              "minLength": 1,
              "example": "Bob"
            },
            "middleName": {
              "type": "string",
              "default": "",
              "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
            },
            "lastName": {
              "type": "string",
              "description": "Last name or surname, as specified in ID.",
              "minLength": 1,
              "example": "Smith"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ],
          "additionalProperties": false
        },
        "Payment": {
          "type": "object",
          "description": "Payment information, including card details and billing address.",
          "pii": true,
          "properties": {
            "card": {
              "$ref": "#/domains/Generic/types/PaymentCard"
            },
            "person": {
              "$ref": "#/domains/ProductPurchase/types/Person"
            },
            "address": {
              "$ref": "#/domains/Generic/types/Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "additionalProperties": false
        },
        "OrderConfirmation": {
          "type": "object",
          "description": "Information gathered on success purchase page.",
          "properties": {
            "orderReference": {
              "type": "string",
              "description": "Order reference grabbed from the page.",
              "example": "SUCCESS"
            },
            "message": {
              "type": "string",
              "description": "Message about successful purchase.",
              "example": "Your purchase was successful."
            },
            "price": {
              "$ref": "#/domains/Generic/types/Price",
              "description": "Price, if found on the successful purchase page."
            }
          },
          "additionalProperties": false,
          "required": [
            "orderReference"
          ]
        }
      },
      "errors": [
        {
          "code": "ProductOutOfStock",
          "category": "client",
          "description": "Product is out of stock."
        }
      ]
    },
    "AdJob": {
      "description": "Internal domain for testing platform features.",
      "private": false,
      "inputs": {
        "options": {
          "$ref": "#/domains/AdJob/types/Options",
          "description": "Used by service-api tests.",
          "default": {},
          "initial": true
        },
        "password": {
          "$ref": "#/domains/AdJob/types/SomethingPrivate",
          "description": "Private/PII/Confidential."
        }
      },
      "outputs": {
        "object": {
          "$ref": "#/domains/AdJob/types/Object"
        }
      },
      "types": {
        "Object": {
          "type": "object",
          "description": "An object of arbitrary structure."
        },
        "Options": {
          "type": "object",
          "description": "Flags for testing optional features.",
          "properties": {
            "flag": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "SomethingPrivate": {
          "type": "string",
          "description": "I contain some PII.",
          "pii": true,
          "example": "N/A"
        }
      },
      "errors": [
        {
          "code": "InternalError",
          "category": "server",
          "description": "AdJob error occurred"
        },
        {
          "code": "ClientError",
          "category": "client",
          "description": "Client caused error"
        }
      ]
    }
  }
}
