{
    "description": "Allows automating airplane tickets booking on airline websites and OTAs.",
    "private": false,
    "inputs": {
        "options": {
            "typeRef": "#/domains/FlightBooking/types/Options",
            "default": {},
            "initial": true
        },
        "url": {
            "typeRef": "#/domains/Generic/types/URL",
            "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
            "initial": true
        },
        "itinerary": {
            "typeRef": "#/domains/FlightBooking/types/Itinerary",
            "initial": true
        },
        "account": {
            "typeRef": "#/domains/Generic/types/Account",
            "initial": true
        },
        "passengers": {
            "typeRef": "#/domains/FlightBooking/types/Passengers",
            "initial": true
        },
        "payment": {
            "typeRef": "#/domains/Generic/types/Payment",
            "initial": true
        },
        "selectedOutboundFare": {
            "typeRef": "#/domains/FlightBooking/types/Fare",
            "description": "Requested when fare selection for outbound flight is required by website.<br/>At this point <code>availableOutboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available."
        },
        "selectedInboundFare": {
            "typeRef": "#/domains/FlightBooking/types/Fare",
            "description": "Requested when fare selection for inbound flight is required by website.<br/>At this point <code>availableInboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available."
        },
        "selectedSeats": {
            "typeRef": "#/domains/FlightBooking/types/SelectedSeatsStage",
            "staged": true
        },
        "panToken": {
            "typeRef": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        }
    },
    "outputs": {
        "availableOutboundFares": {
            "typeRef": "#/domains/FlightBooking/types/AvailableFares",
            "description": "Emitted when actual outbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "availableInboundFares": {
            "typeRef": "#/domains/FlightBooking/types/AvailableFares",
            "description": "Emitted when actual inbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "availableSeats": {
            "typeRef": "#/domains/FlightBooking/types/AvailableSeatsStage",
            "staged": true
        },
        "estimatedPrice": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "description": "Price shown by the website prior to requiring passenger information.<br/>On many flight booking websites, it is possible to view an estimated price without entering passenger details, provided that the deeplink works and goes past the home page, where the count of passengers and their ages are usually required. This estimated price is emitted when the automation reaches a page where passenger or billing information is required, as long as the price is displayed.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "priceBreakdown": {
            "typeRef": "#/domains/FlightBooking/types/PriceBreakdown",
            "description": "The list of price components, as found on the website."
        },
        "finalPrice": {
            "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
            "typeRef": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
            "typeRef": "#/domains/FlightBooking/types/BookingConfirmation"
        }
    },
    "types": {
        "Options": {
            "type": "object",
            "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
            "properties": {
                "seatSelection": {
                    "type": "boolean",
                    "description": "If <code>true</code>, automation will request <code>selectedSeats</code> for seat selection.",
                    "default": false
                }
            }
        },
        "Itinerary": {
            "type": "object",
            "description": "Information about flights and cabin class preference.",
            "properties": {
                "cabinClass": {
                    "$ref": "#/domains/FlightBooking/types/CabinClass",
                    "description": "Preferred cabin class, used on flight search forms."
                },
                "outbound": {
                    "$ref": "#/domains/FlightBooking/types/Flight",
                    "description": "Outbound flight specification."
                },
                "inbound": {
                    "$ref": "#/domains/FlightBooking/types/Flight",
                    "description": "Inbound (return) flight specification. If omitted, one-way flight booking flow is used."
                }
            },
            "required": [
                "cabinClass",
                "outbound"
            ],
            "additionalProperties": false
        },
        "Flight": {
            "type": "object",
            "description": "Outbound and inbound flights specification.",
            "properties": {
                "origin": { "$ref": "#/domains/FlightBooking/types/DatePlace" },
                "destination": { "$ref": "#/domains/FlightBooking/types/DatePlace" }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "CabinClass": {
            "type": "string",
            "enum": ["economy", "premium economy", "business", "first"]
        },
        "DatePlace": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string",
                    "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
                    "description": "Date and time of flight (airport local time).",
                    "example": "2018-02-02 19:40"
                },
                "airportCode": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "pattern": "^[A-Z]{3}$",
                    "description": "International Air Transport Association airport code.",
                    "example": "SFO"
                },
                "countryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Country code of airport.",
                    "example": "us"
                }
            },
            "required": [
                "dateTime",
                "airportCode"
            ],
            "additionalProperties": false
        },
        "Passengers": {
            "type": "array",
            "description": "An array with details for each passenger.",
            "pii": true,
            "minItems": 1,
            "maxItems": 9,
            "items": { "$ref": "#/domains/FlightBooking/types/Passenger" }
        },
        "Passenger": {
            "type": "object",
            "pii": true,
            "properties": {
                "title": {
                    "type": "string",
                    "enum": [
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "First name(s) or given name(s), as specified in passport or travel document.",
                    "example": "Bob"
                },
                "middleName": {
                    "type": "string",
                    "default": "",
                    "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name or surname, as specified in passport or travel document.",
                    "example": "Smith"
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "Passenger's date of birth in YYYY-MM-DD format.",
                    "format": "date",
                    "example": "1976-01-27"
                },
                "addAdditionalLuggage": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3,
                    "default": 0
                },
                "document": {
                    "$ref": "#/domains/FlightBooking/types/PassengerDocument"
                }
            },
            "required": [
                "title",
                "firstName",
                "lastName",
                "dateOfBirth",
                "addAdditionalLuggage"
            ],
            "additionalProperties": false
        },
        "PassengerDocument": {
            "type": "object",
            "description": "Passenger ID (passport or other travel document). Automation may fail if this information is required by website, but not provided by Client.",
            "pii": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Document type.",
                    "enum": ["passport"]
                },
                "number": {
                    "type": "string",
                    "description": "Document number.",
                    "example": "75 127001"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2008-01-01"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2028-01-01"
                },
                "issueCountryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Code of country where the document was issued."
                }
            },
            "required": [
                "type",
                "number",
                "expirationDate",
                "issueCountryCode"
            ],
            "additionalProperties": false
        },
        "AvailableFares": {
            "type": "array",
            "description": "A list of available fares found on the website.",
            "minItems": 1,
            "maxItems": 9,
            "items": { "$ref": "#/domains/FlightBooking/types/Fare" }
        },
        "Fare": {
            "type": "object",
            "description": "Flight fare information.",
            "additionalProperties": false,
            "properties": {
                "cabinClass": { "$ref": "#/domains/FlightBooking/types/CabinClass" },
                "fareName": {
                    "type": "string",
                    "description": "Fare marketing name as provided by airline.",
                    "example": "Business Flex"
                },
                "price": { "$ref": "#/domains/Generic/types/Price" }
            },
            "required": [
                "fareName",
                "cabinClass",
                "price"
            ]
        },
        "SelectedSeatsStage": {
            "type": "object",
            "description": "Seat selection stage. Each stage corresponds to a particular flight leg where seat selection is supported. Client provides each stage separately after reading corresponding seat availability information from <code>availableSeats</code> output.",
            "properties": {
                "seatNumbers": {
                    "type": "array",
                    "description": "An array of <code>seatNumber</code> selected per each passenger.<br/>Order must match the order of <code>passengers</code> array.",
                    "minItems": 1,
                    "maxItems": 9,
                    "items": { "$ref": "#/domains/FlightBooking/types/SeatNumber" }
                }
            },
            "required": [
                "seatNumbers"
            ],
            "additionalProperties": false
        },
        "AvailableSeatsStage": {
            "type": "object",
            "description": "Seat availability information for each seat selection stage. Each stage corresponds to a particular flight leg where seat selection is supported. Each stage is emitted separately when automation reaches corresponding seat selection screen.",
            "properties": {
                "leg": {
                    "type": "string",
                    "description": "Flight leg name as displayed on website.",
                    "example": "LTN to ZRH, Wed 7th Mar"
                },
                "seats": {
                    "type": "array",
                    "items": { "$ref": "#/domains/FlightBooking/types/Seat" }
                }
            },
            "required": [
                "leg",
                "seats"
            ],
            "additionalProperties": false
        },
        "SeatNumber": {
            "type": "string",
            "description": "Seat number as extracted from website.",
            "example": "7A"
        },
        "Seat": {
            "type": "object",
            "description": "Seat metadata.",
            "properties": {
                "seatNumber": {
                    "$ref": "#/domains/FlightBooking/types/SeatNumber"
                },
                "available": {
                    "type": "boolean",
                    "description": "<code>true</code> if website allows selecting this seat, <code>false</code> otherwise."
                },
                "restricted": {
                    "type": "boolean",
                    "description": "<code>true</code> if seat has restrictions for certain groups of passengers."
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Seat price, if such information is available."
                }
            },
            "required": [
                "seatNumber",
                "available"
            ],
            "additionalProperties": false
        },
        "BookingConfirmation": {
            "type": "object",
            "description": "Information gathered on \"Booking success\" page.",
            "properties": {
                "bookingReference": {
                    "type": "string",
                    "description": "Booking reference grabbed from the page.",
                    "example": "RL2XYZ"
                },
                "message": {
                    "type": "string",
                    "description": "Message about successful booking.",
                    "example": "Your booking was successful."
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Price, if found on the successful booking page."
                }
            },
            "additionalProperties": false,
            "required": [
                "bookingReference"
            ]
        },
        "PriceBreakdown": {
            "type": "array",
            "description": "The list of price components, as found on the website.",
            "minItems": 1,
            "items": { "$ref": "#/domains/FlightBooking/types/PriceBreakdownItem" }
        },
        "PriceBreakdownItem": {
            "type": "object",
            "description": "A component of the price breakdown.",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The description of an item on the price breakdown list, as found on the website.",
                    "example": "Credit card charge"
                },
                "price": { "typeRef": "#/domains/Generic/types/Price" }
            },
            "required": [
                "text",
                "price"
            ]
        }
    },
    "errors": [
        {
            "code": "PassengerDetailsInvalid",
            "category": "client",
            "description":"Passenger details invalid"
        },
        {
            "code": "OutboundFlightDateInvalid",
            "category": "client",
            "description": "Outbound flight date is not accepted by the website",
            "example": "Selected date is too close"
        },
        {
            "code": "InboundFlightDateInvalid",
            "category": "client",
            "description": "Inbound flight date is not accepted by the website",
            "example": "Selected date is too close"
        },
        {
            "code": "DateOfBirthInvalid",
            "category": "client",
            "description": "Date of birth is not accepted by the website",
            "example": "Child must be younger than 12"
        },
        {
            "code": "DocumentIssueDateInvalid",
            "category": "client",
            "description": "Document issue date is not accepted by the website",
            "example": "The issue date cannot be after today's date"
        },
        {
            "code": "DocumentExpiryDateInvalid",
            "category": "client",
            "description": "Document expiration date is not accepted by the website",
            "example": "Document should be valid for more than 3 months"
        },
        {
            "code": "OutboundFlightNotAvailable",
            "category": "client",
            "description": "Outbound flight is not found",
            "example": "Flight is not available on given date"
        },
        {
            "code": "InboundFlightNotAvailable",
            "category": "client",
            "description": "Inbound flight is not found",
            "example": "Flight is not available on given date"
        },
        {
            "code": "FlightNotCombinable",
            "category": "client",
            "description": "Flight not combinable"
        },
        {
            "code": "OriginAirportNotFound",
            "category": "client",
            "description": "Airport is not found with given airport code"
        },
        {
            "code": "DestinationAirportNotFound",
            "category": "client",
            "description": "Airport is not found with given airport code"
        },
        {
            "code": "CabinClassNotFound",
            "category": "client",
            "description": "Given cabin class is not found on the website"
        },
        {
            "code": "OutboundFareNotFound",
            "category": "client",
            "description": "Given outbound fare does not match one of the options we are expecting"
        },
        {
            "code": "InboundFareNotFound",
            "category": "client",
            "description": "Given inbound fare does not match one of the options we are expecting"
        },
        {
            "code": "SeatNotFound",
            "category": "client",
            "description": "Given seat does not match one of the options we are expecting"
        },
        {
            "code": "SeatSelectionNotAvailable",
            "category": "client",
            "description": "Client asked for seat selection but it's not available for the website"
        },
        {
            "code": "LuggageCannotBeAdded",
            "category": "client",
            "description": "Luggage cannot be added"
        },
        {
            "code": "PassengerDocumentRequired",
            "category": "client",
            "description": "Passenger document (passport or other travel document) is required by the website"
        }
    ]
}
