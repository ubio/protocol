{
    "description": "Allows automating airplane tickets booking on airline websites and OTAs.",
    "private": false,
    "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
    },
    "dataExtractionDomainId": "FlightBookingExtraction",
    "inputs": {
        "options": {
            "typeRef": "#/domains/FlightBooking/types/Options",
            "default": {},
            "initial": true
        },
        "url": {
            "typeRef": "#/domains/Generic/types/URL",
            "description": "Website entry point. Should be a deep link to either flight page or flight selection page.",
            "initial": true
        },
        "search": {
            "typeRef": "#/domains/FlightBooking/types/Search",
            "initial": true
        },
        "selectedOutboundFlight": {
            "typeRef": "#/domains/FlightBooking/types/Flight",
            "sourceOutputKey": "availableOutboundFlights",
            "inputMethod": "SelectOne"
        },
        "selectedInboundFlight": {
            "typeRef": "#/domains/FlightBooking/types/Flight",
            "sourceOutputKey": "availableInboundFlights",
            "inputMethod": "SelectOne"
        },
        "itinerary": {
            "typeRef": "#/domains/FlightBooking/types/Itinerary",
            "description": "Deprecated. See <a href=\"#search\">/search</a> and <a href=\"#selectedOutboundFlight\">/selectedOutboundFlight</a>.",
            "deprecated": true
        },
        "account": {
            "typeRef": "#/domains/Generic/types/Account"
        },
        "accountVerification": {
            "typeRef": "#/domains/FlightBooking/types/VerificationString"
        },
        "deviceVerification": {
            "typeRef": "#/domains/FlightBooking/types/VerificationString"
        },
        "passengers": {
            "typeRef": "#/domains/FlightBooking/types/Passengers",
            "canonical": [
                "/0/firstName",
                "/0/lastName",
                "/0/dateOfBirth"
            ]
        },
        "additionalLuggage": {
            "typeRef": "#/domains/FlightBooking/types/PassengersAdditionalLuggage",
            "description": "A list of additional luggage to be purchased per passenger. The cartinality of this array must match the one of passengers."
        },
        "payment": {
            "typeRef": "#/domains/Generic/types/Payment"
        },
        "selectedOutboundFare": {
            "typeRef": "#/domains/FlightBooking/types/Fare",
            "description": "Requested when fare selection for outbound flight is required by website.<br/>At this point <code>availableOutboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available.",
            "sourceOutputKey": "availableOutboundFares",
            "inputMethod": "SelectOne"
        },
        "selectedInboundFare": {
            "typeRef": "#/domains/FlightBooking/types/Fare",
            "description": "Requested when fare selection for inbound flight is required by website.<br/>At this point <code>availableInboundFares</code> output should contain information about available fares.<br/>Note: on deep links with pre-selected flight this input is not required.<br/>Automation may fail if incorrect fare is specified, or if fare is no longer available.",
            "sourceOutputKey": "availableInboundFares",
            "inputMethod": "SelectOne"
        },
        "selectedSeats": {
            "typeRef": "#/domains/FlightBooking/types/SelectedSegmentSeats",
            "sourceOutputKey": "availableSeats",
            "inputMethod": "SeatSelection",
            "dynamic": true
        },
        "voucher": {
            "typeRef": "#/domains/FlightBooking/types/Voucher",
            "description": "Discount voucher."
        },
        "panToken": {
            "typeRef": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "sourceOutputKey": "finalPrice",
            "inputMethod": "Consent",
            "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided."
        },
        "cancelBooking": {
            "typeRef": "#/domains/FlightBooking/types/Boolean"
        }
    },
    "outputs": {
        "cookies": {
            "typeRef": "#/domains/Generic/types/Cookies"
        },
        "availableOutboundFlights": {
            "typeRef": "#/domains/FlightBooking/types/Flights"
        },
        "availableInboundFlights": {
            "typeRef": "#/domains/FlightBooking/types/Flights"
        },
        "availableOutboundFares": {
            "typeRef": "#/domains/FlightBooking/types/AvailableFares",
            "description": "Emitted when actual outbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "availableInboundFares": {
            "typeRef": "#/domains/FlightBooking/types/AvailableFares",
            "description": "Emitted when actual inbound fares information is collected.<br/>Note: on deep links with pre-selected flight this output will not be provided."
        },
        "selectableLuggage": {
            "typeRef": "#/domains/FlightBooking/types/ListOfLuggageWithPrice",
            "description": "The luggage which can be selected for the passengers."
        },
        "availableSeats": {
            "typeRef": "#/domains/FlightBooking/types/AvailableSegmentSeats",
            "dynamic": true
        },
        "availableFrequentFlyerProgrammes": {
            "typeRef": "#/domains/FlightBooking/types/AvailableFrequentFlyerProgrammes",
            "description": "Where available, the list of frequent flyer programmes available on the website."
        },
        "fareRules": {
            "typeRef": "#/domains/Generic/types/StructuredTextItem",
            "description": "Emitted when fare rules are presented."
        },
        "conditionsOfCarriage": {
            "typeRef": "#/domains/Generic/types/StructuredTextItem",
            "description": "Emitted when conditions of carriage is presented."
        },
        "bookingTermsAndConditions": {
            "typeRef": "#/domains/Generic/types/StructuredTextItem",
            "description": "Emitted when booking T&Cs are presented."
        },
        "privacyPolicy": {
            "typeRef": "#/domains/Generic/types/StructuredTextItem",
            "description": "Emitted when the privacy policy is presented."
        },
        "voucherDetails": {
            "typeRef": "#/domains/FlightBooking/types/VoucherDetails",
            "description": "Voucher details"
        },
        "estimatedPrice": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "description": "Price shown by the website prior to requiring passenger information.<br/>On many flight booking websites, it is possible to view an estimated price without entering passenger details, provided that the deeplink works and goes past the home page, where the count of passengers and their ages are usually required. This estimated price is emitted when the automation reaches a page where passenger or billing information is required, as long as the price is displayed.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "priceBreakdown": {
            "typeRef": "#/domains/FlightBooking/types/PriceBreakdown",
            "description": "The list of price components, as found on the website."
        },
        "isPromoCodeApplied": {
            "typeRef": "#/domains/FlightBooking/types/Boolean"
        },
        "estimatedPriceBreakdown": {
            "typeRef": "#/domains/FlightBooking/types/PriceBreakdown",
            "description": "The list of estimated price components, as found on the website."
        },
        "finalPrice": {
            "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
            "typeRef": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
            "typeRef": "#/domains/FlightBooking/types/BookingConfirmation"
        }
    },
    "types": {
        "Options": {
            "type": "object",
            "description": "Flags for enabling optional automation features like seat selection. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
            "properties": {
                "selectCheapestFare": {
                    "type": "boolean",
                    "description": "If <code>true</code>, automation will select the cheapest fare without requesting or using selected*boundFare inputs.",
                    "default": false
                },
                "voucher": {
                    "type": "boolean",
                    "description": "If <code>true</code>, automation will request the voucher input before payment.",
                    "default": false
                },
                "seatSelection": {
                    "type": "boolean",
                    "description": "If <code>true</code>, automation will request <code>selectedSeats</code> for seat selection.",
                    "default": false
                },
                "lhBookingRef": {
                    "type": "string"
                },
                "clientReference": {
                    "type": "string"
                },
                "priceCheck": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Itinerary": {
            "type": "object",
            "description": "Deprecated. See <a href=\"#Search\">Search</a> and <a href=\"#FlightSearch\">FlightSearch</a> instead.<br/>Information about flights and cabin class preference.",
            "deprecated": true,
            "properties": {
                "cabinClass": {
                    "$ref": "#/domains/FlightBooking/types/CabinClass",
                    "description": "Preferred cabin class, used on flight search forms."
                },
                "outbound": {
                    "$ref": "#/domains/FlightBooking/types/Flight",
                    "description": "Outbound flight specification."
                },
                "inbound": {
                    "$ref": "#/domains/FlightBooking/types/Flight",
                    "description": "Inbound (return) flight specification. If omitted, one-way flight booking flow is used."
                }
            },
            "required": [
                "cabinClass",
                "outbound"
            ],
            "additionalProperties": false
        },
        "Search": {
            "type": "object",
            "description": "Information about flights and cabin class preference.",
            "properties": {
                "cabinClass": {
                    "$ref": "#/domains/FlightBooking/types/CabinClass",
                    "description": "Preferred cabin class, used on flight search forms."
                },
                "outbound": {
                    "$ref": "#/domains/FlightBooking/types/FlightSearch",
                    "description": "Outbound flight specification."
                },
                "inbound": {
                    "$ref": "#/domains/FlightBooking/types/FlightSearch",
                    "description": "Inbound (return) flight specification. If omitted, one-way flight booking flow is used."
                },
                "passengerAges": {
                    "$ref": "#/domains/Generic/types/Ages",
                    "description": "Ages of all passengers.",
                    "example": [34, 31, 9]
                },
                "promoCode": {
                    "type": "string"
                }
            },
            "required": [
                "cabinClass",
                "outbound",
                "passengerAges"
            ],
            "additionalProperties": false
        },
        "FlightSearch": {
            "type": "object",
            "description": "Outbound and inbound flights specification.",
            "properties": {
                "origin": { "$ref": "#/domains/FlightBooking/types/DateAirport" },
                "destination": { "$ref": "#/domains/FlightBooking/types/DateAirport" }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "Flights": {
            "type": "array",
            "description": "An array with details for each flight.",
            "items": { "$ref": "#/domains/FlightBooking/types/Flight" },
            "minItems": 1
        },
        "Flight": {
            "type": "object",
            "description": "Outbound and inbound flights specification.",
            "properties": {
                "origin": { "$ref": "#/domains/FlightBooking/types/DateTimeAirport" },
                "destination": { "$ref": "#/domains/FlightBooking/types/DateTimeAirport" }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "CabinClass": {
            "type": "string",
            "enum": ["economy", "premium economy", "business", "first"]
        },
        "DateAirport": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of flight (airport local date).",
                    "example": "2019-01-01"
                },
                "airportCode": {
                    "$ref": "#/domains/FlightBooking/types/AirportCode"
                },
                "countryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Country code of airport.",
                    "example": "us"
                }
            },
            "required": [
                "date",
                "airportCode"
            ],
            "additionalProperties": false
        },
        "DateTimeAirport": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string",
                    "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
                    "description": "Date and time of flight (airport local time).",
                    "example": "2018-02-02 19:40"
                },
                "airportCode": {
                    "$ref": "#/domains/FlightBooking/types/AirportCode"
                },
                "countryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Country code of airport.",
                    "example": "us"
                }
            },
            "required": [
                "dateTime",
                "airportCode"
            ],
            "additionalProperties": false
        },
        "AirportCode": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Z]{3}$",
            "description": "International Air Transport Association airport code.",
            "example": "SFO"
        },
        "Passengers": {
            "type": "array",
            "description": "An array with details for each passenger.",
            "pii": true,
            "minItems": 1,
            "maxItems": 9,
            "items": { "$ref": "#/domains/FlightBooking/types/Passenger" }
        },
        "Passenger": {
            "type": "object",
            "pii": true,
            "properties": {
                "title": {
                    "type": "string",
                    "enum": [
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "First name(s) or given name(s), as specified in passport or travel document.",
                    "example": "Bob"
                },
                "middleName": {
                    "type": "string",
                    "default": "",
                    "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name or surname, as specified in passport or travel document.",
                    "example": "Smith"
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "Passenger's date of birth in YYYY-MM-DD format.",
                    "format": "date",
                    "example": "1976-01-27"
                },
                "addAdditionalLuggage": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3
                },
                "document": {
                    "$ref": "#/domains/Generic/types/IdentityDocument"
                },
                "frequentFlyer": {
                    "$ref": "#/domains/FlightBooking/types/PassengerFrequentFlyer"
                }
            },
            "required": [
                "title",
                "firstName",
                "lastName",
                "dateOfBirth"
            ],
            "additionalProperties": false
        },
        "PassengersAdditionalLuggage": {
            "type": "array",
            "description": "The cardinality of this array must match that of the passengers. A mismatch leads to the input being invalidated.",
            "minItems": 1,
            "maxItems": 9,
            "items": {
                "type": "array",
                "items": { "$ref": "#/domains/FlightBooking/types/LuggageWithWeight" }
            }
        },
        "AvailableFares": {
            "type": "array",
            "description": "A list of available fares found on the website.",
            "minItems": 1,
            "maxItems": 15,
            "items": { "$ref": "#/domains/FlightBooking/types/Fare" }
        },
        "Fare": {
            "type": "object",
            "description": "Flight fare information.",
            "additionalProperties": false,
            "properties": {
                "cabinClass": { "$ref": "#/domains/FlightBooking/types/CabinClass" },
                "fareName": {
                    "type": "string",
                    "description": "Fare marketing name as provided by airline.",
                    "example": "Business Flex"
                },
                "price": { "$ref": "#/domains/Generic/types/Price" },
                "services": {
                    "type": "array",
                    "items": { "$ref": "#/domains/Generic/types/StructuredTextItem" }
                },
                "luggage": {
                    "type": "array",
                    "description": "A list of luggage with price.",
                    "items": { "$ref": "#/domains/FlightBooking/types/LuggageBasic" }
                }
            },
            "required": [
                "fareName",
                "cabinClass",
                "price"
            ]
        },
        "LuggageBasic": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [ "under-seat", "cabin", "checked" ],
                    "example": "economy"
                },
                "count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "example": 1
                },
                "weight": {
                    "type": "string",
                    "example": "10kg"
                },
                "size": {
                    "type": "string",
                    "example": "40cm x 20cm x 25cm"
                }
            },
            "required": [
                "type",
                "count"
            ]
        },
        "LuggageWithWeight": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [ "under-seat", "cabin", "checked" ],
                    "example": "economy"
                },
                "count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "example": 1
                },
                "weight": {
                    "type": "string",
                    "example": "10kg"
                },
                "size": {
                    "type": "string",
                    "example": "40cm x 20cm x 25cm"
                }
            },
            "required": [
                "type",
                "count",
                "weight"
            ]
        },
        "LuggageWithPrice": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [ "under-seat", "cabin", "checked" ],
                    "example": "economy"
                },
                "weight": {
                    "type": "string",
                    "example": "10kg"
                },
                "size": {
                    "type": "string",
                    "example": "40cm x 20cm x 25cm"
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Luggage price. This is the cost of luggage"
                },
                "maxPerPassenger": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "example": 1
                },
                "maxPerGroup": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 20,
                    "example": 1
                }
            },
            "required": [
                "type",
                "price",
                "weight"
            ]
        },
        "ListOfLuggageWithWeight": {
            "type": "array",
            "description": "A list of luggage with weight.",
            "items": { "$ref": "#/domains/FlightBooking/types/LuggageWithWeight" }
        },
        "ListOfLuggageWithPrice": {
            "type": "array",
            "description": "A list of luggage with price.",
            "items": { "$ref": "#/domains/FlightBooking/types/LuggageWithPrice" }
        },
        "SelectedSegmentSeats": {
            "type": "object",
            "description": "Selected seats information.",
            "properties": {
                "segment": {
                    "type": "string",
                    "description": "Flight segments name as displayed on website.",
                    "pattern": "^[A-Z]{3} to [A-Z]{3}$",
                    "example": "LTN to ZRH"
                },
                "seats": {
                    "type": "array",
                    "items": { "$ref": "#/domains/FlightBooking/types/SeatNumber" }
                }
            },
            "required": [
                "seats"
            ],
            "additionalProperties": false
        },
        "AvailableSegmentSeats": {
            "type": "object",
            "description": "Seat availability information.",
            "properties": {
                "segment": {
                    "type": "string",
                    "description": "Flight leg name as displayed on website.",
                    "example": "LTN to ZRH, Wed 7th Mar"
                },
                "seats": {
                    "type": "array",
                    "items": { "$ref": "#/domains/FlightBooking/types/Seat" }
                }
            },
            "required": [
                "segment",
                "seats"
            ],
            "additionalProperties": false
        },
        "Seat": {
            "type": "object",
            "description": "Seat metadata.",
            "properties": {
                "seatNumber": {
                    "$ref": "#/domains/FlightBooking/types/SeatNumber"
                },
                "available": {
                    "type": "boolean",
                    "description": "<code>true</code> if website allows selecting this seat, <code>false</code> otherwise."
                },
                "restricted": {
                    "type": "boolean",
                    "description": "<code>true</code> if seat has restrictions for certain groups of passengers."
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Seat price, if such information is available."
                }
            },
            "required": [
                "seatNumber",
                "available"
            ],
            "additionalProperties": false
        },
        "SeatNumber": {
            "type": "string",
            "description": "Seat number as extracted from website.",
            "example": "7A"
        },
        "BookingConfirmation": {
            "type": "object",
            "description": "Information gathered on \"Booking success\" page.",
            "properties": {
                "bookingReference": {
                    "type": "string",
                    "description": "Booking reference grabbed from the page.",
                    "example": "RL2XYZ"
                },
                "message": {
                    "type": "string",
                    "description": "Message about successful booking.",
                    "example": "Your booking was successful."
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Price, if found on the successful booking page."
                }
            },
            "additionalProperties": false,
            "required": [
                "bookingReference"
            ]
        },
        "PriceBreakdown": {
            "type": "array",
            "description": "The list of price components, as found on the website.",
            "minItems": 1,
            "items": { "$ref": "#/domains/FlightBooking/types/PriceBreakdownItem" }
        },
        "PriceBreakdownItem": {
            "type": "object",
            "description": "A component of the price breakdown.",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The description of an item on the price breakdown list, as found on the website.",
                    "example": "Credit card charge"
                },
                "price": { "$ref": "#/domains/Generic/types/Price" }
            },
            "required": [
                "text",
                "price"
            ]
        },
        "PassengerFrequentFlyer": {
            "type": "object",
            "description": "Frequent flyer identification information",
            "properties": {
                "number": {
                    "type": "string",
                    "description": "Frequent flyer number",
                    "example": "abc123456789"
                },
                "airlineName": {
                    "type": "string",
                    "description": "Complete English name of the airline",
                    "example": "British Airways"
                },
                "programName": {
                    "type": "string",
                    "description": "Branding name of the frequent flyer programme, as defined by the airline",
                    "example": "Avios Travel Rewards Programme"
                }
            },
            "required": [
                "number"
            ]
        },
        "AvailableFrequentFlyerProgrammes": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["Miles & More", "Frequent Flyer Points Plus"]
        },
        "Voucher": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string",
                    "description": "Voucher number",
                    "example": "abc123456789"
                }
            },
            "required": [
                "number"
            ],
            "additionalProperties": false
        },
        "VoucherDetails": {
            "type": "object",
            "properties": {
                "overallValue": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Total amount the voucher is worth."
                },
                "deductedValue": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Amount the voucher deducts from the price."
                }
            },
            "required": [
                "deductedValue"
            ],
            "additionalProperties": false
        },
        "VerificationString": {
            "type": "string",
            "description": "Account verification challenge, usually a code or a link.",
            "example": "ABC123"
        },
        "Boolean": {
            "type": "boolean",
            "example": false
        }
    },
    "errors": [
	    {
            "code": "PassengerDetailsInvalid",
            "category": "client",
            "description": "Passenger details invalid"
        },
        {
            "code": "OutboundFlightDateInvalid",
            "category": "client",
            "description": "Outbound flight date is not accepted by the website",
            "example": "Selected date is too close"
        },
        {
            "code": "InboundFlightDateInvalid",
            "category": "client",
            "description": "Inbound flight date is not accepted by the website",
            "example": "Selected date is too close"
        },
        {
            "code": "DateOfBirthInvalid",
            "category": "client",
            "description": "Date of birth is not accepted by the website",
            "example": "Child must be younger than 12"
        },
        {
            "code": "DocumentIssueDateInvalid",
            "category": "client",
            "description": "Document issue date is not accepted by the website",
            "example": "The issue date cannot be after today's date"
        },
        {
            "code": "DocumentExpiryDateInvalid",
            "category": "client",
            "description": "Document expiration date is not accepted by the website",
            "example": "Document should be valid for more than 3 months"
        },
        {
            "code": "OutboundFlightNotAvailable",
            "category": "client",
            "description": "Outbound flight is not found",
            "example": "Flight is not available on given date"
        },
        {
            "code": "InboundFlightNotAvailable",
            "category": "client",
            "description": "Inbound flight is not found",
            "example": "Flight is not available on given date"
        },
        {
            "code": "OriginAirportNotFound",
            "category": "client",
            "description": "Airport is not found with given airport code"
        },
        {
            "code": "DestinationAirportNotFound",
            "category": "client",
            "description": "Airport is not found with given airport code"
        },
        {
            "code": "CabinClassNotFound",
            "category": "client",
            "description": "Given cabin class is not found on the website"
        },
        {
            "code": "OutboundFareNotFound",
            "category": "client",
            "description": "Given outbound fare does not match one of the options we are expecting"
        },
        {
            "code": "InboundFareNotFound",
            "category": "client",
            "description": "Given inbound fare does not match one of the options we are expecting"
        },
        {
            "code": "SeatNotFound",
            "category": "client",
            "description": "Given seat does not match one of the options we are expecting"
        },
        {
            "code": "SeatSelectionNotAvailable",
            "category": "client",
            "description": "Client asked for seat selection but it's not available for the website"
        },
        {
            "code": "LoadingFailed",
            "category": "client",
            "description": "A website issue in which the page gets stuck in infinite loading."
        },
        {
            "code": "LuggageCannotBeAdded",
            "category": "client",
            "description": "Luggage cannot be added",
            "example": "Cannot add an additional luggage for selected fare."
        },
        {
            "code": "PassengerDocumentRequired",
            "category": "client",
            "description": "Passenger document (passport or other travel document) is required by the website"
        },
        {
            "code": "DuplicateBooking",
            "category": "client",
            "description": "The website claims this is a duplicate booking attempt."
        },
        {
            "code": "VoucherDetailsInvalid",
            "category": "client",
            "description": "The website claims this voucher's details are not valid (number or name mismatch)."
        },
        {
            "code": "PromoCodeInvalid",
            "category": "client",
            "description": "The promo code you entered is not valid or mistyped."
        },
        {
            "code": "PriceCheck",
            "category": "client",
            "description": "This was a price check, not a booking attempt."
        }
    ]
}
