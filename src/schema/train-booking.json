{
    "description": "Automates bus and chack tickets booking on websites.",
    "private": false,
    "successCode": {
        "outputKey": "bookingConfirmation",
        "valuePath": "/bookingReference"
    },
    "inputs": {
        "url": {
            "typeRef": "#/domains/Generic/types/URL",
            "description": "Website entry point. Should be a deep link to one of the checkout flow pages."
        },
        "search": {
            "typeRef": "#/domains/TrainBooking/types/Search",
            "initial": true
        },
        "selectedOutboundTrip": {
            "typeRef": "#/domains/TrainBooking/types/Trip",
            "sourceOutputKey": "availableOutboundTrips",
            "inputMethod": "SelectOne"
        },
        "selectedInboundTrip": {
            "typeRef": "#/domains/TrainBooking/types/Trip",
            "sourceOutputKey": "availableInboundTrips",
            "inputMethod": "SelectOne"
        },
        "selectedOutboundJourney": {
            "typeRef": "#/domains/TrainBooking/types/Journey",
            "sourceOutputKey": "availableOutboundJourneys",
            "inputMethod": "SelectOne"
        },
        "selectedInboundJourney": {
            "typeRef": "#/domains/TrainBooking/types/Journey",
            "sourceOutputKey": "availableInboundJourneys",
            "inputMethod": "SelectOne"
        },
        "selectedOutboundFare": {
            "typeRef": "#/domains/TrainBooking/types/Fare",
            "sourceOutputKey": "availableOutboundFares",
            "inputMethod": "SelectOne"
        },
        "selectedInboundFare": {
            "typeRef": "#/domains/TrainBooking/types/Fare",
            "sourceOutputKey": "availableInboundFares",
            "inputMethod": "SelectOne"
        },
        "selectedDelivery": {
            "typeRef": "#/domains/TrainBooking/types/Delivery",
            "description": "Requested when delivery choices are required by website.<br/>At this point <code>availableDeliveries</code> output should contain information about available delivery options.<br/>Note: on deep links with pre-selected delivery options, this input might not required.<br/>Automation may fail if the incorrect option is specified, or if the delivery option is no longer available, for example, for a late or same day booking.",
            "sourceOutputKey": "availableDeliveries",
            "inputMethod": "SelectOne"
        },
        "account": {
            "typeRef": "#/domains/TrainBooking/types/Account",
            "canonical": [
                "/email"
            ]
        },
        "passengers": {
            "typeRef": "#/domains/TrainBooking/types/Passengers"
        },
        "discount": {
            "typeRef": "#/domains/TrainBooking/types/Discount"
        },
        "payment": {
            "typeRef": "#/domains/Generic/types/Payment"
        },
        "panToken": {
            "typeRef": "#/domains/Generic/types/PanToken"
        },
        "finalPriceConsent": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "description": "Client's consent for final price, should exactly match the <code>finalPrice</code> object from output.<br/>Automation will not proceed with placing order until the consent is provided.",
            "sourceOutputKey": "finalPrice",
            "inputMethod": "Consent"
        },
        "smsConfirmation": {
            "typeRef": "#/domains/TrainBooking/types/VerificationCode",
            "description": "An SMS confirmation for authorizing the payment. Occurs in some of the transactions in place of 3dsecure."
        },
        "options": {
            "typeRef": "#/domains/TrainBooking/types/Options",
            "default": {},
            "initial": true
        }
    },
    "outputs": {
        "availableOutboundTrips": {
            "typeRef": "#/domains/TrainBooking/types/Trips"
        },
        "availableInboundTrips": {
            "typeRef": "#/domains/TrainBooking/types/Trips"
        },
        "availableOutboundJourneys": {
            "typeRef": "#/domains/TrainBooking/types/Journeys"
        },
        "availableInboundJourneys": {
            "typeRef": "#/domains/TrainBooking/types/Journeys"
        },
        "availableOutboundFares": {
            "typeRef": "#/domains/TrainBooking/types/AvailableFares"
        },
        "availableInboundFares": {
            "typeRef": "#/domains/TrainBooking/types/AvailableFares"
        },
        "availableDeliveries": {
            "typeRef": "#/domains/TrainBooking/types/AvailableDeliveriesOrNull",
            "description": "Emitted when actual delivery information is collected.<br/>Note: on deep links with pre-selected delivery, this output may not be provided."
        },
        "estimatedPrice": {
            "typeRef": "#/domains/Generic/types/PriceConsent",
            "description": "Price shown by the website prior to requiring passenger information.<br/>This is likely not the final price, as flight ancilliaries may be added as requested, or additional credit card charges may be applied."
        },
        "finalPrice": {
            "description": "Emitted immediately before placing order, when final price is available.<br/>Automation will request <code>finalPriceConsent</code> input which should match this object.",
            "typeRef": "#/domains/Generic/types/PriceConsent"
        },
        "bookingConfirmation": {
            "typeRef": "#/domains/TrainBooking/types/BookingConfirmation"
        }
    },
    "types": {
        "Search": {
            "type": "object",
            "description": "Information about the trip.",
            "properties": {
                "cabinClass": {
                    "description": "Preferred cabin class, used on trip search forms.",
                    "type": "string",
                    "enum": ["second", "first"]
                },
                "outbound": {
                    "$ref": "#/domains/TrainBooking/types/TrainSearch",
                    "description": "Outbound trip specification."
                },
                "inbound": {
                    "$ref": "#/domains/TrainBooking/types/TrainSearch",
                    "description": "Inbound (return) trip specification. If omitted, one-way trip booking flow is used."
                },
                "passengerAges": {
                    "$ref": "#/domains/Generic/types/Ages",
                    "description": "Ages of all passengers.",
                    "example": [34, 31, 9]
                }
            },
            "required": [
                "outbound",
                "passengerAges"
            ],
            "additionalProperties": false
        },
        "TrainSearch": {
            "type": "object",
            "description": "Outbound and inbound trips specification.",
            "properties": {
                "origin": { "$ref": "#/domains/TrainBooking/types/DateTerminal" },
                "destination": { "$ref": "#/domains/TrainBooking/types/DateTerminal" }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "DateTerminal": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of trip (terminal local date).",
                    "example": "2019-01-01"
                },
                "time": {
                    "type": "string",
                    "pattern": "^[012][0-9]:[0-5][0-9]$",
                    "description": "Selected time for availability search.",
                    "example": "08:00"
                },
                "terminalLocality": {
                    "type": "string",
                    "description": "Terminal locality, usually city name.",
                    "example": "London"
                },
                "terminalName": {
                    "type": "string",
                    "description": "Name of the terminal as found on the booking website.",
                    "example": "London Liverpool Street"
                },
                "countryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Country code of the terminal.",
                    "example": "gb"
                }
            },
            "required": [
                "date",
                "time",
                "terminalName"
            ],
            "additionalProperties": false
        },
        "Trips": {
            "type": "array",
            "description": "An array of trips.",
            "minItems": 1,
            "items": { "$ref": "#/domains/TrainBooking/types/Trip" }
        },
        "Trip": {
            "type": "object",
            "description": "Outbound and inbound specification.",
            "properties": {
                "origin": {"$ref": "#/domains/TrainBooking/types/DateTimeTerminal"},
                "destination": {"$ref": "#/domains/TrainBooking/types/DateTimeTerminal"},
                "connectionsCount": {
                    "type": "integer"
                },
                "lowestPrice": {
                    "type": "object",
                    "description": "'Start from' price for each class.",
                    "properties": {
                        "secondClass": {
                            "$ref": "#/domains/Generic/types/Price"
                        },
                        "firstClass": {
                            "$ref": "#/domains/Generic/types/Price"
                        }
                    },
                    "required": [],
                    "additionalProperties": false
                }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "Journeys": {
            "type": "array",
            "description": "An array of journeys.",
            "minItems": 1,
            "items": { "$ref": "#/domains/TrainBooking/types/Journey" }
        },
        "Journey": {
            "type": "object",
            "description": "Outbound and inbound specification.",
            "properties": {
                "segments": {
                    "type": "array",
                    "description": "List of change stations names.",
                    "items": { "$ref": "#/domains/TrainBooking/types/Segment" }
                },
                "origin": { "$ref": "#/domains/TrainBooking/types/DateTimeTerminal" },
                "destination": { "$ref": "#/domains/TrainBooking/types/DateTimeTerminal" },
                "connectionsCount": {
                    "type": "integer"
                },
                "fares": { "$ref": "#/domains/TrainBooking/types/JourneyFares" }
            },
            "required": [
                "origin",
                "destination"
            ],
            "additionalProperties": false
        },
        "JourneyFares": {
            "type": "array",
            "description": "A list of available journey fares found on the website.",
            "minItems": 1,
            "items": { "$ref": "#/domains/TrainBooking/types/Fare" }
        },
        "JourneyFare": {
            "type": "object",
            "description": "Train fare information.",
            "additionalProperties": false,
            "properties": {
                "fareName": {"type": "string"},
                "className": {"type": "string"},
                "cabinClass": { "$ref": "#/domains/TrainBooking/types/CabinClass" },
                "cancellation": {
                    "type": "string",
                    "description": "Fare cancellation type.",
                    "example": "rebookable",
                    "enum": ["rebookable", "non-rebookable", "refundable", "unknown"]
                },
                "price": { "$ref": "#/domains/Generic/types/Price" }
            },
            "required": [
                "cabinClass",
                "cancellation",
                "price"
            ]
        },
        "AvailableFares": {
            "type": "array",
            "description": "A list of available fares found on the website.",
            "minItems": 1,
            "items": { "$ref": "#/domains/TrainBooking/types/Fare" }
        },
        "Fare": {
            "type": "object",
            "description": "Train fare information.",
            "additionalProperties": false,
            "properties": {
                "segments": {
                    "type": "array",
                    "description": "List of change stations names.",
                    "items": { "$ref": "#/domains/TrainBooking/types/Segment" }
                },
                "fareName": {"type": "string"},
                "className": {"type": "string"},
                "cabinClass": { "$ref": "#/domains/TrainBooking/types/CabinClass" },
                "cancellation": {
                    "type": "string",
                    "description": "Fare cancellation type.",
                    "example": "rebookable",
                    "enum": ["rebookable", "non-rebookable", "refundable", "unknown"]
                },
                "price": { "$ref": "#/domains/Generic/types/Price" }
            },
            "required": [
                "cabinClass",
                "cancellation",
                "price"
            ]
        },
        "Segment": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "origin": { "$ref": "#/domains/TrainBooking/types/Itinerary" },
                "destination": { "$ref": "#/domains/TrainBooking/types/Itinerary" }
            },
            "required": [
                "origin",
                "destination"
            ]
        },
        "Transport": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "number": {
                    "type": "string",
                    "description": "Reference number of the transportation vehicle.",
                    "example": "AW 1675"
                },
                "method": {
                    "type": "string",
                    "description": "Type of transportation (ie train, bus).",
                    "enum": ["train", "bus", "tram", "metro","taxi","walking","ferry"]
                }
            },
            "required": [
                "number"
            ]
        },
        "Itinerary": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "terminalName": {
                    "type": "string",
                    "description": "Name of the terminal as found on the booking website.",
                    "example": "London Liverpool Street"
                },
                "dateTime": {
                    "type": "string",
                    "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
                    "description": "Date and time (terminal local time).",
                    "example": "2018-02-02 19:40"
                },
                "transport": { "$ref": "#/domains/TrainBooking/types/Transport" } 
            },
            "required": [
                "terminalName"
            ]
        },
        "CabinClass": {
            "type": "string",
            "enum": ["second-class", "first-class", "sleeping-car"]
        },
        "DateTimeTerminal": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string",
                    "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
                    "description": "Date and time (terminal local time).",
                    "example": "2018-02-02 19:40"
                },
                "terminalLocality": {
                    "type": "string",
                    "description": "Terminal locality, usually city name.",
                    "example": "London"
                },
                "terminalName": {
                    "type": "string",
                    "description": "Name of the terminal as found on the booking website.",
                    "example": "London Liverpool Street"
                },
                "countryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Country code of the terminal.",
                    "example": "gb"
                }
            },
            "required": [
                "dateTime",
                "terminalName"
            ],
            "additionalProperties": false
        },
        "Passengers": {
            "type": "array",
            "description": "An array with details for each passenger.",
            "pii": true,
            "minItems": 1,
            "items": { "$ref": "#/domains/TrainBooking/types/Passenger" }
        },
        "Passenger": {
            "type": "object",
            "pii": true,
            "properties": {
                "title": {
                    "type": "string",
                    "enum": [
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "First name(s) or given name(s), as specified in passport or travel document.",
                    "example": "Bob"
                },
                "middleName": {
                    "type": "string",
                    "default": "",
                    "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name or surname, as specified in passport or travel document.",
                    "example": "Smith"
                },
                "dateOfBirth": {
                    "type": "string",
                    "description": "Passenger's date of birth in YYYY-MM-DD format.",
                    "format": "date",
                    "example": "1976-01-27"
                },
                "loyaltyNumber": {
                    "type": "string"
                },
                "addAdditionalLuggage": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 3,
                    "default": 0
                },
                "document": {
                    "$ref": "#/domains/TrainBooking/types/PassengerDocument"
                }
            },
            "required": [
                "firstName",
                "lastName",
                "dateOfBirth"
            ],
            "additionalProperties": false
        },
        "Account": {
            "type": "object",
            "description": "Account information for filling in contact details.<br/>Receipts and booking references will typically be sent to specified <code>email</code>.<br/>Some websites also require registering user account, in which case <code>password</code> must be provided.",
            "pii": true,
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Account email, typically used for user sign up / sign in.<br/>Note: most websites will send receipt and/or confirmation emails when order is placed successfully. Use contactEmail when different.<br/>Automation may result in registering new user account with this email address, and may fail if account with specified email already exists. We recommend you <a href=\"https://docs.automationcloud.net/v2.0/docs/email-proxy\" target=\"_blank\" rel=\"noopener\">use an email proxy to mitigate this issue</a>.",
                    "format": "email",
                    "example": "hello@example.com"
                },
                "contactEmail": {
                    "type": "string",
                    "description": "Contact email. When this property is not set but required by the target website, account.email is used instead.",
                    "format": "email",
                    "example": "client@example.com"
                },
                "password": {
                    "type": "string",
                    "description": "May be omitted if particular website does not require user sign in / sign up. Automation may fail if password is required on a particular website but not provided. One strategy could be to always generate random passwords to create one-time account.",
                    "default": ""
                },
                "phone": {
                    "description": "Account phone number, may also be used as contact details.",
                    "$ref": "#/domains/Generic/types/Phone"
                },
                "isExisting": {
                    "description": "If value is <code>true</code> automation will try to use account details to perform sign in instead of sign up. Automation will fail if incorrect account details are specified.",
                    "type": "boolean"
                },
                "username": {
                    "type": "string",
                    "example": "john012345"
                },
                "person": {
                    "description": "When an account needs to be created for a person (first name, last name, etc), this key will be used.",
                    "$ref": "#/domains/TrainBooking/types/Person"
                }
            },
            "required": [
                "email",
                "isExisting"
            ],
            "additionalProperties": false
        },
        "Discount": {
            "type": "string",
            "minLength": 1,
            "pii": true
        },
        "Person": {
            "type": "object",
            "description": "Basic information about person's identity.",
            "pii": true,
            "properties": {
                "title": {
                    "type": "string",
                    "description": "",
                    "enum": [
                        "mr",
                        "miss",
                        "ms",
                        "mrs"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "First name(s) or given name(s), as specified in ID.",
                    "minLength": 1,
                    "example": "Bob"
                },
                "middleName": {
                    "type": "string",
                    "default": "",
                    "description": "Middle name, if applicable.<br/>This will only be used on websites which provide separate entry for middle names, otherwise it will be ignored.<br/>If middle name is essential for placing order, consider appending it to <code>firstName</code>."
                },
                "lastName": {
                    "type": "string",
                    "description": "Last name or surname, as specified in ID.",
                    "minLength": 1,
                    "example": "Smith"
                },
                "dateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "example": "2028-01-01"
                },
                "document": {
                    "$ref": "#/domains/TrainBooking/types/IdentityDocument"
                }
            },
            "required": [
                "title",
                "firstName",
                "lastName"
            ],
            "additionalProperties": false
        },
        "IdentityDocument": {
            "type": "object",
            "description": "Person ID (passport or other document). Automation may fail if this information is required by the website, but not provided.",
            "pii": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Document type.",
                    "enum": [
                        "passport",
                        "national-id"
                    ]
                },
                "number": {
                    "type": "string",
                    "description": "Document number.",
                    "example": "75 127001"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2008-01-01"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2028-01-01"
                },
                "city": {
                    "type": "string",
                    "description": "Name of city, town or other settlement.",
                    "minLength": 1,
                    "example": "New York"
                },
                "issueCountryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Code of country where the document was issued."
                }
            },
            "required": [
                "type",
                "number",
                "expirationDate",
                "issueCountryCode"
            ],
            "additionalProperties": false
        },
        "AvailableDeliveriesOrNull": {
            "oneOf": [
                {
                    "type": "array",
                    "description": "A list of available delivery options found on the page.",
                    "minItems": 1,
                    "items": { "$ref": "#/domains/TrainBooking/types/Delivery" }
                },
                {
                    "type": "null"
                }
            ]
        },
        "Delivery": {
            "type": "object",
            "description": "Ticket delivery information.",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Delivery text as provided by the insurer."
                },
                "price": { "$ref": "#/domains/Generic/types/Price" }
            },
            "required": [
                "name"
            ]
        },
        "PassengerDocument": {
            "type": "object",
            "description": "Passenger ID (passport or other travel document). Automation may fail if this information is required by website, but not provided by Client.",
            "pii": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Document type.",
                    "enum": [
                        "passport",
                        "national-id"
                    ]
                },
                "number": {
                    "type": "string",
                    "description": "Document number.",
                    "example": "75 127001"
                },
                "issueDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2008-01-01"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2028-01-01"
                },
                "issueCountryCode": {
                    "$ref": "#/domains/Generic/types/CountryCode",
                    "description": "Code of country where the document was issued."
                }
            },
            "required": [
                "type",
                "number",
                "expirationDate",
                "issueCountryCode"
            ],
            "additionalProperties": false
        },
        "VerificationCode": {
            "type": "object",
            "description": "Verification code",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "1234"
                }
            },
            "required": [
                "code"
            ]
        },
        "Options": {
            "type": "object",
            "description": "Flags for enabling optional automation features such as upsells and additional features. Clients should send <code>false</code> or omit flags if specific features are not implemented on their end.",
            "properties": {
                "priceCheck": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "BookingConfirmation": {
            "type": "object",
            "description": "Information gathered on \"Booking success\" page.",
            "properties": {
                "bookingReference": {
                    "type": "string",
                    "description": "Booking reference grabbed from the page.",
                    "example": "RL2XYZ"
                },
                "message": {
                    "type": "string",
                    "description": "Message about successful booking.",
                    "example": "Your booking was successful."
                },
                "price": {
                    "$ref": "#/domains/Generic/types/Price",
                    "description": "Price, if found on the successful booking page."
                }
            },
            "additionalProperties": false,
            "required": [
                "bookingReference"
            ]
        }
    },
    "errors": [
        {
            "code": "TripInvalid",
            "category": "client",
            "description": "Trip details are invalid."
        },
        {
            "code": "OutboundTripNotAvailable",
            "category": "client",
            "description": "Outbound trip dates/times are not available, either sold out or not found."
        },
        {
            "code": "InboundTripNotAvailable",
            "category": "client",
            "description": "Inbound trip dates/times are not available, either sold out or not found."
        },
        {
            "code": "OutboundFareNotFound",
            "category": "client",
            "description": "Given outbound fare does not match one of the options we are expecting."
        },
        {
            "code": "LoadingFailed",
            "category": "client",
            "description": "A website issue in which the page gets stuck in infinite loading."
        },
        {
            "code": "NoJourneysAvailable",
            "category": "client",
            "description": "When the search returns no results."
        },
        {
            "code": "InboundFareNotFound",
            "category": "client",
            "description": "Given inbound fare does not match one of the options we are expecting."
        },
        {
            "code": "ExtraLuggageNotAvailable",
            "category": "client",
            "description": "The website does not allow adding additional luggage."
        },
        {
            "code": "ExtraLuggageLimitExceeded",
            "category": "client",
            "description": "The website does not allow adding the amount of additional luggage specified in the input."
        },
        {
            "code": "PassengerDetailsInvalid",
            "category": "client",
            "description": "The website invalidates some of the passenger details."
        },
        {
            "code": "DocumentDetailsInvalid",
            "category": "client",
            "description": "The website invalidates the document details."
        },
        {
            "code": "SeatsNotAvailable",
            "category": "client",
            "description": "The website claims that either no seats are available, or the selected seats are not available."
        }
    ]
}
