{
  "$id": "https://ub.io/protocol/",
  "domains": {
    "Generic": {
      "description": "Generic domain contains generic definitions used in other domains.",
      "inputs": {},
      "outputs": {},
      "types": {
        "URL": {
          "type": "string",
          "format": "url",
          "title": "URL Record",
          "description": "URL Record, as defined by https://url.spec.whatwg.org/#concept-url",
          "$id": "#Generic.URL"
        },
        "Account": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "password": {
              "type": "string",
              "default": ""
            },
            "phone": {
              "$ref": "#Generic.Phone"
            },
            "isExisting": {
              "type": "boolean"
            }
          },
          "required": [
            "email",
            "phone",
            "isExisting"
          ],
          "$id": "#Generic.Account"
        },
        "Person": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string"
            },
            "middleName": {
              "type": "string",
              "default": ""
            },
            "lastName": {
              "type": "string"
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName"
          ],
          "$id": "#Generic.Person"
        },
        "Address": {
          "type": "object",
          "properties": {
            "line1": {
              "type": "string",
              "description": "Street name with house number"
            },
            "line2": {
              "type": "string",
              "description": "Additional address info"
            },
            "city": {
              "type": "string"
            },
            "postcode": {
              "type": "string"
            },
            "countryCode": {
              "$ref": "#Generic.CountryCode"
            },
            "countrySubdivision": {
              "$ref": "#Generic.CountrySubdivision"
            }
          },
          "required": [
            "line1",
            "line2",
            "city",
            "postcode",
            "countryCode",
            "countrySubdivision"
          ],
          "$id": "#Generic.Address"
        },
        "Phone": {
          "type": "object",
          "properties": {
            "countryCode": {
              "$ref": "#Generic.CountryCode"
            },
            "number": {
              "type": "string",
              "minLength": 9,
              "description": "Mobile phone number (numbers only, excluding country code)"
            }
          },
          "required": [
            "countryCode",
            "number"
          ],
          "$id": "#Generic.Phone"
        },
        "PriceConsent": {
          "properties": {
            "price": {
              "$ref": "#Generic.Price"
            }
          },
          "additionalProperties": false,
          "required": [
            "price"
          ],
          "$id": "#Generic.PriceConsent"
        },
        "Price": {
          "type": "object",
          "properties": {
            "currencyCode": {
              "$ref": "#Generic.CurrencyCode"
            },
            "value": {
              "type": "integer",
              "minimum": 0,
              "description": "A positive integer in the smallest currency unit (100 for Â£1.00)."
            }
          },
          "required": [
            "currencyCode",
            "value"
          ],
          "additionalProperties": false,
          "$id": "#Generic.Price"
        },
        "Payment": {
          "type": "object",
          "properties": {
            "card": {
              "$ref": "#Generic.PaymentCard"
            },
            "person": {
              "$ref": "#Generic.Person"
            },
            "address": {
              "$ref": "#Generic.Address"
            }
          },
          "required": [
            "card",
            "person",
            "address"
          ],
          "$id": "#Generic.Payment"
        },
        "PaymentCard": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "debit",
                "credit"
              ]
            },
            "brand": {
              "type": "string",
              "enum": [
                "visa",
                "mastercard",
                "amex",
                "discover"
              ]
            },
            "panToken": {
              "type": "string",
              "minLength": 20
            },
            "expirationDate": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])$",
              "minLength": 7,
              "maxLength": 7
            },
            "name": {
              "type": "string"
            },
            "cvv": {
              "type": "string",
              "minLength": 3,
              "maxLength": 4
            }
          },
          "required": [
            "type",
            "brand",
            "expirationDate",
            "name",
            "cvv"
          ],
          "$id": "#Generic.PaymentCard"
        },
        "CountryCode": {
          "type": "string",
          "title": "ISO 3166-1 alpha-2 Country Code",
          "description": "ISO 3166-1 alpha-2 code representing the country. United Kingdom is officially assigned the alpha-2 code gb rather than uk. Lowercase.",
          "minLength": 2,
          "maxLength": 2,
          "enum": [
            "af",
            "ax",
            "al",
            "dz",
            "as",
            "ad",
            "ao",
            "ai",
            "aq",
            "ag",
            "ar",
            "am",
            "aw",
            "au",
            "at",
            "az",
            "bs",
            "bh",
            "bd",
            "bb",
            "by",
            "be",
            "bz",
            "bj",
            "bm",
            "bt",
            "bo",
            "bq",
            "ba",
            "bw",
            "bv",
            "br",
            "io",
            "bn",
            "bg",
            "bf",
            "bi",
            "kh",
            "cm",
            "ca",
            "cv",
            "ky",
            "cf",
            "td",
            "cl",
            "cn",
            "cx",
            "cc",
            "co",
            "km",
            "cg",
            "cd",
            "ck",
            "cr",
            "ci",
            "hr",
            "cu",
            "cw",
            "cy",
            "cz",
            "dk",
            "dj",
            "dm",
            "do",
            "ec",
            "eg",
            "sv",
            "gq",
            "er",
            "ee",
            "et",
            "fk",
            "fo",
            "fj",
            "fi",
            "fr",
            "gf",
            "pf",
            "tf",
            "ga",
            "gm",
            "ge",
            "de",
            "gh",
            "gi",
            "gr",
            "gl",
            "gd",
            "gp",
            "gu",
            "gt",
            "gg",
            "gn",
            "gw",
            "gy",
            "ht",
            "hm",
            "va",
            "hn",
            "hk",
            "hu",
            "is",
            "in",
            "id",
            "ir",
            "iq",
            "ie",
            "im",
            "il",
            "it",
            "jm",
            "jp",
            "je",
            "jo",
            "kz",
            "ke",
            "ki",
            "kp",
            "kr",
            "kw",
            "kg",
            "la",
            "lv",
            "lb",
            "ls",
            "lr",
            "ly",
            "li",
            "lt",
            "lu",
            "mo",
            "mk",
            "mg",
            "mw",
            "my",
            "mv",
            "ml",
            "mt",
            "mh",
            "mq",
            "mr",
            "mu",
            "yt",
            "mx",
            "fm",
            "md",
            "mc",
            "mn",
            "me",
            "ms",
            "ma",
            "mz",
            "mm",
            "na",
            "nr",
            "np",
            "nl",
            "nc",
            "nz",
            "ni",
            "ne",
            "ng",
            "nu",
            "nf",
            "mp",
            "no",
            "om",
            "pk",
            "pw",
            "ps",
            "pa",
            "pg",
            "py",
            "pe",
            "ph",
            "pn",
            "pl",
            "pt",
            "pr",
            "qa",
            "re",
            "ro",
            "ru",
            "rw",
            "bl",
            "sh",
            "kn",
            "lc",
            "mf",
            "pm",
            "vc",
            "ws",
            "sm",
            "st",
            "sa",
            "sn",
            "rs",
            "sc",
            "sl",
            "sg",
            "sx",
            "sk",
            "si",
            "sb",
            "so",
            "za",
            "gs",
            "ss",
            "es",
            "lk",
            "sd",
            "sr",
            "sj",
            "sz",
            "se",
            "ch",
            "sy",
            "tw",
            "tj",
            "tz",
            "th",
            "tl",
            "tg",
            "tk",
            "to",
            "tt",
            "tn",
            "tr",
            "tm",
            "tc",
            "tv",
            "ug",
            "ua",
            "ae",
            "gb",
            "us",
            "um",
            "uy",
            "uz",
            "vu",
            "ve",
            "vn",
            "vg",
            "vi",
            "wf",
            "eh",
            "ye",
            "zm",
            "zw"
          ],
          "$id": "#Generic.CountryCode"
        },
        "CountrySubdivision": {
          "type": "string",
          "description": "Depends on country. For the US, the 2 letter state code, lowercased, e.g. 'ca' for California; For Canada, the 2 letter lowercased province code, e.g. 'qc' for Quebec; For Germany, the 2 letter lowercased state code, e.g. 'nw' for Nordrhein-Westfalen; For Romania, the 2 or 1 letter lowercased county code, e.g. 'if' for Ilfov except 'b' for Bucharest; For the United Kingdom, the 2 letter lowecased province, e.g. 'm7' for York; For Spain, the 2 or 1 letter lowercased province code, e.g. 'pm' for Palma, 'o' for Ovideo.",
          "$id": "#Generic.CountrySubdivision"
        },
        "CurrencyCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "title": "ISO 4217 Currency Code",
          "description": "ISO 4217 3-letter code representing the currency. Lowercase.",
          "enum": [
            "all",
            "afn",
            "ars",
            "awg",
            "aud",
            "azn",
            "bsd",
            "bbd",
            "byn",
            "bzd",
            "bmd",
            "bob",
            "bam",
            "bwp",
            "bgn",
            "brl",
            "bnd",
            "khr",
            "cad",
            "kyd",
            "clp",
            "cny",
            "cop",
            "crc",
            "hrk",
            "cup",
            "czk",
            "dkk",
            "dop",
            "xcd",
            "egp",
            "svc",
            "eur",
            "fkp",
            "fjd",
            "ghs",
            "gip",
            "gtq",
            "ggp",
            "gyd",
            "hnl",
            "hkd",
            "huf",
            "isk",
            "inr",
            "idr",
            "irr",
            "imp",
            "ils",
            "jmd",
            "jpy",
            "jep",
            "kzt",
            "kpw",
            "krw",
            "kgs",
            "lak",
            "lbp",
            "lrd",
            "mkd",
            "myr",
            "mur",
            "mxn",
            "mnt",
            "mzn",
            "nad",
            "npr",
            "ang",
            "nzd",
            "nio",
            "ngn",
            "nok",
            "omr",
            "pkr",
            "pab",
            "pyg",
            "pen",
            "php",
            "pln",
            "qar",
            "ron",
            "rub",
            "shp",
            "sar",
            "rsd",
            "scr",
            "sgd",
            "sbd",
            "sos",
            "zar",
            "lkr",
            "sek",
            "chf",
            "srd",
            "syp",
            "twd",
            "thb",
            "ttd",
            "try",
            "tvd",
            "uah",
            "gbp",
            "usd",
            "uyu",
            "uzs",
            "vef",
            "vnd",
            "yer",
            "zwd"
          ],
          "$id": "#Generic.CurrencyCode"
        }
      },
      "$id": "#Generic"
    },
    "FlightBooking": {
      "description": "Allows automating airplane tickets booking and collecting related information.",
      "input": {
        "properties": {
          "url": {
            "$ref": "#Generic.URL",
          },
          "flight": {
            "$ref": "#FlightBooking.Flight",
          },
          "account": {
            "$ref": "#Generic.Account",
          },
          "passengers": {
            "$ref": "#FlightBooking.Passengers",
          },
          "payment": {
            "$ref": "#Generic.Payment",
          },
          "finalPriceConsent": {
            "$ref": "#Generic.PriceConsent",
          }
        },
        "additionalProperties": false
      },
      "inputs": {
        "url": {
          "$ref": "#Generic.URL",
          "$id": "#FlightBooking.url"
        },
        "flight": {
          "$ref": "#FlightBooking.Flight",
          "$id": "#FlightBooking.flight"
        },
        "account": {
          "$ref": "#Generic.Account",
          "$id": "#FlightBooking.account"
        },
        "passengers": {
          "$ref": "#FlightBooking.Passengers",
          "$id": "#FlightBooking.passengers"
        },
        "payment": {
          "$ref": "#Generic.Payment",
          "$id": "#FlightBooking.payment"
        },
        "finalPriceConsent": {
          "$ref": "#Generic.PriceConsent",
          "description": "Client's consent for final price. Must exactly match the <code>finalPrice</code> object.",
          "$id": "#FlightBooking.finalPriceConsent"
        }
      },
      "outputs": {
        "finalPrice": {
          "description": "Emitted immediately before placing order, when final price is available.",
          "$ref": "#Generic.PriceConsent",
          "$id": "#FlightBooking.finalPrice"
        },
        "bookingConfirmation": {
          "$ref": "#FlightBooking.BookingConfirmation",
          "$id": "#FlightBooking.bookingConfirmation"
        }
      },
      "types": {
        "Flight": {
          "type": "object",
          "properties": {
            "from": {
              "$ref": "#FlightBooking.DatePlace"
            },
            "to": {
              "$ref": "#FlightBooking.DatePlace"
            },
            "return": {
              "$ref": "#FlightBooking.ReturnFlight"
            },
            "price": {
              "$ref": "#Generic.Price"
            },
            "cabinClass": {
              "type": "string"
            }
          },
          "required": [
            "from",
            "to",
            "price"
          ],
          "additionalProperties": true,
          "$id": "#FlightBooking.Flight"
        },
        "ReturnFlight": {
          "type": "object",
          "properties": {
            "from": {
              "$ref": "#FlightBooking.DatePlace"
            },
            "to": {
              "$ref": "#FlightBooking.DatePlace"
            }
          },
          "required": [
            "from",
            "to"
          ],
          "$id": "#FlightBooking.ReturnFlight"
        },
        "DatePlace": {
          "type": "object",
          "properties": {
            "countryCode": {
              "$ref": "#Generic.CountryCode"
            },
            "dateTime": {
              "type": "string",
              "pattern": "^20[0-9]{2}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-3][0-9]) [012][0-9]:[0-5][0-9]$",
              "description": "Date and time of flight (airport local time)"
            },
            "airportCode": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^[A-Z]{3}$",
              "description": "International Air Transport Association airport code"
            }
          },
          "required": [
            "dateTime",
            "airportCode"
          ],
          "$id": "#FlightBooking.DatePlace"
        },
        "Passengers": {
          "type": "array",
          "minItems": 1,
          "maxItems": 9,
          "items": {
            "$ref": "#FlightBooking.Passenger"
          },
          "$id": "#FlightBooking.Passengers"
        },
        "Passenger": {
          "type": "object",
          "properties": {
            "title": {
              "enum": [
                "mr",
                "miss",
                "ms",
                "mrs"
              ]
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "middleName": {
              "type": "string",
              "default": ""
            },
            "dateOfBirth": {
              "type": "string",
              "format": "date"
            },
            "addAdditionalLuggage": {
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0
            },
            "id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "expDate": {
                  "type": "string",
                  "format": "date"
                },
                "countryCode": {
                  "$ref": "#Generic.CountryCode"
                }
              }
            }
          },
          "required": [
            "title",
            "firstName",
            "lastName",
            "dateOfBirth",
            "hasHoldLuggage"
          ],
          "$id": "#FlightBooking.Passenger"
        },
        "BookingConfirmation": {
          "description": "Emitted on \"Booking success\" page.",
          "properties": {
            "bookingReference": {
              "type": "string",
              "description": "Booking reference grabbed from the page."
            },
            "message": {
              "type": "string",
              "description": "Message about successful booking."
            },
            "price": {
              "$ref": "#Generic.Price",
              "description": "Price, if found on the successful booking page."
            }
          },
          "additionalProperties": false,
          "required": [
            "bookingReference"
          ],
          "$id": "#FlightBooking.BookingConfirmation"
        }
      },
      "$id": "#FlightBooking"
    },
    "Internal": {
      "description": "Internal domain for testing platform features.",
      "inputs": {
        "url": {
          "$ref": "#Generic.URL",
          "$id": "#Internal.url"
        }
      },
      "outputs": {
        "object": {
          "$ref": "#Internal.Object",
          "$id": "#Internal.object"
        }
      },
      "types": {
        "Object": {
          "type": "object",
          "description": "An object of arbitrary structure.",
          "$id": "#Internal.Object"
        }
      },
      "$id": "#Internal"
    }
  }
}
